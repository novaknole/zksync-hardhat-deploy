{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aragon/osx-commons-contracts/=node_modules/@aragon/osx-commons-contracts/\",\":@aragon/osx/=node_modules/@aragon/osx/\",\":@ensdomains/ens-contracts/=node_modules/@ensdomains/ens-contracts/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/openzeppelin-foundry-upgrades/=node_modules/@openzeppelin/openzeppelin-foundry-upgrades/src/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@aragon/osx-commons-contracts/=node_modules/@aragon/osx-commons-contracts/","@aragon/osx/=node_modules/@aragon/osx/","@ensdomains/ens-contracts/=node_modules/@ensdomains/ens-contracts/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@openzeppelin/openzeppelin-foundry-upgrades/=node_modules/@openzeppelin/openzeppelin-foundry-upgrades/src/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":"ContextUpgradeable"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"keccak256":"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef","urls":["bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95","dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":2210,"contract":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":2213,"contract":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2889,"contract":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":2891,"exportedSymbols":{"ContextUpgradeable":[2890],"Initializable":[2372]},"nodeType":"SourceUnit","src":"101:1383:21","nodes":[{"id":2841,"nodeType":"PragmaDirective","src":"101:23:21","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":2843,"nodeType":"ImportDirective","src":"125:63:21","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":2891,"sourceUnit":2373,"symbolAliases":[{"foreign":{"id":2842,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"133:13:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2890,"nodeType":"ContractDefinition","src":"687:796:21","nodes":[{"id":2852,"nodeType":"FunctionDefinition","src":"747:59:21","nodes":[],"body":{"id":2851,"nodeType":"Block","src":"799:7:21","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":2849,"kind":"modifierInvocation","modifierName":{"id":2848,"name":"onlyInitializing","nameLocations":["782:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":2317,"src":"782:16:21"},"nodeType":"ModifierInvocation","src":"782:16:21"}],"name":"__Context_init","nameLocation":"756:14:21","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[],"src":"770:2:21"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[],"src":"799:0:21"},"scope":2890,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":2858,"nodeType":"FunctionDefinition","src":"812:69:21","nodes":[],"body":{"id":2857,"nodeType":"Block","src":"874:7:21","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":2855,"kind":"modifierInvocation","modifierName":{"id":2854,"name":"onlyInitializing","nameLocations":["857:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":2317,"src":"857:16:21"},"nodeType":"ModifierInvocation","src":"857:16:21"}],"name":"__Context_init_unchained","nameLocation":"821:24:21","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[],"src":"845:2:21"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[],"src":"874:0:21"},"scope":2890,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":2867,"nodeType":"FunctionDefinition","src":"886:96:21","nodes":[],"body":{"id":2866,"nodeType":"Block","src":"948:34:21","nodes":[],"statements":[{"expression":{"expression":{"id":2863,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:21","memberName":"sender","nodeType":"MemberAccess","src":"965:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2862,"id":2865,"nodeType":"Return","src":"958:17:21"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:21","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[],"src":"905:2:21"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2867,"src":"939:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:21"},"scope":2890,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":2876,"nodeType":"FunctionDefinition","src":"988:99:21","nodes":[],"body":{"id":2875,"nodeType":"Block","src":"1055:32:21","nodes":[],"statements":[{"expression":{"expression":{"id":2872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:21","memberName":"data","nodeType":"MemberAccess","src":"1072:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2871,"id":2874,"nodeType":"Return","src":"1065:15:21"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:21","parameters":{"id":2868,"nodeType":"ParameterList","parameters":[],"src":"1005:2:21"},"returnParameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2876,"src":"1039:14:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2869,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:21"},"scope":2890,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":2884,"nodeType":"FunctionDefinition","src":"1093:97:21","nodes":[],"body":{"id":2883,"nodeType":"Block","src":"1165:25:21","nodes":[],"statements":[{"expression":{"hexValue":"30","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2880,"id":2882,"nodeType":"Return","src":"1175:8:21"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:21","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[],"src":"1122:2:21"},"returnParameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2884,"src":"1156:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:21"},"scope":2890,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":2889,"nodeType":"VariableDeclaration","src":"1455:25:21","nodes":[],"constant":false,"documentation":{"id":2885,"nodeType":"StructuredDocumentation","src":"1196:254:21","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"1475:5:21","scope":2890,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2888,"length":{"hexValue":"3530","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:21","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":2845,"name":"Initializable","nameLocations":["727:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":2372,"src":"727:13:21"},"id":2846,"nodeType":"InheritanceSpecifier","src":"727:13:21"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"190:496:21","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[2890,2372],"name":"ContextUpgradeable","nameLocation":"705:18:21","scope":2891,"usedErrors":[],"usedEvents":[2218]}],"license":"MIT"},"id":21}
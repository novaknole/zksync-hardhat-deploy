{"abi":[{"type":"function","name":"canExecute","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"createProposal","inputs":[{"name":"_metadata","type":"bytes","internalType":"bytes"},{"name":"_actions","type":"tuple[]","internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"_startDate","type":"uint64","internalType":"uint64"},{"name":"_endDate","type":"uint64","internalType":"uint64"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"customProposalParamsABI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"execute","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasSucceeded","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"proposalCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"supportsInterface","inputs":[{"name":"_interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"ProposalCreated","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"creator","type":"address","indexed":true,"internalType":"address"},{"name":"startDate","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"endDate","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"metadata","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"actions","type":"tuple[]","indexed":false,"internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"allowFailureMap","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProposalExecuted","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"FunctionDeprecated","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"canExecute(uint256)":"cc63604a","createProposal(bytes,(address,uint256,bytes)[],uint64,uint64,bytes)":"ea65ab82","customProposalParamsABI()":"3d3f4b1b","execute(uint256)":"fe0d94c1","hasSucceeded(uint256)":"c218c132","proposalCount()":"da35c664","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FunctionDeprecated\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startDate\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endDate\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowFailureMap\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"canExecute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Action[]\",\"name\":\"_actions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"_startDate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_endDate\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customProposalParamsABI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"hasSucceeded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon X - 2022-2024\",\"custom:security-contact\":\"sirt@aragon.org\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"ProposalCreated(uint256,address,uint64,uint64,bytes,(address,uint256,bytes)[],uint256)\":{\"params\":{\"actions\":\"The actions that will be executed if the proposal passes.\",\"allowFailureMap\":\"A bitmap allowing the proposal to succeed, even if individual actions might revert.     If the bit at index `i` is 1, the proposal succeeds even if the `i`th action reverts.     A failure map value of 0 requires every action to not revert.\",\"creator\":\"The creator of the proposal.\",\"endDate\":\"The end date of the proposal in seconds.\",\"metadata\":\"The metadata of the proposal.\",\"proposalId\":\"The ID of the proposal.\",\"startDate\":\"The start date of the proposal in seconds.\"}},\"ProposalExecuted(uint256)\":{\"params\":{\"proposalId\":\"The ID of the proposal.\"}}},\"kind\":\"dev\",\"methods\":{\"canExecute(uint256)\":{\"params\":{\"_proposalId\":\"The ID of the proposal to be checked.\"},\"returns\":{\"_0\":\"True if the proposal can be executed, false otherwise.\"}},\"createProposal(bytes,(address,uint256,bytes)[],uint64,uint64,bytes)\":{\"params\":{\"_actions\":\"The actions that will be executed after the proposal passes.\",\"_data\":\"The additional abi-encoded data to include more necessary fields.\",\"_endDate\":\"The end date of the proposal.\",\"_metadata\":\"The metadata of the proposal.\",\"_startDate\":\"The start date of the proposal.\"},\"returns\":{\"proposalId\":\"The id of the proposal.\"}},\"customProposalParamsABI()\":{\"details\":\"Used for UI to easily detect what extra params the contract expects.\",\"returns\":{\"_0\":\"ABI of params in `data` of `createProposal`.\"}},\"execute(uint256)\":{\"params\":{\"_proposalId\":\"The ID of the proposal to be executed.\"}},\"hasSucceeded(uint256)\":{\"details\":\"Note that this must not include time window checks and only make a decision based on the thresholds.\",\"params\":{\"_proposalId\":\"The id of the proposal.\"},\"returns\":{\"_0\":\"Returns if proposal has been succeeded or not without including time window checks.\"}},\"proposalCount()\":{\"details\":\"This function is deprecated but remains in the interface for backward compatibility.      It now reverts to prevent ambiguity.\",\"returns\":{\"_0\":\"The proposal count.\"}},\"supportsInterface(bytes4)\":{\"details\":\"In addition to the current interfaceId, also support previous version of the interfaceId      that did not include the following functions:      `createProposal`, `hasSucceeded`, `execute`, `canExecute`, `customProposalParamsABI`.\",\"params\":{\"_interfaceId\":\"The ID of the interface.\"},\"returns\":{\"_0\":\"Returns `true` if the interface is supported.\"}}},\"title\":\"ProposalUpgradeable\",\"version\":1},\"userdoc\":{\"events\":{\"ProposalCreated(uint256,address,uint64,uint64,bytes,(address,uint256,bytes)[],uint256)\":{\"notice\":\"Emitted when a proposal is created.\"},\"ProposalExecuted(uint256)\":{\"notice\":\"Emitted when a proposal is executed.\"}},\"kind\":\"user\",\"methods\":{\"canExecute(uint256)\":{\"notice\":\"Checks if a proposal can be executed.\"},\"createProposal(bytes,(address,uint256,bytes)[],uint64,uint64,bytes)\":{\"notice\":\"Creates a new proposal.\"},\"customProposalParamsABI()\":{\"notice\":\"The human-readable abi format for extra params included in `data` of `createProposal`.\"},\"execute(uint256)\":{\"notice\":\"Executes a proposal.\"},\"hasSucceeded(uint256)\":{\"notice\":\"Whether proposal succeeded or not.\"},\"proposalCount()\":{\"notice\":\"Returns the proposal count which determines the next proposal ID.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if this or the parent contract supports an interface by its ID.\"}},\"notice\":\"An abstract contract containing the traits and internal functionality to create and execute proposals         that can be inherited by upgradeable DAO plugins.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol\":\"ProposalUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aragon/osx-commons-contracts/=node_modules/@aragon/osx-commons-contracts/\",\":@aragon/osx/=node_modules/@aragon/osx/\",\":@ensdomains/ens-contracts/=node_modules/@ensdomains/ens-contracts/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/openzeppelin-foundry-upgrades/=node_modules/@openzeppelin/openzeppelin-foundry-upgrades/src/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@aragon/osx-commons-contracts/src/executors/IExecutor.sol\":{\"keccak256\":\"0xca77e59fb9e78b41329d7bd8a8f120b4a14184c35443bccd428d93596755ca09\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c14ce402448bec0a8db654efb1c8a30069a7bda5e4ccf10cce59b18936b6fe0\",\"dweb:/ipfs/QmXoYPBGZPftewd71FHDyWJ94WLpXAChPnHbAWGpQVmNin\"]},\"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/IProposal.sol\":{\"keccak256\":\"0x4977794f683daa6c957020c0a4122700ff020dfbcb2102bdf8855e910ba0c7ae\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e3087be3ece285407691ed7bc930b389deecfd635552259440e56406c960f51a\",\"dweb:/ipfs/QmYrJT7KZtaKUWJeRSwjCJJUPx6iWa7EJEim5Tkm2FjhpF\"]},\"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol\":{\"keccak256\":\"0x3b17fddba52e2e374b290f932fb3b8f3279cc766390335d26152efd05b0dffa1\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2cc86c7a98e0484ca3c0ed9897dead306fbe1a97ce94a17a180df0d27916ed41\",\"dweb:/ipfs/QmQb354MJBKK8KmMNZuUHBQGhjBAA1PP9iiCraVRZ4DNr2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"FunctionDeprecated"},{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256","indexed":true},{"internalType":"address","name":"creator","type":"address","indexed":true},{"internalType":"uint64","name":"startDate","type":"uint64","indexed":false},{"internalType":"uint64","name":"endDate","type":"uint64","indexed":false},{"internalType":"bytes","name":"metadata","type":"bytes","indexed":false},{"internalType":"struct Action[]","name":"actions","type":"tuple[]","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"indexed":false},{"internalType":"uint256","name":"allowFailureMap","type":"uint256","indexed":false}],"type":"event","name":"ProposalCreated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256","indexed":true}],"type":"event","name":"ProposalExecuted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"stateMutability":"view","type":"function","name":"canExecute","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"_metadata","type":"bytes"},{"internalType":"struct Action[]","name":"_actions","type":"tuple[]","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}]},{"internalType":"uint64","name":"_startDate","type":"uint64"},{"internalType":"uint64","name":"_endDate","type":"uint64"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createProposal","outputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"customProposalParamsABI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"execute"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"stateMutability":"view","type":"function","name":"hasSucceeded","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"proposalCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes4","name":"_interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"canExecute(uint256)":{"params":{"_proposalId":"The ID of the proposal to be checked."},"returns":{"_0":"True if the proposal can be executed, false otherwise."}},"createProposal(bytes,(address,uint256,bytes)[],uint64,uint64,bytes)":{"params":{"_actions":"The actions that will be executed after the proposal passes.","_data":"The additional abi-encoded data to include more necessary fields.","_endDate":"The end date of the proposal.","_metadata":"The metadata of the proposal.","_startDate":"The start date of the proposal."},"returns":{"proposalId":"The id of the proposal."}},"customProposalParamsABI()":{"details":"Used for UI to easily detect what extra params the contract expects.","returns":{"_0":"ABI of params in `data` of `createProposal`."}},"execute(uint256)":{"params":{"_proposalId":"The ID of the proposal to be executed."}},"hasSucceeded(uint256)":{"details":"Note that this must not include time window checks and only make a decision based on the thresholds.","params":{"_proposalId":"The id of the proposal."},"returns":{"_0":"Returns if proposal has been succeeded or not without including time window checks."}},"proposalCount()":{"details":"This function is deprecated but remains in the interface for backward compatibility.      It now reverts to prevent ambiguity.","returns":{"_0":"The proposal count."}},"supportsInterface(bytes4)":{"details":"In addition to the current interfaceId, also support previous version of the interfaceId      that did not include the following functions:      `createProposal`, `hasSucceeded`, `execute`, `canExecute`, `customProposalParamsABI`.","params":{"_interfaceId":"The ID of the interface."},"returns":{"_0":"Returns `true` if the interface is supported."}}},"version":1},"userdoc":{"kind":"user","methods":{"canExecute(uint256)":{"notice":"Checks if a proposal can be executed."},"createProposal(bytes,(address,uint256,bytes)[],uint64,uint64,bytes)":{"notice":"Creates a new proposal."},"customProposalParamsABI()":{"notice":"The human-readable abi format for extra params included in `data` of `createProposal`."},"execute(uint256)":{"notice":"Executes a proposal."},"hasSucceeded(uint256)":{"notice":"Whether proposal succeeded or not."},"proposalCount()":{"notice":"Returns the proposal count which determines the next proposal ID."},"supportsInterface(bytes4)":{"notice":"Checks if this or the parent contract supports an interface by its ID."}},"version":1}},"settings":{"remappings":["@aragon/osx-commons-contracts/=node_modules/@aragon/osx-commons-contracts/","@aragon/osx/=node_modules/@aragon/osx/","@ensdomains/ens-contracts/=node_modules/@ensdomains/ens-contracts/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@openzeppelin/openzeppelin-foundry-upgrades/=node_modules/@openzeppelin/openzeppelin-foundry-upgrades/src/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol":"ProposalUpgradeable"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@aragon/osx-commons-contracts/src/executors/IExecutor.sol":{"keccak256":"0xca77e59fb9e78b41329d7bd8a8f120b4a14184c35443bccd428d93596755ca09","urls":["bzz-raw://2c14ce402448bec0a8db654efb1c8a30069a7bda5e4ccf10cce59b18936b6fe0","dweb:/ipfs/QmXoYPBGZPftewd71FHDyWJ94WLpXAChPnHbAWGpQVmNin"],"license":"AGPL-3.0-or-later"},"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/IProposal.sol":{"keccak256":"0x4977794f683daa6c957020c0a4122700ff020dfbcb2102bdf8855e910ba0c7ae","urls":["bzz-raw://e3087be3ece285407691ed7bc930b389deecfd635552259440e56406c960f51a","dweb:/ipfs/QmYrJT7KZtaKUWJeRSwjCJJUPx6iWa7EJEim5Tkm2FjhpF"],"license":"AGPL-3.0-or-later"},"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol":{"keccak256":"0x3b17fddba52e2e374b290f932fb3b8f3279cc766390335d26152efd05b0dffa1","urls":["bzz-raw://2cc86c7a98e0484ca3c0ed9897dead306fbe1a97ce94a17a180df0d27916ed41","dweb:/ipfs/QmQb354MJBKK8KmMNZuUHBQGhjBAA1PP9iiCraVRZ4DNr2"],"license":"AGPL-3.0-or-later"},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"keccak256":"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d","urls":["bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912","dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"keccak256":"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1","urls":["bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89","dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"keccak256":"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09","urls":["bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758","dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":2210,"contract":"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol:ProposalUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":2213,"contract":"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol:ProposalUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3312,"contract":"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol:ProposalUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1595,"contract":"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol:ProposalUpgradeable","label":"proposalCounter","offset":0,"slot":"51","type":"t_struct(Counter)2896_storage"},{"astId":1687,"contract":"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol:ProposalUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568","base":"t_uint256"},"t_array(t_uint256)50_storage":{"encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_struct(Counter)2896_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","numberOfBytes":"32","members":[{"astId":2895,"contract":"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol:ProposalUpgradeable","label":"_value","offset":0,"slot":"0","type":"t_uint256"}]},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"ast":{"absolutePath":"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol","id":1689,"exportedSymbols":{"CountersUpgradeable":[2964],"ERC165Upgradeable":[3313],"IProposal":[1572],"ProposalUpgradeable":[1688]},"nodeType":"SourceUnit","src":"47:2796:10","nodes":[{"id":1574,"nodeType":"PragmaDirective","src":"47:23:10","nodes":[],"literals":["solidity","^","0.8",".8"]},{"id":1576,"nodeType":"ImportDirective","src":"72:102:10","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","nameLocation":"-1:-1:-1","scope":1689,"sourceUnit":2965,"symbolAliases":[{"foreign":{"id":1575,"name":"CountersUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"80:19:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1578,"nodeType":"ImportDirective","src":"175:112:10","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","nameLocation":"-1:-1:-1","scope":1689,"sourceUnit":3314,"symbolAliases":[{"foreign":{"id":1577,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"183:17:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1580,"nodeType":"ImportDirective","src":"289:42:10","nodes":[],"absolutePath":"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/IProposal.sol","file":"./IProposal.sol","nameLocation":"-1:-1:-1","scope":1689,"sourceUnit":1573,"symbolAliases":[{"foreign":{"id":1579,"name":"IProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"297:9:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1688,"nodeType":"ContractDefinition","src":"618:2224:10","nodes":[{"id":1589,"nodeType":"UsingForDirective","src":"694:58:10","nodes":[],"global":false,"libraryName":{"id":1586,"name":"CountersUpgradeable","nameLocations":["700:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"700:19:10"},"typeName":{"id":1588,"nodeType":"UserDefinedTypeName","pathNode":{"id":1587,"name":"CountersUpgradeable.Counter","nameLocations":["724:19:10","744:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2896,"src":"724:27:10"},"referencedDeclaration":2896,"src":"724:27:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2896_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"id":1591,"nodeType":"ErrorDefinition","src":"758:27:10","nodes":[],"errorSelector":"1bebc115","name":"FunctionDeprecated","nameLocation":"764:18:10","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[],"src":"782:2:10"}},{"id":1595,"nodeType":"VariableDeclaration","src":"856:51:10","nodes":[],"constant":false,"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"791:60:10","text":"@notice The incremental ID for proposals and executions."},"mutability":"mutable","name":"proposalCounter","nameLocation":"892:15:10","scope":1688,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2896_storage","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1594,"nodeType":"UserDefinedTypeName","pathNode":{"id":1593,"name":"CountersUpgradeable.Counter","nameLocations":["856:19:10","876:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2896,"src":"856:27:10"},"referencedDeclaration":2896,"src":"856:27:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2896_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"private"},{"id":1606,"nodeType":"FunctionDefinition","src":"944:116:10","nodes":[],"body":{"id":1605,"nodeType":"Block","src":"1016:44:10","nodes":[],"statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1602,"name":"FunctionDeprecated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"1033:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1033:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1604,"nodeType":"RevertStatement","src":"1026:27:10"}]},"baseFunctions":[1571],"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"914:25:10","text":"@inheritdoc IProposal"},"functionSelector":"da35c664","implemented":true,"kind":"function","modifiers":[],"name":"proposalCount","nameLocation":"953:13:10","overrides":{"id":1598,"nodeType":"OverrideSpecifier","overrides":[],"src":"989:8:10"},"parameters":{"id":1597,"nodeType":"ParameterList","parameters":[],"src":"966:2:10"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"1007:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:9:10"},"scope":1688,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":1633,"nodeType":"FunctionDefinition","src":"1292:187:10","nodes":[],"body":{"id":1632,"nodeType":"Block","src":"1374:105:10","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1619,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1420:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1426:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"1420:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1621,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1435:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1441:6:10","memberName":"number","nodeType":"MemberAccess","src":"1435:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1625,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1457:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_ProposalUpgradeable_$1688","typeString":"contract ProposalUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProposalUpgradeable_$1688","typeString":"contract ProposalUpgradeable"}],"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1449:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"1449:7:10","typeDescriptions":{}}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1449:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1627,"name":"_salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1464:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1617,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1409:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1413:6:10","memberName":"encode","nodeType":"MemberAccess","src":"1409:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1409:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1616,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1399:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1391:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:10","typeDescriptions":{}}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1391:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1613,"id":1631,"nodeType":"Return","src":"1384:88:10"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"1066:221:10","text":"@notice Creates a proposal Id.\n @dev Uses block number and chain id to ensure more probability of uniqueness.\n @param _salt The extra salt to help with uniqueness.\n @return The id of the proposal."},"implemented":true,"kind":"function","modifiers":[],"name":"_createProposalId","nameLocation":"1301:17:10","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"_salt","nameLocation":"1327:5:10","nodeType":"VariableDeclaration","scope":1633,"src":"1319:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1319:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1318:15:10"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"1365:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1364:9:10"},"scope":1688,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":1682,"nodeType":"FunctionDefinition","src":"1947:551:10","nodes":[],"body":{"id":1681,"nodeType":"Block","src":"2039:459:10","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1642,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"2068:12:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1644,"name":"IProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2101:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProposal_$1572_$","typeString":"type(contract IProposal)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IProposal_$1572_$","typeString":"type(contract IProposal)"}],"id":1643,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2096:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2096:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IProposal_$1572","typeString":"type(contract IProposal)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2112:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"2096:27:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":1647,"name":"IProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2142:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProposal_$1572_$","typeString":"type(contract IProposal)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2152:14:10","memberName":"createProposal","nodeType":"MemberAccess","referencedDeclaration":1537,"src":"2142:24:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_bytes_memory_ptr_$_t_array$_t_struct$_Action_$118_memory_ptr_$dyn_memory_ptr_$_t_uint64_$_t_uint64_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function IProposal.createProposal(bytes memory,struct Action memory[] memory,uint64,uint64,bytes memory) returns (uint256)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2167:8:10","memberName":"selector","nodeType":"MemberAccess","src":"2142:33:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2096:79:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":1651,"name":"IProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2194:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProposal_$1572_$","typeString":"type(contract IProposal)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2204:12:10","memberName":"hasSucceeded","nodeType":"MemberAccess","referencedDeclaration":1545,"src":"2194:22:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_uint256_$returns$_t_bool_$","typeString":"function IProposal.hasSucceeded(uint256) view returns (bool)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2217:8:10","memberName":"selector","nodeType":"MemberAccess","src":"2194:31:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2096:129:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":1655,"name":"IProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2244:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProposal_$1572_$","typeString":"type(contract IProposal)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2254:7:10","memberName":"execute","nodeType":"MemberAccess","referencedDeclaration":1551,"src":"2244:17:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_uint256_$returns$__$","typeString":"function IProposal.execute(uint256)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2262:8:10","memberName":"selector","nodeType":"MemberAccess","src":"2244:26:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2096:174:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":1659,"name":"IProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2289:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProposal_$1572_$","typeString":"type(contract IProposal)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2299:10:10","memberName":"canExecute","nodeType":"MemberAccess","referencedDeclaration":1559,"src":"2289:20:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_uint256_$returns$_t_bool_$","typeString":"function IProposal.canExecute(uint256) view returns (bool)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2310:8:10","memberName":"selector","nodeType":"MemberAccess","src":"2289:29:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2096:222:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":1663,"name":"IProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2337:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProposal_$1572_$","typeString":"type(contract IProposal)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2347:23:10","memberName":"customProposalParamsABI","nodeType":"MemberAccess","referencedDeclaration":1565,"src":"2337:33:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_string_memory_ptr_$","typeString":"function IProposal.customProposalParamsABI() view returns (string memory)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2371:8:10","memberName":"selector","nodeType":"MemberAccess","src":"2337:42:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2096:283:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2068:311:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1668,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"2395:12:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1670,"name":"IProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2416:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProposal_$1572_$","typeString":"type(contract IProposal)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IProposal_$1572_$","typeString":"type(contract IProposal)"}],"id":1669,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2411:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IProposal_$1572","typeString":"type(contract IProposal)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2427:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"2411:27:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2395:43:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2068:370:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1677,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"2478:12:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1675,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2454:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ProposalUpgradeable_$1688_$","typeString":"type(contract super ProposalUpgradeable)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2460:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"2454:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2454:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2068:423:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1641,"id":1680,"nodeType":"Return","src":"2049:442:10"}]},"baseFunctions":[3307],"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"1485:457:10","text":"@notice Checks if this or the parent contract supports an interface by its ID.\n @dev In addition to the current interfaceId, also support previous version of the interfaceId\n      that did not include the following functions:\n      `createProposal`, `hasSucceeded`, `execute`, `canExecute`, `customProposalParamsABI`.\n @param _interfaceId The ID of the interface.\n @return Returns `true` if the interface is supported."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1956:17:10","overrides":{"id":1638,"nodeType":"OverrideSpecifier","overrides":[],"src":"2015:8:10"},"parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"_interfaceId","nameLocation":"1981:12:10","nodeType":"VariableDeclaration","scope":1682,"src":"1974:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1635,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1974:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1973:21:10"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1682,"src":"2033:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1639,"name":"bool","nodeType":"ElementaryTypeName","src":"2033:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2032:6:10"},"scope":1688,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":1687,"nodeType":"VariableDeclaration","src":"2814:25:10","nodes":[],"constant":false,"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"2504:305:10","text":"@notice This empty reserved space is put in place to allow future versions to add new variables\n         without shifting down storage in the inheritance chain\n         (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps))."},"mutability":"mutable","name":"__gap","nameLocation":"2834:5:10","scope":1688,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"2814:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1686,"length":{"hexValue":"3439","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2822:2:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2814:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":1582,"name":"IProposal","nameLocations":["659:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1572,"src":"659:9:10"},"id":1583,"nodeType":"InheritanceSpecifier","src":"659:9:10"},{"baseName":{"id":1584,"name":"ERC165Upgradeable","nameLocations":["670:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":3313,"src":"670:17:10"},"id":1585,"nodeType":"InheritanceSpecifier","src":"670:17:10"}],"canonicalName":"ProposalUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"333:285:10","text":"@title ProposalUpgradeable\n @author Aragon X - 2022-2024\n @notice An abstract contract containing the traits and internal functionality to create and execute proposals\n         that can be inherited by upgradeable DAO plugins.\n @custom:security-contact sirt@aragon.org"},"fullyImplemented":false,"linearizedBaseContracts":[1688,3313,3325,2372,1572],"name":"ProposalUpgradeable","nameLocation":"636:19:10","scope":1689,"usedErrors":[1591],"usedEvents":[1514,1519,2218]}],"license":"AGPL-3.0-or-later"},"id":10}
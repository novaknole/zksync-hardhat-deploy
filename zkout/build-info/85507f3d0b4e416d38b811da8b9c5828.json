{"id":"85507f3d0b4e416d38b811da8b9c5828","source_id_to_path":{"0":"node_modules/@aragon/osx-commons-contracts/src/dao/IDAO.sol","1":"node_modules/@aragon/osx-commons-contracts/src/executors/IExecutor.sol","2":"node_modules/@aragon/osx-commons-contracts/src/permission/auth/DaoAuthorizableUpgradeable.sol","3":"node_modules/@aragon/osx-commons-contracts/src/permission/auth/auth.sol","4":"node_modules/@aragon/osx-commons-contracts/src/plugin/IPlugin.sol","5":"node_modules/@aragon/osx-commons-contracts/src/plugin/PluginUUPSUpgradeable.sol","6":"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/IProposal.sol","7":"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol","8":"node_modules/@aragon/osx-commons-contracts/src/utils/metadata/MetadataExtensionUpgradeable.sol","9":"node_modules/@aragon/osx-commons-contracts/src/utils/versioning/IProtocolVersion.sol","10":"node_modules/@aragon/osx-commons-contracts/src/utils/versioning/ProtocolVersion.sol","11":"node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","12":"node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","13":"node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","14":"node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","15":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","16":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","17":"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","18":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","19":"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","20":"node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","21":"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol","22":"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","23":"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","24":"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","25":"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","26":"src/Blaxblux.sol","27":"src/StagedProposalProcessor.sol","28":"src/libraries/Errors.sol","29":"src/libraries/Permissions.sol","30":"test/main.sol"},"language":"Solidity","_format":"ethers-rs-sol-build-info-1","input":{"language":"Solidity","sources":{"node_modules/@aragon/osx-commons-contracts/src/dao/IDAO.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\n/// @title IDAO\n/// @author Aragon X - 2022-2024\n/// @notice The interface required for DAOs within the Aragon App DAO framework.\n/// @custom:security-contact sirt@aragon.org\ninterface IDAO {\n    /// @notice Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\n    /// @param _where The address of the contract.\n    /// @param _who The address of a EOA or contract to give the permissions.\n    /// @param _permissionId The permission identifier.\n    /// @param _data The optional data passed to the `PermissionCondition` registered.\n    /// @return Returns true if the address has permission, false if not.\n    function hasPermission(\n        address _where,\n        address _who,\n        bytes32 _permissionId,\n        bytes memory _data\n    ) external view returns (bool);\n\n    /// @notice Updates the DAO metadata (e.g., an IPFS hash).\n    /// @param _metadata The IPFS hash of the new metadata object.\n    function setMetadata(bytes calldata _metadata) external;\n\n    /// @notice Emitted when the DAO metadata is updated.\n    /// @param metadata The IPFS hash of the new metadata object.\n    event MetadataSet(bytes metadata);\n\n    /// @notice Emitted when a standard callback is registered.\n    /// @param interfaceId The ID of the interface.\n    /// @param callbackSelector The selector of the callback function.\n    /// @param magicNumber The magic number to be registered for the callback function selector.\n    event StandardCallbackRegistered(\n        bytes4 interfaceId,\n        bytes4 callbackSelector,\n        bytes4 magicNumber\n    );\n\n    /// @notice Deposits (native) tokens to the DAO contract with a reference string.\n    /// @param _token The address of the token or address(0) in case of the native token.\n    /// @param _amount The amount of tokens to deposit.\n    /// @param _reference The reference describing the deposit reason.\n    function deposit(address _token, uint256 _amount, string calldata _reference) external payable;\n\n    /// @notice Emitted when a token deposit has been made to the DAO.\n    /// @param sender The address of the sender.\n    /// @param token The address of the deposited token.\n    /// @param amount The amount of tokens deposited.\n    /// @param _reference The reference describing the deposit reason.\n    event Deposited(\n        address indexed sender,\n        address indexed token,\n        uint256 amount,\n        string _reference\n    );\n\n    /// @notice Emitted when a native token deposit has been made to the DAO.\n    /// @dev This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).\n    /// @param sender The address of the sender.\n    /// @param amount The amount of native tokens deposited.\n    event NativeTokenDeposited(address sender, uint256 amount);\n\n    /// @notice Setter for the trusted forwarder verifying the meta transaction.\n    /// @param _trustedForwarder The trusted forwarder address.\n    function setTrustedForwarder(address _trustedForwarder) external;\n\n    /// @notice Getter for the trusted forwarder verifying the meta transaction.\n    /// @return The trusted forwarder address.\n    function getTrustedForwarder() external view returns (address);\n\n    /// @notice Emitted when a new TrustedForwarder is set on the DAO.\n    /// @param forwarder the new forwarder address.\n    event TrustedForwarderSet(address forwarder);\n\n    /// @notice Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271).\n    /// @param _hash The hash of the data to be signed.\n    /// @param _signature The signature byte array associated with `_hash`.\n    /// @return Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not.\n    function isValidSignature(bytes32 _hash, bytes memory _signature) external returns (bytes4);\n\n    /// @notice Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\n    /// @param _interfaceId The ID of the interface.\n    /// @param _callbackSelector The selector of the callback function.\n    /// @param _magicNumber The magic number to be registered for the function signature.\n    function registerStandardCallback(\n        bytes4 _interfaceId,\n        bytes4 _callbackSelector,\n        bytes4 _magicNumber\n    ) external;\n\n    /// @notice Removed function being left here to not corrupt the IDAO interface ID. Any call will revert.\n    /// @dev Introduced in v1.0.0. Removed in v1.4.0.\n    function setSignatureValidator(address) external;\n}\n"},"node_modules/@aragon/osx-commons-contracts/src/executors/IExecutor.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\n/// @notice The action struct to be consumed by the DAO's `execute` function resulting in an external call.\n/// @param to The address to call.\n/// @param value The native token value to be sent with the call.\n/// @param data The bytes-encoded function selector and calldata for the call.\nstruct Action {\n    address to;\n    uint256 value;\n    bytes data;\n}\n\n/// @title IExecutor\n/// @author Aragon X - 2024\n/// @notice The interface required for Executors within the Aragon App DAO framework.\n/// @custom:security-contact sirt@aragon.org\ninterface IExecutor {\n    /// @notice Emitted when a proposal is executed.\n    /// @dev The value of `callId` is defined by the component/contract calling the execute function.\n    ///      A `Plugin` implementation can use it, for example, as a nonce.\n    /// @param actor The address of the caller.\n    /// @param callId The ID of the call.\n    /// @param actions The array of actions executed.\n    /// @param allowFailureMap The allow failure map encoding which actions are allowed to fail.\n    /// @param failureMap The failure map encoding which actions have failed.\n    /// @param execResults The array with the results of the executed actions.\n    event Executed(\n        address indexed actor,\n        bytes32 callId,\n        Action[] actions,\n        uint256 allowFailureMap,\n        uint256 failureMap,\n        bytes[] execResults\n    );\n\n    /// @notice Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\n    /// @param _callId The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\n    /// @param _actions The array of actions.\n    /// @param _allowFailureMap A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\n    /// @return The array of results obtained from the executed actions in `bytes`.\n    /// @return The resulting failure map containing the actions have actually failed.\n    function execute(\n        bytes32 _callId,\n        Action[] memory _actions,\n        uint256 _allowFailureMap\n    ) external returns (bytes[] memory, uint256);\n}\n"},"node_modules/@aragon/osx-commons-contracts/src/permission/auth/DaoAuthorizableUpgradeable.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\nimport {ContextUpgradeable} from \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\";\n\nimport {IDAO} from \"../../dao/IDAO.sol\";\nimport {_auth} from \"./auth.sol\";\n\n/// @title DaoAuthorizableUpgradeable\n/// @author Aragon X - 2022-2023\n/// @notice An abstract contract providing a meta-transaction compatible modifier for upgradeable or cloneable contracts to authorize function calls through an associated DAO.\n/// @dev Make sure to call `__DaoAuthorizableUpgradeable_init` during initialization of the inheriting contract.\n/// @custom:security-contact sirt@aragon.org\nabstract contract DaoAuthorizableUpgradeable is ContextUpgradeable {\n    /// @notice The associated DAO managing the permissions of inheriting contracts.\n    IDAO private dao_;\n\n    /// @notice Initializes the contract by setting the associated DAO.\n    /// @param _dao The associated DAO address.\n    // solhint-disable-next-line func-name-mixedcase\n    function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {\n        dao_ = _dao;\n    }\n\n    /// @notice Returns the DAO contract.\n    /// @return The DAO contract.\n    function dao() public view returns (IDAO) {\n        return dao_;\n    }\n\n    /// @notice A modifier to make functions on inheriting contracts authorized. Permissions to call the function are checked through the associated DAO's permission manager.\n    /// @param _permissionId The permission identifier required to call the method this modifier is applied to.\n    modifier auth(bytes32 _permissionId) {\n        _auth(dao_, address(this), _msgSender(), _permissionId, _msgData());\n        _;\n    }\n\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\n    uint256[49] private __gap;\n}\n"},"node_modules/@aragon/osx-commons-contracts/src/permission/auth/auth.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\nimport {IDAO} from \"../../dao/IDAO.sol\";\n\n/// @title DAO Authorization Utilities\n/// @author Aragon X - 2022-2024\n/// @notice Provides utility functions for verifying if a caller has specific permissions in an associated DAO.\n/// @custom:security-contact sirt@aragon.org\n\n/// @notice Thrown if a call is unauthorized in the associated DAO.\n/// @param dao The associated DAO.\n/// @param where The context in which the authorization reverted.\n/// @param who The address (EOA or contract) missing the permission.\n/// @param permissionId The permission identifier.\nerror DaoUnauthorized(address dao, address where, address who, bytes32 permissionId);\n\n/// @notice A free function checking if a caller is granted permissions on a target contract via a permission identifier that redirects the approval to a `PermissionCondition` if this was specified in the setup.\n/// @param _where The address of the target contract for which `who` receives permission.\n/// @param _who The address (EOA or contract) owning the permission.\n/// @param _permissionId The permission identifier.\n/// @param _data The optional data passed to the `PermissionCondition` registered.\nfunction _auth(\n    IDAO _dao,\n    address _where,\n    address _who,\n    bytes32 _permissionId,\n    bytes calldata _data\n) view {\n    if (!_dao.hasPermission(_where, _who, _permissionId, _data))\n        revert DaoUnauthorized({\n            dao: address(_dao),\n            where: _where,\n            who: _who,\n            permissionId: _permissionId\n        });\n}\n"},"node_modules/@aragon/osx-commons-contracts/src/plugin/IPlugin.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\n/// @title IPlugin\n/// @author Aragon X - 2022-2024\n/// @notice An interface defining the traits of a plugin.\n/// @custom:security-contact sirt@aragon.org\ninterface IPlugin {\n    /// @notice Types of plugin implementations available within OSx.\n    enum PluginType {\n        UUPS,\n        Cloneable,\n        Constructable\n    }\n\n    /// @notice Specifies the type of operation to perform.\n    enum Operation {\n        Call,\n        DelegateCall\n    }\n\n    /// @notice Configuration for the target contract that the plugin will interact with, including the address and operation type.\n    /// @dev By default, the plugin typically targets the associated DAO and performs a `Call` operation. However, this\n    ///      configuration allows the plugin to specify a custom executor and select either `Call` or `DelegateCall` based on\n    ///      the desired execution context.\n    /// @param target The address of the target contract, typically the associated DAO but configurable to a custom executor.\n    /// @param operation The type of operation (`Call` or `DelegateCall`) to execute on the target, as defined by `Operation`.\n    struct TargetConfig {\n        address target;\n        Operation operation;\n    }\n\n    /// @notice Returns the plugin's type\n    function pluginType() external view returns (PluginType);\n}\n"},"node_modules/@aragon/osx-commons-contracts/src/plugin/PluginUUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport {IERC1822ProxiableUpgradeable} from \"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\";\nimport {ERC165Upgradeable} from \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\";\nimport {ERC165CheckerUpgradeable} from \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\";\n\nimport {IProtocolVersion} from \"../utils/versioning/IProtocolVersion.sol\";\nimport {ProtocolVersion} from \"../utils/versioning/ProtocolVersion.sol\";\nimport {DaoAuthorizableUpgradeable} from \"../permission/auth/DaoAuthorizableUpgradeable.sol\";\nimport {IPlugin} from \"./IPlugin.sol\";\nimport {IDAO} from \"../dao/IDAO.sol\";\nimport {IExecutor, Action} from \"../executors/IExecutor.sol\";\n\n/// @title PluginUUPSUpgradeable\n/// @author Aragon X - 2022-2024\n/// @notice An abstract, upgradeable contract to inherit from when creating a plugin being deployed via the UUPS pattern (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\n/// @custom:security-contact sirt@aragon.org\nabstract contract PluginUUPSUpgradeable is\n    IPlugin,\n    ERC165Upgradeable,\n    UUPSUpgradeable,\n    DaoAuthorizableUpgradeable,\n    ProtocolVersion\n{\n    using ERC165CheckerUpgradeable for address;\n\n    // NOTE: When adding new state variables to the contract, the size of `_gap` has to be adapted below as well.\n\n    /// @notice Stores the current target configuration, defining the target contract and operation type for a plugin.\n    TargetConfig private currentTargetConfig;\n\n    /// @notice Thrown when target is of type 'IDAO', but operation is `delegateCall`.\n    /// @param targetConfig The target config to update it to.\n    error InvalidTargetConfig(TargetConfig targetConfig);\n\n    /// @notice Thrown when `delegatecall` fails.\n    error DelegateCallFailed();\n\n    /// @notice Thrown when initialize is called after it has already been executed.\n    error AlreadyInitialized();\n\n    /// @notice Emitted each time the TargetConfig is set.\n    event TargetSet(TargetConfig newTargetConfig);\n\n    /// @notice The ID of the permission required to call the `setTargetConfig` function.\n    bytes32 public constant SET_TARGET_CONFIG_PERMISSION_ID =\n        keccak256(\"SET_TARGET_CONFIG_PERMISSION\");\n\n    /// @notice The ID of the permission required to call the `_authorizeUpgrade` function.\n    bytes32 public constant UPGRADE_PLUGIN_PERMISSION_ID = keccak256(\"UPGRADE_PLUGIN_PERMISSION\");\n\n    /// @notice Disables the initializers on the implementation contract to prevent it from being left uninitialized.\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /// @notice This ensures that the initialize function cannot be called during the upgrade process.\n    modifier onlyCallAtInitialization() {\n        if (_getInitializedVersion() != 0) {\n            revert AlreadyInitialized();\n        }\n\n        _;\n    }\n\n    /// @inheritdoc IPlugin\n    function pluginType() public pure override returns (PluginType) {\n        return PluginType.UUPS;\n    }\n\n    /// @notice Returns the currently set target contract.\n    /// @return TargetConfig The currently set target.\n    function getCurrentTargetConfig() public view virtual returns (TargetConfig memory) {\n        return currentTargetConfig;\n    }\n\n    /// @notice A convenient function to get current target config only if its target is not address(0), otherwise dao().\n    /// @return TargetConfig The current target config if its target is not address(0), otherwise returns dao().\"\n    function getTargetConfig() public view virtual returns (TargetConfig memory) {\n        TargetConfig memory targetConfig = currentTargetConfig;\n\n        if (targetConfig.target == address(0)) {\n            targetConfig = TargetConfig({target: address(dao()), operation: Operation.Call});\n        }\n\n        return targetConfig;\n    }\n\n    /// @notice Initializes the plugin by storing the associated DAO.\n    /// @param _dao The DAO contract.\n    // solhint-disable-next-line func-name-mixedcase\n    function __PluginUUPSUpgradeable_init(IDAO _dao) internal virtual onlyInitializing {\n        __DaoAuthorizableUpgradeable_init(_dao);\n    }\n\n    /// @dev Sets the target to a new target (`newTarget`).\n    ///      The caller must have the `SET_TARGET_CONFIG_PERMISSION_ID` permission.\n    /// @param _targetConfig The target Config containing the address and operation type.\n    function setTargetConfig(\n        TargetConfig calldata _targetConfig\n    ) public auth(SET_TARGET_CONFIG_PERMISSION_ID) {\n        _setTargetConfig(_targetConfig);\n    }\n\n    /// @notice Checks if an interface is supported by this or its parent contract.\n    /// @param _interfaceId The ID of the interface.\n    /// @return Returns `true` if the interface is supported.\n    function supportsInterface(bytes4 _interfaceId) public view virtual override returns (bool) {\n        return\n            _interfaceId == type(IPlugin).interfaceId ||\n            _interfaceId == type(IProtocolVersion).interfaceId ||\n            _interfaceId == type(IERC1822ProxiableUpgradeable).interfaceId ||\n            _interfaceId ==\n            this.setTargetConfig.selector ^\n                this.getTargetConfig.selector ^\n                this.getCurrentTargetConfig.selector ||\n            super.supportsInterface(_interfaceId);\n    }\n\n    /// @notice Returns the address of the implementation contract in the [proxy storage slot](https://eips.ethereum.org/EIPS/eip-1967) slot the [UUPS proxy](https://eips.ethereum.org/EIPS/eip-1822) is pointing to.\n    /// @return The address of the implementation contract.\n    function implementation() public view returns (address) {\n        return _getImplementation();\n    }\n\n    /// @notice Sets the target to a new target (`newTarget`).\n    /// @param _targetConfig The target Config containing the address and operation type.\n    function _setTargetConfig(TargetConfig memory _targetConfig) internal virtual {\n        // safety check to avoid setting dao as `target` with `delegatecall` operation\n        // as this would not work and cause the plugin to be bricked.\n        if (\n            _targetConfig.target.supportsInterface(type(IDAO).interfaceId) &&\n            _targetConfig.operation == Operation.DelegateCall\n        ) {\n            revert InvalidTargetConfig(_targetConfig);\n        }\n\n        currentTargetConfig = _targetConfig;\n\n        emit TargetSet(_targetConfig);\n    }\n\n    /// @notice Forwards the actions to the currently set `target` for the execution.\n    /// @dev If target is not set, passes actions to the dao.\n    /// @param _callId Identifier for this execution.\n    /// @param _actions actions that will be eventually called.\n    /// @param _allowFailureMap Bitmap-encoded number.\n    /// @return execResults address of the implementation contract.\n    /// @return failureMap address of the implementation contract.\n    function _execute(\n        bytes32 _callId,\n        Action[] memory _actions,\n        uint256 _allowFailureMap\n    ) internal virtual returns (bytes[] memory execResults, uint256 failureMap) {\n        TargetConfig memory targetConfig = getTargetConfig();\n\n        return\n            _execute(\n                targetConfig.target,\n                _callId,\n                _actions,\n                _allowFailureMap,\n                targetConfig.operation\n            );\n    }\n\n    /// @notice Forwards the actions to the `target` for the execution.\n    /// @param _target The address of the target contract.\n    /// @param _callId Identifier for this execution.\n    /// @param _actions actions that will be eventually called.\n    /// @param _allowFailureMap A bitmap allowing the execution to succeed, even if individual actions might revert.\n    ///     If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts.\n    ///     A failure map value of 0 requires every action to not revert.\n    /// @param _op The type of operation (`Call` or `DelegateCall`) to be used for the execution.\n    /// @return execResults address of the implementation contract.\n    /// @return failureMap address of the implementation contract.\n    function _execute(\n        address _target,\n        bytes32 _callId,\n        Action[] memory _actions,\n        uint256 _allowFailureMap,\n        Operation _op\n    ) internal virtual returns (bytes[] memory execResults, uint256 failureMap) {\n        if (_op == Operation.DelegateCall) {\n            bool success;\n            bytes memory data;\n\n            // solhint-disable-next-line avoid-low-level-calls\n            (success, data) = _target.delegatecall(\n                abi.encodeCall(IExecutor.execute, (_callId, _actions, _allowFailureMap))\n            );\n\n            if (!success) {\n                if (data.length > 0) {\n                    // solhint-disable-next-line no-inline-assembly\n                    assembly {\n                        let returndata_size := mload(data)\n                        revert(add(32, data), returndata_size)\n                    }\n                } else {\n                    revert DelegateCallFailed();\n                }\n            }\n            (execResults, failureMap) = abi.decode(data, (bytes[], uint256));\n        } else {\n            (execResults, failureMap) = IExecutor(_target).execute(\n                _callId,\n                _actions,\n                _allowFailureMap\n            );\n        }\n    }\n\n    /// @notice Internal method authorizing the upgrade of the contract via the [upgradeability mechanism for UUPS proxies](https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable) (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\n    /// @dev The caller must have the `UPGRADE_PLUGIN_PERMISSION_ID` permission.\n    function _authorizeUpgrade(\n        address\n    )\n        internal\n        virtual\n        override\n        auth(UPGRADE_PLUGIN_PERMISSION_ID)\n    // solhint-disable-next-line no-empty-blocks\n    {\n\n    }\n\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\n    uint256[49] private __gap;\n}\n"},"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/IProposal.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\nimport {Action} from \"../../../executors/IExecutor.sol\";\n\n/// @title IProposal\n/// @author Aragon X - 2022-2024\n/// @notice An interface to be implemented by DAO plugins that create and execute proposals.\n/// @custom:security-contact sirt@aragon.org\ninterface IProposal {\n    /// @notice Emitted when a proposal is created.\n    /// @param proposalId The ID of the proposal.\n    /// @param creator  The creator of the proposal.\n    /// @param startDate The start date of the proposal in seconds.\n    /// @param endDate The end date of the proposal in seconds.\n    /// @param metadata The metadata of the proposal.\n    /// @param actions The actions that will be executed if the proposal passes.\n    /// @param allowFailureMap A bitmap allowing the proposal to succeed, even if individual actions might revert.\n    ///     If the bit at index `i` is 1, the proposal succeeds even if the `i`th action reverts.\n    ///     A failure map value of 0 requires every action to not revert.\n    event ProposalCreated(\n        uint256 indexed proposalId,\n        address indexed creator,\n        uint64 startDate,\n        uint64 endDate,\n        bytes metadata,\n        Action[] actions,\n        uint256 allowFailureMap\n    );\n\n    /// @notice Emitted when a proposal is executed.\n    /// @param proposalId The ID of the proposal.\n    event ProposalExecuted(uint256 indexed proposalId);\n\n    /// @notice Creates a new proposal.\n    /// @param _metadata The metadata of the proposal.\n    /// @param _actions The actions that will be executed after the proposal passes.\n    /// @param _startDate The start date of the proposal.\n    /// @param _endDate The end date of the proposal.\n    /// @param _data The additional abi-encoded data to include more necessary fields.\n    /// @return proposalId The id of the proposal.\n    function createProposal(\n        bytes memory _metadata,\n        Action[] memory _actions,\n        uint64 _startDate,\n        uint64 _endDate,\n        bytes memory _data\n    ) external returns (uint256 proposalId);\n\n    /// @notice Whether proposal succeeded or not.\n    /// @dev Note that this must not include time window checks and only make a decision based on the thresholds.\n    /// @param _proposalId The id of the proposal.\n    /// @return Returns if proposal has been succeeded or not without including time window checks.\n    function hasSucceeded(uint256 _proposalId) external view returns (bool);\n\n    /// @notice Executes a proposal.\n    /// @param _proposalId The ID of the proposal to be executed.\n    function execute(uint256 _proposalId) external;\n\n    /// @notice Checks if a proposal can be executed.\n    /// @param _proposalId The ID of the proposal to be checked.\n    /// @return True if the proposal can be executed, false otherwise.\n    function canExecute(uint256 _proposalId) external view returns (bool);\n\n    /// @notice The human-readable abi format for extra params included in `data` of `createProposal`.\n    /// @dev Used for UI to easily detect what extra params the contract expects.\n    /// @return ABI of params in `data` of `createProposal`.\n    function customProposalParamsABI() external view returns (string memory);\n\n    /// @notice Returns the proposal count which determines the next proposal ID.\n    /// @dev This function is deprecated but remains in the interface for backward compatibility.\n    ///      It now reverts to prevent ambiguity.\n    /// @return The proposal count.\n    function proposalCount() external view returns (uint256);\n}\n"},"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\nimport {CountersUpgradeable} from \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\";\n\nimport {IProposal} from \"./IProposal.sol\";\n\n/// @title ProposalUpgradeable\n/// @author Aragon X - 2022-2024\n/// @notice An abstract contract containing the traits and internal functionality to create and execute proposals\n///         that can be inherited by upgradeable DAO plugins.\n/// @custom:security-contact sirt@aragon.org\nabstract contract ProposalUpgradeable is IProposal, ERC165Upgradeable {\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    error FunctionDeprecated();\n\n    /// @notice The incremental ID for proposals and executions.\n    CountersUpgradeable.Counter private proposalCounter;\n\n    /// @inheritdoc IProposal\n    function proposalCount() public view virtual override returns (uint256) {\n        revert FunctionDeprecated();\n    }\n\n    /// @notice Creates a proposal Id.\n    /// @dev Uses block number and chain id to ensure more probability of uniqueness.\n    /// @param _salt The extra salt to help with uniqueness.\n    /// @return The id of the proposal.\n    function _createProposalId(bytes32 _salt) internal view virtual returns (uint256) {\n        return uint256(keccak256(abi.encode(block.chainid, block.number, address(this), _salt)));\n    }\n\n    /// @notice Checks if this or the parent contract supports an interface by its ID.\n    /// @dev In addition to the current interfaceId, also support previous version of the interfaceId\n    ///      that did not include the following functions:\n    ///      `createProposal`, `hasSucceeded`, `execute`, `canExecute`, `customProposalParamsABI`.\n    /// @param _interfaceId The ID of the interface.\n    /// @return Returns `true` if the interface is supported.\n    function supportsInterface(bytes4 _interfaceId) public view virtual override returns (bool) {\n        return\n            _interfaceId ==\n            type(IProposal).interfaceId ^\n                IProposal.createProposal.selector ^\n                IProposal.hasSucceeded.selector ^\n                IProposal.execute.selector ^\n                IProposal.canExecute.selector ^\n                IProposal.customProposalParamsABI.selector ||\n            _interfaceId == type(IProposal).interfaceId ||\n            super.supportsInterface(_interfaceId);\n    }\n\n    /// @notice This empty reserved space is put in place to allow future versions to add new variables\n    ///         without shifting down storage in the inheritance chain\n    ///         (see [OpenZeppelin's guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps)).\n    uint256[49] private __gap;\n}\n"},"node_modules/@aragon/osx-commons-contracts/src/utils/metadata/MetadataExtensionUpgradeable.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\nimport {ERC165Upgradeable} from \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\";\n\nimport {DaoAuthorizableUpgradeable} from \"../../permission/auth/DaoAuthorizableUpgradeable.sol\";\n\n/// @title MetadataExtensionUpgradeable\n/// @author Aragon X - 2024\n/// @notice An abstract, upgradeable contract for managing and retrieving metadata associated with a plugin.\n/// @dev Due to the requirements that already existing upgradeable plugins need to start inheritting from this,\n///      we're required to use hardcoded/specific slots for storage instead of sequential slots with gaps.\n/// @custom:security-contact sirt@aragon.org\nabstract contract MetadataExtensionUpgradeable is ERC165Upgradeable, DaoAuthorizableUpgradeable {\n    /// @notice The ID of the permission required to call the `setMetadata` function.\n    bytes32 public constant SET_METADATA_PERMISSION_ID = keccak256(\"SET_METADATA_PERMISSION\");\n\n    // keccak256(abi.encode(uint256(keccak256(\"osx-commons.storage.MetadataExtension\")) - 1)) & ~bytes32(uint256(0xff))\n    // solhint-disable-next-line  const-name-snakecase\n    bytes32 private constant MetadataExtensionStorageLocation =\n        0x47ff9796f72d439c6e5c30a24b9fad985a00c85a9f2258074c400a94f8746b00;\n\n    /// @notice Emitted when metadata is updated.\n    event MetadataSet(bytes metadata);\n\n    struct MetadataExtensionStorage {\n        bytes metadata;\n    }\n\n    function _getMetadataExtensionStorage()\n        private\n        pure\n        returns (MetadataExtensionStorage storage $)\n    {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            $.slot := MetadataExtensionStorageLocation\n        }\n    }\n\n    /// @notice Checks if this or the parent contract supports an interface by its ID.\n    /// @param _interfaceId The ID of the interface.\n    /// @return Returns `true` if the interface is supported.\n    function supportsInterface(bytes4 _interfaceId) public view virtual override returns (bool) {\n        return\n            _interfaceId == this.setMetadata.selector ^ this.getMetadata.selector ||\n            super.supportsInterface(_interfaceId);\n    }\n\n    /// @notice Allows to update only the metadata.\n    /// @param _metadata The utf8 bytes of a content addressing cid that stores plugin's information.\n    function setMetadata(bytes calldata _metadata) public virtual auth(SET_METADATA_PERMISSION_ID) {\n        _setMetadata(_metadata);\n    }\n\n    /// @notice Returns the metadata currently applied.\n    /// @return The The utf8 bytes of a content addressing cid.\n    function getMetadata() public view returns (bytes memory) {\n        MetadataExtensionStorage storage $ = _getMetadataExtensionStorage();\n        return $.metadata;\n    }\n\n    /// @notice Internal function to update metadata.\n    /// @param _metadata The utf8 bytes of a content addressing cid that stores contract's information.\n    function _setMetadata(bytes memory _metadata) internal virtual {\n        MetadataExtensionStorage storage $ = _getMetadataExtensionStorage();\n        $.metadata = _metadata;\n\n        emit MetadataSet(_metadata);\n    }\n}\n"},"node_modules/@aragon/osx-commons-contracts/src/utils/versioning/IProtocolVersion.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\n/// @title IProtocolVersion\n/// @author Aragon X - 2022-2023\n/// @notice An interface defining the semantic Aragon OSx protocol version number.\n/// @custom:security-contact sirt@aragon.org\ninterface IProtocolVersion {\n    /// @notice Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\n    /// @return _version Returns the semantic Aragon OSx protocol version number.\n    /// @dev This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\n    function protocolVersion() external view returns (uint8[3] memory _version);\n}\n"},"node_modules/@aragon/osx-commons-contracts/src/utils/versioning/ProtocolVersion.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.8;\n\nimport {IProtocolVersion} from \"./IProtocolVersion.sol\";\n\n/// @title ProtocolVersion\n/// @author Aragon X - 2023\n/// @notice An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.\n/// @dev Do not add any new variables to this contract that would shift down storage in the inheritance chain.\n/// @custom:security-contact sirt@aragon.org\nabstract contract ProtocolVersion is IProtocolVersion {\n    // IMPORTANT: Do not add any storage variable, see the above notice.\n\n    /// @inheritdoc IProtocolVersion\n    function protocolVersion() public pure returns (uint8[3] memory) {\n        return [1, 4, 0];\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport {Initializable} from \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165CheckerUpgradeable {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165Upgradeable).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165Upgradeable.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"src/Blaxblux.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nimport {StagedProposalProcessor as SPP} from \"./StagedProposalProcessor.sol\";\n\n/// @title MyPluginSetup\n/// @author Aragon X - 2024\n/// @notice The setup contract of the `StagedProposalProcessor` plugin.\n/// @dev Release 1, Build 1\ncontract Blaxblux  {\n\n    \n    function setUp() public {\n        address s = address(new SPP());\n    }\n\n}\n"},"src/StagedProposalProcessor.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nimport {Errors} from \"./libraries/Errors.sol\";\nimport {Permissions} from \"./libraries/Permissions.sol\";\n\nimport {IDAO} from \"@aragon/osx-commons-contracts/src/dao/IDAO.sol\";\nimport {\n    PluginUUPSUpgradeable\n} from \"@aragon/osx-commons-contracts/src/plugin/PluginUUPSUpgradeable.sol\";\nimport {Action} from \"@aragon/osx-commons-contracts/src/executors/IExecutor.sol\";\nimport {\n    IProposal\n} from \"@aragon/osx-commons-contracts/src/plugin/extensions/proposal/IProposal.sol\";\nimport {\n    MetadataExtensionUpgradeable\n} from \"@aragon/osx-commons-contracts/src/utils/metadata/MetadataExtensionUpgradeable.sol\";\nimport {\n    ProposalUpgradeable\n} from \"@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol\";\n\nimport {ERC165Checker} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\n\n/// @title StagedProposalProcessor\n/// @author Aragon X - 2024\n/// @notice A multi-stage proposal processor where proposals progress through defined stages.\n///         Each stage is evaluated by the responsible bodies, determining whether the proposal advances\n///         to the next stage. Once a proposal successfully passes all stages, it can be executed.\ncontract StagedProposalProcessor is\n    ProposalUpgradeable,\n    MetadataExtensionUpgradeable,\n    PluginUUPSUpgradeable\n{\n    using ERC165Checker for address;\n\n    /// @notice Used to distinguish proposals where the SPP was not able to create a proposal on a sub-body.\n    uint256 private constant PROPOSAL_WITHOUT_ID = type(uint256).max;\n\n    /// @notice The different types that bodies can be registered as.\n    /// @param None Used to check if the body reported the result or not.\n    /// @param Approval Used to allow a body to report approval result.\n    /// @param Veto Used to allow a body to report veto result.\n    enum ResultType {\n        None,\n        Approval,\n        Veto\n    }\n\n    /// @notice The states of the proposal.\n    /// @param Active Whether the proposal is not advanceable.\n    /// @param Canceled Whether the proposal is canceled.\n    /// @param Executed Whether the proposal is executed.\n    /// @param Advanceable Whether the proposal can be advanced to the next stage.\n    /// @param Expired Whether the proposal's stage maxAdvance time has passed.\n    enum ProposalState {\n        Active,\n        Canceled,\n        Executed,\n        Advanceable,\n        Expired\n    }\n\n    /// @notice A container for Body-related information.\n    /// @param addr The address responsible for reporting results. For automatic bodies,\n    ///     it is also where the SPP creates proposals.\n    /// @param isManual Whether SPP should create a proposal on a body. If true, it will not create.\n    /// @param tryAdvance Whether to try to automatically advance the stage when a body reports results.\n    /// @param resultType The type(`Approval` or `Veto`) this body is registered with.\n    struct Body {\n        address addr;\n        bool isManual;\n        bool tryAdvance;\n        ResultType resultType;\n    }\n\n    /// @notice A container for stage-related information.\n    /// @param bodies The bodies that are responsible for advancing the stage.\n    /// @param maxAdvance The maximum duration after which stage can not be advanced.\n    /// @param minAdvance The minimum duration until when stage can not be advanced.\n    /// @param voteDuration The time to give vetoing bodies to make decisions in optimistic stage.\n    ///     Note that this also is used as an endDate time for bodies, see `_createBodyProposals`.\n    /// @param approvalThreshold The number of bodies that are required to pass to advance the proposal.\n    /// @param vetoThreshold If this number of bodies veto, the proposal can never advance\n    ///     even if `approvalThreshold` is satisfied.\n    /// @param cancelable If the proposal can be cancelled in the stage.\n    /// @param editable If the proposal can be edited in the stage.\n    struct Stage {\n        Body[] bodies;\n        uint64 maxAdvance;\n        uint64 minAdvance;\n        uint64 voteDuration;\n        uint16 approvalThreshold;\n        uint16 vetoThreshold;\n        bool cancelable;\n        bool editable;\n    }\n\n    /// @notice A container for proposal-related information.\n    /// @param allowFailureMap A bitmap allowing the proposal to succeed, even if individual actions might revert.\n    /// @param lastStageTransition The timestamp at which proposal's current stage has started.\n    /// @param currentStage Which stage the proposal is at.\n    /// @param stageConfigIndex The stage configuration that this proposal uses.\n    /// @param executed Whether the proposal is executed or not.\n    /// @param canceled Whether the proposal is canceled or not.\n    /// @param creator The creator of the proposal.\n    /// @param actions The actions to be executed when the proposal passes.\n    /// @param targetConfig The target to which this contract will pass actions with an operation type.\n    struct Proposal {\n        uint128 allowFailureMap;\n        uint64 lastStageTransition;\n        uint16 currentStage;\n        uint16 stageConfigIndex;\n        bool executed;\n        bool canceled;\n        address creator;\n        Action[] actions;\n        TargetConfig targetConfig;\n    }\n\n    /// @notice A mapping to track sub-proposal IDs for a given proposal, stage, and body.\n    mapping(uint256 proposalId => mapping(uint16 stageId => mapping(address body => uint256 subProposalId)))\n        private bodyProposalIds;\n\n    /// @notice A mapping to store the result types reported by bodies for a given proposal and stage.\n    mapping(uint256 proposalId => mapping(uint16 stageId => mapping(address body => ResultType resultType)))\n        private bodyResults;\n\n    /// @notice A mapping to store custom proposal parameters data for a given proposal, stage, and body index.\n    mapping(uint256 proposalId => mapping(uint16 stageId => mapping(uint256 bodyIndex => bytes customParams)))\n        private createProposalParams;\n\n    /// @notice A mapping between proposal IDs and their associated proposal information.\n    mapping(uint256 proposalId => Proposal) private proposals;\n\n    /// @notice A mapping between stage configuration indices and the corresponding stage configurations.\n    mapping(uint256 configIndex => Stage[]) private stages;\n\n    /// @notice The index of the current stage configuration in the `stages` mapping.\n    uint16 private currentConfigIndex;\n\n    /// @notice The address of the trusted forwarder.\n    /// @dev The trusted forwarder appends the original sender's address to the calldata. If an executor is the\n    ///      trusted forwarder, the `_msgSender` function extracts the original sender from the calldata.\n    address private trustedForwarder;\n\n    /// @notice Emitted when the proposal is advanced to the next stage.\n    /// @param proposalId The proposal id.\n    /// @param stageId The stage index.\n    /// @param sender The address that advanced the proposal.\n    event ProposalAdvanced(\n        uint256 indexed proposalId,\n        uint16 indexed stageId,\n        address indexed sender\n    );\n\n    /// @notice Emitted when the proposal gets cancelled.\n    /// @param proposalId the proposal id.\n    /// @param stageId The stage index in which the proposal was cancelled.\n    /// @param sender The sender that canceled the proposal.\n    event ProposalCanceled(\n        uint256 indexed proposalId,\n        uint16 indexed stageId,\n        address indexed sender\n    );\n\n    /// @notice Emitted when the proposal gets edited.\n    /// @param proposalId the proposal id.\n    /// @param stageId The stage index in which the proposal was edited.\n    /// @param sender The sender that edited the proposal.\n    /// @param metadata The new metadata that replaces old metadata.\n    /// @param actions The new actions that replaces old actions.\n    event ProposalEdited(\n        uint256 indexed proposalId,\n        uint16 indexed stageId,\n        address indexed sender,\n        bytes metadata,\n        Action[] actions\n    );\n\n    /// @notice Emitted when a body reports results by calling `reportProposalResult`.\n    /// @param proposalId The proposal id.\n    /// @param stageId The stage index.\n    /// @param body The sender that reported the result.\n    event ProposalResultReported(\n        uint256 indexed proposalId,\n        uint16 indexed stageId,\n        address indexed body\n    );\n\n    /// @notice Emitted when this plugin successfully creates a proposal on sub-body.\n    /// @param proposalId The proposal id.\n    /// @param stageId The stage index.\n    /// @param body The sub-body on which sub-proposal has been created.\n    /// @param bodyProposalId The proposal id that sub-body returns for later usage by this plugin.\n    event SubProposalCreated(\n        uint256 indexed proposalId,\n        uint16 indexed stageId,\n        address indexed body,\n        uint256 bodyProposalId\n    );\n\n    /// @notice Emitted when this plugin fails in creating a proposal on sub-body.\n    /// @param proposalId The proposal id.\n    /// @param stageId The stage index.\n    /// @param body The sub-body on which sub-proposal failed to be created.\n    /// @param reason The reason why it was failed.\n    event SubProposalNotCreated(\n        uint256 indexed proposalId,\n        uint16 indexed stageId,\n        address indexed body,\n        bytes reason\n    );\n\n    /// @notice Emitted when the stage configuration is updated for a proposal process.\n    /// @param stages The array of `Stage` structs representing the updated stage configuration.\n    event StagesUpdated(Stage[] stages);\n\n    /// @notice Emitted when the trusted forwarder is updated.\n    /// @param forwarder The new trusted forwarder address.\n    event TrustedForwarderUpdated(address indexed forwarder);\n\n    /// @notice Initializes the component.\n    /// @dev This method is required to support [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822).\n    /// @param _dao The IDAO interface of the associated DAO.\n    /// @param _trustedForwarder The trusted forwarder responsible for extracting the original sender.\n    /// @param _stages The stages configuration.\n    /// @param _pluginMetadata The utf8 bytes of a content addressing cid that stores plugin's information.\n    /// @param _targetConfig The target to which this contract will pass actions with an operation type.\n    function initialize(\n        IDAO _dao,\n        address _trustedForwarder,\n        Stage[] calldata _stages,\n        bytes calldata _pluginMetadata,\n        TargetConfig calldata _targetConfig\n    ) external initializer {\n\n        // Allows installation even if `stages` are not present.\n        // This ensures flexibility as users can still install the plugin and decide\n        // later to apply configurations.\n        \n    }\n\n    /// @notice Allows to update stage configuration.\n    /// @dev Requires the caller to have the `UPDATE_STAGES_PERMISSION_ID` permission.\n    ///      Reverts if the provided `_stages` array is empty.\n    /// @param _stages The new stage configuration as an array of `Stage` structs.\n    function updateStages(\n        Stage[] calldata _stages\n    ) external {\n       \n    }\n\n    /// @notice Reports and records the result for a proposal at a specific stage.\n    /// @dev This function can be called by any address even if it is not included in the stage configuration.\n    ///      `_canProposalAdvance` function ensures that only records from addresses\n    ///      in the stage configuration are used.\n    ///      If `_tryAdvance` is true, the proposal will attempt to advance to the next stage if eligible.\n    ///      Requires the caller to have the `EXECUTE_PERMISSION_ID` permission to execute the final stage.\n    /// @param _proposalId The ID of the proposal.\n    /// @param _stageId The index of the stage, being reported on. Must not exceed the current stage of the proposal.\n    /// @param _resultType The result type being reported (`Approval` or `Veto`).\n    /// @param _tryAdvance Whether to attempt advancing the proposal to the next stage if conditions are met.\n    function reportProposalResult(\n        uint256 _proposalId,\n        uint16 _stageId,\n        ResultType _resultType,\n        bool _tryAdvance\n    ) external virtual {\n        \n    }\n\n    /// @inheritdoc IProposal\n    /// @dev This plugin inherits from `IProposal`, requiring an override for this function.\n    function customProposalParamsABI() external pure virtual override returns (string memory) {\n        return \"(bytes[][] subBodiesCustomProposalParamsABI)\";\n    }\n\n    /// @notice Sets a new trusted forwarder address.\n    /// @dev Requires the caller to have the `SET_TRUSTED_FORWARDER_PERMISSION_ID` permission.\n    /// @param _forwarder The new trusted forwarder address.\n    function setTrustedForwarder(\n        address _forwarder\n    ) public virtual {\n        \n    }\n\n    /// @notice Creates a new proposal in this `StagedProposalProcessor` plugin.\n    /// @dev Requires the caller to have the `CREATE_PROPOSAL_PERMISSION_ID` permission.\n    ///      Also creates proposals for non-manual bodies in the first stage of the proposal process.\n    /// @param _metadata The metadata of the proposal.\n    /// @param _actions The actions that will be executed after the proposal passes.\n    /// @param _allowFailureMap Allows proposal to succeed even if an action reverts.\n    ///     Uses bitmap representation.\n    ///     If the bit at index `x` is 1, the tx succeeds even if the action at `x` failed.\n    ///     Passing 0 will be treated as atomic execution.\n    /// @param _startDate The date at which first stage's bodies' proposals must be started at.\n    /// @param _proposalParams The extra abi encoded parameters for each sub-body's createProposal function.\n    /// @return proposalId The ID of the proposal.\n    function createProposal(\n        bytes memory _metadata,\n        Action[] memory _actions,\n        uint128 _allowFailureMap,\n        uint64 _startDate,\n        bytes[][] memory _proposalParams\n    ) public virtual auth(Permissions.CREATE_PROPOSAL_PERMISSION_ID) returns (uint256 proposalId) {\n        // If `currentConfigIndex` is 0, this means the plugin was installed\n        // with empty configurations and still hasn't updated stages\n        // in which case we should revert.\n        uint16 index = getCurrentConfigIndex();\n        if (index == 0) {\n            revert Errors.StageCountZero();\n        }\n\n        address creator = _msgSender();\n\n        proposalId = _createProposalId(keccak256(abi.encode(_actions, _metadata, creator)));\n\n        Proposal storage proposal = proposals[proposalId];\n\n        if (_proposalExists(proposal)) {\n            revert Errors.ProposalAlreadyExists(proposalId);\n        }\n\n        proposal.allowFailureMap = _allowFailureMap;\n        proposal.targetConfig = getTargetConfig();\n        proposal.creator = creator;\n\n        // store stage configuration per proposal to avoid\n        // changing it while proposal is still open\n        proposal.stageConfigIndex = index;\n\n        if (_startDate == 0) {\n            _startDate = uint64(block.timestamp);\n        } else if (_startDate < uint64(block.timestamp)) {\n            revert Errors.StartDateInvalid(_startDate);\n        }\n\n        proposal.lastStageTransition = _startDate;\n\n        // for (uint256 i = 0; i < _actions.length; ++i) {\n        //     proposal.actions.push(_actions[i]);\n        // }\n\n        if (_proposalParams.length > type(uint16).max) {\n            revert Errors.Uint16MaxSizeExceeded();\n        }\n\n        // To reduce the gas costs significantly, don't store the very\n        // first stage's params in storage as they only get used in this\n        // current tx and will not be needed later on for advancing.\n        for (uint256 i = 1; i < _proposalParams.length; ++i) {\n            for (uint256 j = 0; j < _proposalParams[i].length; ++j) {\n                createProposalParams[proposalId][uint16(i)][j] = _proposalParams[i][j];\n            }\n        }\n\n        _createBodyProposals(\n            proposalId,\n            0,\n            proposal.lastStageTransition,\n            _proposalParams.length > 0 ? _proposalParams[0] : new bytes[](0)\n        );\n\n        emit ProposalCreated({\n            proposalId: proposalId,\n            creator: creator,\n            startDate: proposal.lastStageTransition,\n            endDate: 0,\n            metadata: _metadata,\n            actions: _actions,\n            allowFailureMap: _allowFailureMap\n        });\n    }\n\n    /// @inheritdoc IProposal\n    /// @dev Calls a public function that requires the `CREATE_PERMISSION_ID` permission.\n    function createProposal(\n        bytes memory _metadata,\n        Action[] memory _actions,\n        uint64 _startDate,\n        uint64 /** */,\n        bytes memory _data\n    ) public virtual override returns (uint256 proposalId) {\n        proposalId = createProposal(\n            _metadata,\n            _actions,\n            0,\n            _startDate,\n            abi.decode(_data, (bytes[][]))\n        );\n    }\n\n    /// @notice Advances the specified proposal to the next stage if allowed.\n    /// @dev This function checks whether the proposal exists and can advance based on its current state.\n    ///      If the proposal is in the final stage, the caller must have the\n    ///      `EXECUTE_PERMISSION_ID` permission to execute it.\n    /// @param _proposalId The ID of the proposal.\n    function advanceProposal(uint256 _proposalId) public virtual {\n        Proposal storage proposal = proposals[_proposalId];\n\n        // Reverts if proposal is not Advanceable or is non-existent.\n        _validateStateBitmap(_proposalId, _encodeStateBitmap(ProposalState.Advanceable));\n\n        address sender = _msgSender();\n\n        // If the last stage, caller must have `EXECUTE_PERMISSION_ID`, otherwise `ADVANCE_PERMISSION_ID`.\n        bool hasPermission;\n        if (_isAtLastStage(proposal)) {\n            hasPermission = hasExecutePermission(sender);\n            if (!hasPermission) revert Errors.ProposalExecutionForbidden(_proposalId);\n        } else {\n            hasPermission = hasAdvancePermission(sender);\n            if (!hasPermission) revert Errors.ProposalAdvanceForbidden(_proposalId);\n        }\n\n        _advanceProposal(_proposalId, sender);\n    }\n\n    /// @notice Cancels the proposal.\n    /// @dev The proposal can be canceled only if it's allowed in the stage configuration.\n    ///      The caller must have the `CANCEL_PERMISSION_ID` permission to cancel it.\n    /// @param _proposalId The id of the proposal.\n    function cancel(uint256 _proposalId) public virtual auth(Permissions.CANCEL_PERMISSION_ID) {\n        Proposal storage proposal = proposals[_proposalId];\n\n        // Reverts if proposal is not Active, Advanceable or doesn't exist.\n        _validateStateBitmap(\n            _proposalId,\n            _encodeStateBitmap(ProposalState.Active) | _encodeStateBitmap(ProposalState.Advanceable)\n        );\n\n        uint16 currentStage = proposal.currentStage;\n        Stage storage stage = stages[proposal.stageConfigIndex][currentStage];\n\n        if (!stage.cancelable) {\n            revert Errors.ProposalCanNotBeCancelled(_proposalId, currentStage);\n        }\n\n        proposal.canceled = true;\n\n        emit ProposalCanceled(_proposalId, currentStage, _msgSender());\n    }\n\n    /// @notice Edits the proposal.\n    /// @dev The proposal can be editable only if it's allowed in the stage configuration.\n    ///      The caller must have the `EDIT_PERMISSION_ID` permission to edit\n    ///      and stage must be advanceable.\n    /// @param _proposalId The id of the proposal.\n    /// @param _metadata The metadata of the proposal.\n    /// @param _actions The actions that will be executed after the proposal passes.\n    function edit(\n        uint256 _proposalId,\n        bytes calldata _metadata,\n        Action[] calldata _actions\n    ) public virtual auth(Permissions.EDIT_PERMISSION_ID) {\n        Proposal storage proposal = proposals[_proposalId];\n\n        // Reverts if proposal doesn't exist.\n        ProposalState currentState = _validateStateBitmap(\n            _proposalId,\n            _encodeStateBitmap(ProposalState.Advanceable) | _encodeStateBitmap(ProposalState.Active)\n        );\n\n        uint16 currentStage = proposal.currentStage;\n        Stage storage stage = stages[proposal.stageConfigIndex][currentStage];\n\n        // If there're bodies in a stage, state must be Advanceable, otherwise revert.\n        if (stage.bodies.length != 0 && currentState != ProposalState.Advanceable) {\n            revert Errors.UnexpectedProposalState(\n                _proposalId,\n                uint8(currentState),\n                _encodeStateBitmap(ProposalState.Advanceable)\n            );\n        }\n\n        if (!stage.editable) {\n            revert Errors.ProposalCanNotBeEdited(_proposalId, currentStage);\n        }\n\n        delete proposal.actions;\n\n        for (uint256 i = 0; i < _actions.length; ++i) {\n            proposal.actions.push(_actions[i]);\n        }\n\n        emit ProposalEdited(_proposalId, currentStage, _msgSender(), _metadata, _actions);\n    }\n\n    /// @inheritdoc IProposal\n    /// @dev Requires the `EXECUTE_PERMISSION_ID` permission.\n    function execute(\n        uint256 _proposalId\n    ) public virtual auth(Permissions.EXECUTE_PROPOSAL_PERMISSION_ID) {\n        if (!canExecute(_proposalId)) {\n            revert Errors.ProposalExecutionForbidden(_proposalId);\n        }\n\n        _executeProposal(_proposalId);\n    }\n\n    /// @notice Checks if this or the parent contract supports an interface by its ID.\n    /// @param _interfaceId The ID of the interface.\n    /// @return Returns `true` if the interface is supported.\n    function supportsInterface(\n        bytes4 _interfaceId\n    )\n        public\n        view\n        virtual\n        override(PluginUUPSUpgradeable, MetadataExtensionUpgradeable, ProposalUpgradeable)\n        returns (bool)\n    {\n        return super.supportsInterface(_interfaceId);\n    }\n\n    /// @notice Indicates whether any particular address is the trusted forwarder.\n    /// @param _forwarder The address of the Forwarder contract that is being used.\n    /// @return `true` if the forwarder is trusted, otherwise false.\n    function isTrustedForwarder(address _forwarder) public view virtual returns (bool) {\n        return _forwarder == getTrustedForwarder();\n    }\n\n    /// @notice Determines whether the specified proposal can be advanced to the next stage.\n    /// @dev Reverts if the proposal with the given `_proposalId` does not exist.\n    /// @param _proposalId The unique identifier of the proposal to check.\n    /// @return Returns `true` if the proposal can be advanced to the next stage, otherwise `false`.\n    function canProposalAdvance(uint256 _proposalId) public view virtual returns (bool) {\n        // `state` reverts if proposal is non existent.\n        return state(_proposalId) == ProposalState.Advanceable;\n    }\n\n    /// @inheritdoc IProposal\n    function canExecute(uint256 _proposalId) public view virtual returns (bool) {\n        Proposal storage proposal = proposals[_proposalId];\n\n        // 1. `state` reverts if proposal is non existent.\n        // 2. Proposal must be on the last stage and be advanceable.\n        return state(_proposalId) == ProposalState.Advanceable && _isAtLastStage(proposal);\n    }\n\n    /// @notice Current state of a proposal.\n    /// @param _proposalId The proposal id.\n    /// @return The current state of the proposal.\n    function state(uint256 _proposalId) public view virtual returns (ProposalState) {\n        Proposal storage proposal = proposals[_proposalId];\n\n        if (proposal.executed) {\n            return ProposalState.Executed;\n        }\n\n        if (proposal.canceled) {\n            return ProposalState.Canceled;\n        }\n\n        if (!_proposalExists(proposal)) {\n            revert Errors.NonexistentProposal(_proposalId);\n        }\n\n        Stage storage stage = stages[proposal.stageConfigIndex][proposal.currentStage];\n\n        if (proposal.lastStageTransition + stage.maxAdvance < block.timestamp) {\n            return ProposalState.Expired;\n        }\n\n        if (proposal.lastStageTransition + stage.minAdvance > block.timestamp) {\n            return ProposalState.Active;\n        }\n\n        if (stage.vetoThreshold > 0) {\n            if (proposal.lastStageTransition + stage.voteDuration > block.timestamp) {\n                return ProposalState.Active;\n            }\n        }\n\n        bool thresholdMet = _thresholdsMet(\n            _proposalId,\n            proposal.currentStage,\n            stage.approvalThreshold,\n            stage.vetoThreshold\n        );\n\n        if (thresholdMet) {\n            return ProposalState.Advanceable;\n        }\n\n        return ProposalState.Active;\n    }\n\n    /// @notice Retrieves the address of the trusted forwarder.\n    /// @return The address of the trusted forwarder.\n    function getTrustedForwarder() public view virtual returns (address) {\n        return trustedForwarder;\n    }\n\n    /// @notice Retrieves all information associated with a proposal by its ID.\n    /// @param _proposalId The ID of the proposal.\n    /// @return The proposal struct\n    function getProposal(uint256 _proposalId) public view returns (Proposal memory) {\n        return proposals[_proposalId];\n    }\n\n    /// @notice Retrieves the result type submitted by a body for a specific proposal and stage.\n    /// @param _proposalId The ID of the proposal.\n    /// @param _stageId The stage index.\n    /// @param _body The address of the sub-body.\n    /// @return Returns what resultType the body reported the result with.\n    ///     Returns `None (0)` if no result has been provided yet.\n    function getBodyResult(\n        uint256 _proposalId,\n        uint16 _stageId,\n        address _body\n    ) public view virtual returns (ResultType) {\n        return bodyResults[_proposalId][_stageId][_body];\n    }\n\n    /// @notice Retrieves the sub proposal id.\n    /// @param _proposalId The ID of the proposal.\n    /// @param _stageId The stage index.\n    /// @param _body The address of the sub-body.\n    /// @return Returns what resultType the body reported the result with.\n    ///     Returns `None (0)` if no result has been provided yet.\n    function getBodyProposalId(\n        uint256 _proposalId,\n        uint16 _stageId,\n        address _body\n    ) public view virtual returns (uint256) {\n        return bodyProposalIds[_proposalId][_stageId][_body];\n    }\n\n    /// @notice Retrieves the current configuration index at which the current configurations of stages are stored.\n    /// @return The index of the current configuration in the `stages` mapping.\n    function getCurrentConfigIndex() public view returns (uint16) {\n        return currentConfigIndex;\n    }\n\n    /// @notice Retrieves the stages stored on the `_index` in the `stages` configuration.\n    /// @param _index The index from which to get the stages configuration.\n    /// @return The array of `Stage` structs.\n    function getStages(uint256 _index) public view virtual returns (Stage[] memory) {\n        if (_index > getCurrentConfigIndex() || _index == 0) {\n            revert Errors.StageCountZero();\n        }\n\n        return stages[_index];\n    }\n\n    /// @notice Retrieves the `data` parameter encoded for a sub-body's `createProposal` function in a specific stage.\n    ///         Excludes sub-bodies from the first stage, as their parameters are not stored for efficiency.\n    /// @param _proposalId The ID of the proposal.\n    /// @param _stageId The stage index.\n    /// @param _index The index of the body within the stage.\n    /// @return The encoded `data` parameter for the specified sub-body's `createProposal` function.\n    function getCreateProposalParams(\n        uint256 _proposalId,\n        uint16 _stageId,\n        uint256 _index\n    ) public view returns (bytes memory) {\n        return createProposalParams[_proposalId][_stageId][_index];\n    }\n\n    /// @notice Calculates and retrieves the number of approvals and vetoes for a proposal on the stage.\n    /// @param _proposalId The proposal ID.\n    /// @param _stageId The stage index.\n    /// @return approvals The total number of approvals for the proposal.\n    /// @return vetoes The total number of vetoes for the proposal.\n    function getProposalTally(\n        uint256 _proposalId,\n        uint16 _stageId\n    ) public view virtual returns (uint256 approvals, uint256 vetoes) {\n        Proposal storage proposal = proposals[_proposalId];\n\n        if (!_proposalExists(proposal)) {\n            revert Errors.NonexistentProposal(_proposalId);\n        }\n\n        return _getProposalTally(_proposalId, _stageId);\n    }\n\n    /// @inheritdoc IProposal\n    function hasSucceeded(uint256 _proposalId) public view virtual override returns (bool) {\n        Proposal storage proposal = proposals[_proposalId];\n\n        // `state` reverts if proposal is non existent.\n        ProposalState currentState = state(_proposalId);\n\n        // Proposal must be on the last stage and either advanceable or executed.\n        return\n            _isAtLastStage(proposal) &&\n            (currentState == ProposalState.Advanceable || currentState == ProposalState.Executed);\n    }\n\n    /// @notice Checks whether the caller has the required permission to execute a proposal at the last stage.\n    /// @param _account The address on which the `EXECUTE_PERMISSION_ID` is checked.\n    /// @return Returns `true` if the caller has the `EXECUTE_PERMISSION_ID` permission, otherwise `false`.\n    function hasExecutePermission(address _account) public view virtual returns (bool) {\n        return\n            dao().hasPermission(\n                address(this),\n                _account,\n                Permissions.EXECUTE_PROPOSAL_PERMISSION_ID,\n                _msgData()\n            );\n    }\n\n    /// @notice Checks whether the caller has the required permission to advance a proposal.\n    /// @param _account The address on which the `ADVANCE_PERMISSION_ID` is checked.\n    /// @return Returns `true` if the caller has the `ADVANCE_PERMISSION_ID` permission, otherwise `false`.\n    function hasAdvancePermission(address _account) public view virtual returns (bool) {\n        return\n            dao().hasPermission(\n                address(this),\n                _account,\n                Permissions.ADVANCE_PERMISSION_ID,\n                _msgData()\n            );\n    }\n\n    // =========================== INTERNAL/PRIVATE FUNCTIONS =============================\n\n    /// @notice Internal function to update stage configuration.\n    /// @dev It's a caller's responsibility not to call this in case `_stages` are empty.\n    ///      This function can not be overridden as it's crucial to not allow duplicating bodies\n    ///      in the same stage, because proposal creation and report functions depend on this assumption.\n    /// @param _stages The stages configuration.\n    function _updateStages(Stage[] memory _stages) internal {\n        Stage[] storage storedStages = stages[++currentConfigIndex];\n\n        for (uint256 i = 0; i < _stages.length; ++i) {\n            Stage storage stage = storedStages.push();\n            Body[] memory bodies = _stages[i].bodies;\n\n            uint64 maxAdvance = _stages[i].maxAdvance;\n            uint64 minAdvance = _stages[i].minAdvance;\n            uint64 voteDuration = _stages[i].voteDuration;\n            uint16 approvalThreshold = _stages[i].approvalThreshold;\n            uint16 vetoThreshold = _stages[i].vetoThreshold;\n\n            if (minAdvance >= maxAdvance || voteDuration >= maxAdvance) {\n                revert Errors.StageDurationsInvalid();\n            }\n\n            if (approvalThreshold > bodies.length || vetoThreshold > bodies.length) {\n                revert Errors.StageThresholdsInvalid();\n            }\n\n            for (uint256 j = 0; j < bodies.length; ++j) {\n                // Ensure that body addresses are not duplicated in the same stage.\n                for (uint256 k = j + 1; k < bodies.length; ++k) {\n                    if (bodies[j].addr == bodies[k].addr) {\n                        revert Errors.DuplicateBodyAddress(i, bodies[j].addr);\n                    }\n                }\n\n                // If the sub-body accepts an automatic creation by SPP,\n                // then it must obey `IProposal` interface.\n                if (\n                    !bodies[j].isManual &&\n                    !bodies[j].addr.supportsInterface(type(IProposal).interfaceId)\n                ) {\n                    revert Errors.InterfaceNotSupported();\n                }\n\n                // If not copied manually, requires via-ir compilation\n                // pipeline which is still slow.\n                stage.bodies.push(bodies[j]);\n            }\n\n            stage.maxAdvance = maxAdvance;\n            stage.minAdvance = minAdvance;\n            stage.voteDuration = voteDuration;\n            stage.approvalThreshold = approvalThreshold;\n            stage.vetoThreshold = vetoThreshold;\n            stage.cancelable = _stages[i].cancelable;\n            stage.editable = _stages[i].editable;\n        }\n\n        emit StagesUpdated(_stages);\n    }\n\n    /// @notice Internal function that executes the proposal's actions.\n    /// @param _proposalId The ID of the proposal.\n    function _executeProposal(uint256 _proposalId) internal virtual {\n        Proposal storage proposal = proposals[_proposalId];\n\n        proposal.executed = true;\n\n        _execute(\n            proposal.targetConfig.target,\n            bytes32(_proposalId),\n            proposal.actions,\n            uint256(proposal.allowFailureMap),\n            proposal.targetConfig.operation\n        );\n\n        emit ProposalExecuted(_proposalId);\n    }\n\n    /// @notice Records the result by the caller.\n    /// @dev Assumes that bodies are not duplicated in the same stage. See `_updateStages` function.\n    /// @param _proposalId The ID of the proposal.\n    /// @param _stageId The stage index.\n    /// @param _resultType The result type being reported (`Approval` or `Veto`).\n    /// @param _sender The address that reported the result.\n    function _processProposalResult(\n        uint256 _proposalId,\n        uint16 _stageId,\n        ResultType _resultType,\n        address _sender\n    ) internal virtual {\n        bodyResults[_proposalId][_stageId][_sender] = _resultType;\n        emit ProposalResultReported(_proposalId, _stageId, _sender);\n    }\n\n    /// @notice Creates proposals on the non-manual bodies of the `stageId`.\n    /// @dev Assumes that bodies are not duplicated in the same stage. See `_updateStages` function.\n    /// @param _proposalId The ID of the proposal.\n    /// @param _stageId The stage index.\n    /// @param _startDate The start date that proposals on sub-bodies will be created with.\n    /// @param _stageProposalParams The custom params required for each sub-body to create a proposal.\n    function _createBodyProposals(\n        uint256 _proposalId,\n        uint16 _stageId,\n        uint64 _startDate,\n        bytes[] memory _stageProposalParams\n    ) internal virtual {\n        Stage storage stage;\n\n        // avoid stack too deep.\n        {\n            Proposal storage proposal = proposals[_proposalId];\n            stage = stages[proposal.stageConfigIndex][_stageId];\n        }\n\n        for (uint256 i = 0; i < stage.bodies.length; ++i) {\n            Body storage body = stage.bodies[i];\n\n            // If body proposal creation should be manual, skip it.\n            if (body.isManual) continue;\n\n            Action[] memory actions = new Action[](1);\n\n            actions[0] = Action({\n                to: address(this),\n                value: 0,\n                data: abi.encodeCall(\n                    this.reportProposalResult,\n                    (_proposalId, _stageId, body.resultType, body.tryAdvance)\n                )\n            });\n\n            // Make sure that the `createProposal` call did not fail because\n            // 63/64 of `gasleft()` was insufficient to execute the external call.\n            // In specific scenarios, the sender could force-fail `createProposal`\n            // where 63/64 is insufficient causing it to fail, but where\n            // the remaining 1/64 gas are sufficient to successfully finish the call.\n            // See `InsufficientGas` revert below.\n            uint256 gasBefore = gasleft();\n            // solhint-disable-next-line avoid-low-level-calls\n            (bool success, bytes memory data) = body.addr.call(\n                abi.encodeCall(\n                    IProposal.createProposal,\n                    (\n                        abi.encode(address(this), _proposalId, _stageId),\n                        actions,\n                        _startDate,\n                        _startDate + stage.voteDuration,\n                        _stageProposalParams.length > i ? _stageProposalParams[i] : new bytes(0)\n                    )\n                )\n            );\n\n            uint256 gasAfter = gasleft();\n\n            // NOTE: Handles the edge case where:\n            // on success: it could return 0.\n            // on failure: default 0 would be used.\n            // In order to differentiate, we store `PROPOSAL_WITHOUT_ID` on failure.\n\n            if (!success) {\n                if (gasAfter < gasBefore / 64) {\n                    revert Errors.InsufficientGas();\n                }\n            }\n\n            if (success && data.length == 32) {\n                uint256 subProposalId = abi.decode(data, (uint256));\n                bodyProposalIds[_proposalId][_stageId][body.addr] = subProposalId;\n\n                emit SubProposalCreated(_proposalId, _stageId, body.addr, subProposalId);\n            } else {\n                // sub-proposal was not created on sub-body, emit\n                // the event and try the next sub-body without failing\n                // the main(outer) tx.\n                bodyProposalIds[_proposalId][_stageId][body.addr] = PROPOSAL_WITHOUT_ID;\n\n                emit SubProposalNotCreated(_proposalId, _stageId, body.addr, data);\n            }\n        }\n    }\n\n    /// @notice Advances a proposal to the next stage or executes it if it is in the final stage.\n    /// @dev Assumes the proposal is eligible to advance. If the proposal is not in the final stage,\n    ///      it creates proposals for the sub-bodies in the next stage.\n    ///      If the proposal is in the final stage, it triggers execution.\n    /// @param _proposalId The ID of the proposal.\n    /// @param _sender The address that advances the proposal.\n    function _advanceProposal(uint256 _proposalId, address _sender) internal virtual {\n        Proposal storage _proposal = proposals[_proposalId];\n        Stage[] storage _stages = stages[_proposal.stageConfigIndex];\n\n        if (_proposal.currentStage < _stages.length - 1) {\n            // is not last stage\n            uint16 newStage = ++_proposal.currentStage;\n            _proposal.lastStageTransition = uint64(block.timestamp);\n\n            // Grab the next stage's bodies' custom params of `createProposal`.\n            bytes[] memory customParams = new bytes[](_stages[newStage].bodies.length);\n            for (uint256 i = 0; i < _stages[newStage].bodies.length; i++) {\n                customParams[i] = createProposalParams[_proposalId][newStage][i];\n            }\n\n            _createBodyProposals(_proposalId, newStage, uint64(block.timestamp), customParams);\n\n            emit ProposalAdvanced(_proposalId, newStage, _sender);\n        } else {\n            _executeProposal(_proposalId);\n        }\n    }\n\n    /// @notice Sets a new trusted forwarder address and emits the event.\n    /// @param _forwarder The trusted forwarder.\n    function _setTrustedForwarder(address _forwarder) internal virtual {\n        trustedForwarder = _forwarder;\n\n        emit TrustedForwarderUpdated(_forwarder);\n    }\n\n    /// @notice Internal function to calculate and retrieve the number of approvals and\n    ///         vetoes for a proposal in the `_stageId`.\n    /// @dev Assumes that bodies are not duplicated in the same stage. See `_updateStages` function.\n    ///      This function ensures that only records from addresses in the stage configuration are used.\n    /// @param _proposalId The proposal Id.\n    /// @param _stageId The stage index.\n    /// @return approvals The number of approvals for the proposal.\n    /// @return vetoes The number of vetoes for the proposal.\n    function _getProposalTally(\n        uint256 _proposalId,\n        uint16 _stageId\n    ) internal view virtual returns (uint256 approvals, uint256 vetoes) {\n        // Cheaper to do 2nd sload than to pass Proposal memory.\n        Proposal storage proposal = proposals[_proposalId];\n        Stage storage stage = stages[proposal.stageConfigIndex][_stageId];\n\n        uint256 length = stage.bodies.length;\n\n        for (uint256 i = 0; i < length; ++i) {\n            Body storage body = stage.bodies[i];\n\n            uint256 bodyProposalId = getBodyProposalId(_proposalId, _stageId, body.addr);\n            ResultType resultType = getBodyResult(_proposalId, _stageId, body.addr);\n\n            if (resultType != ResultType.None) {\n                // result was already reported\n                resultType == ResultType.Approval ? ++approvals : ++vetoes;\n            } else if (bodyProposalId != PROPOSAL_WITHOUT_ID && !body.isManual) {\n                // result was not reported yet\n                // Use low-level call to ensure that outer tx doesn't revert\n                // which would cause proposal to never be able to advance.\n                (bool success, bytes memory data) = body.addr.staticcall(\n                    abi.encodeCall(IProposal.hasSucceeded, (bodyProposalId))\n                );\n\n                if (success && data.length == 32) {\n                    bool succeeded = abi.decode(data, (bool));\n                    if (succeeded) {\n                        body.resultType == ResultType.Approval ? ++approvals : ++vetoes;\n                    }\n                }\n            }\n        }\n    }\n\n    /// @notice Retrieves the original sender address, considering if the call was made through a trusted forwarder.\n    /// @dev If the `msg.sender` is the trusted forwarder, extracts the original sender from the calldata.\n    /// @return The address of the original caller or the `msg.sender` if not called through the trusted forwarder.\n    function _msgSender() internal view override returns (address) {\n        uint256 calldataLength = msg.data.length;\n\n        if (isTrustedForwarder(msg.sender) && calldataLength >= 20) {\n            // At this point we know that the sender is a trusted forwarder,\n            // so we trust that the last bytes of msg.data are the verified sender address.\n            // extract sender address from the end of msg.data\n            return address(bytes20(msg.data[calldataLength - 20:]));\n        } else {\n            return msg.sender;\n        }\n    }\n\n    /// @notice Overrides for `msg.data`. Defaults to the original `msg.data` whenever\n    ///         a call is not performed by the trusted forwarder or the calldata length\n    ///         is less than 20 bytes (an address length).\n    /// @return The calldata without appended address.\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        uint256 calldataLength = msg.data.length;\n\n        if (isTrustedForwarder(msg.sender) && calldataLength >= 20) {\n            return msg.data[:calldataLength - 20];\n        } else {\n            return msg.data;\n        }\n    }\n\n    /// @notice Internal helper function that decides if the stage's thresholds are satisfied.\n    /// @param _proposalId The proposal id.\n    /// @param _stageId The stage index.\n    /// @param _approvalThreshold The approval threshold of the `_stageId`.\n    /// @param _vetoThreshold The veto threshold of the `_stageId`.\n    /// @return Returns true if the thresholds are met, otherwise false.\n    function _thresholdsMet(\n        uint256 _proposalId,\n        uint16 _stageId,\n        uint256 _approvalThreshold,\n        uint256 _vetoThreshold\n    ) internal view returns (bool) {\n        (uint256 approvals, uint256 vetoes) = _getProposalTally(_proposalId, _stageId);\n\n        if (_vetoThreshold > 0 && vetoes >= _vetoThreshold) {\n            return false;\n        }\n\n        if (approvals < _approvalThreshold) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /// @notice Encodes a `ProposalState` into a `bytes32` representation where each bit enabled\n    ///         corresponds the underlying position in the `ProposalState` enum.\n    /// @param _proposalState The state of the proposal.\n    /// @return The bytes32 bitmap representation of the proposal state.\n    function _encodeStateBitmap(ProposalState _proposalState) internal pure returns (bytes32) {\n        return bytes32(1 << uint8(_proposalState));\n    }\n\n    /// @notice Checks if proposal is at the last stage or not.\n    /// @param _proposal The proposal struct.\n    /// @return Returns `true` if proposal is at the last stage, otherwise false.\n    function _isAtLastStage(Proposal storage _proposal) private view returns (bool) {\n        return _proposal.currentStage == stages[_proposal.stageConfigIndex].length - 1;\n    }\n\n    /// @notice Checks if proposal exists or not.\n    /// @param _proposal The proposal struct.\n    /// @return Returns `true` if proposal exists, otherwise false.\n    function _proposalExists(Proposal storage _proposal) private view returns (bool) {\n        return _proposal.lastStageTransition != 0;\n    }\n\n    /// @notice Check that the current state of a proposal matches the requirements described by the\n    ///         `allowedStates` bitmap. This bitmap should be built using `_encodeStateBitmap`.\n    /// @param _proposalId The proposal id.\n    /// @param _allowedStates The allowed states that proposal can be in.\n    /// @return Returns the current state of the proposal.\n    function _validateStateBitmap(\n        uint256 _proposalId,\n        bytes32 _allowedStates\n    ) private view returns (ProposalState) {\n        ProposalState currentState = state(_proposalId);\n        if (_encodeStateBitmap(currentState) & _allowedStates == bytes32(0)) {\n            revert Errors.UnexpectedProposalState(_proposalId, uint8(currentState), _allowedStates);\n        }\n        return currentState;\n    }\n\n    /// @dev This empty reserved space is put in place to allow future versions to add new\n    /// variables without shifting down storage in the inheritance chain.\n    /// https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n    uint256[44] private __gap;\n}\n"},"src/libraries/Errors.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\n/// @title Errors\n/// @author Aragon X - 2024\n/// @notice Library containing all custom errors the plugin may revert with.\nlibrary Errors {\n    // SPP\n\n    /// @notice Thrown when a proposal doesn't exist.\n    /// @param proposalId The ID of the proposal which doesn't exist.\n    error NonexistentProposal(uint256 proposalId);\n\n    /// @notice Thrown if the start date is less than current timestamp.\n    error StartDateInvalid(uint64);\n\n    /// @notice Thrown if stage durations are invalid.\n    error StageDurationsInvalid();\n\n    /// @notice Thrown if `_proposalParams`'s length exceeds `type(uint16).max`.\n    error Uint16MaxSizeExceeded();\n\n    /// @notice Thrown if the thresholds are invalid.\n    error StageThresholdsInvalid();\n\n    /// @notice Thrown if the proposal is not cancelable in the `stageId`.\n    error ProposalCanNotBeCancelled(uint256 proposalId, uint16 stageId);\n\n    /// @notice Thrown if the proposal is not editable.\n    /// @dev This can happen in 2 cases:\n    ///      either Proposal can not yet be advanced or,\n    ///      The stage has `editable:false` in the configuration.\n    /// @param proposalId The id of the proposal.\n    error ProposalCanNotBeEdited(uint256 proposalId, uint16 stageId);\n\n    /// @notice Thrown if the proposal has already been cancelled.\n    /// @param proposalId The id of the proposal.\n    error ProposalAlreadyCancelled(uint256 proposalId);\n\n    /// @notice Thrown if the proposal's state doesn't match the allowed state.\n    /// @param proposalId The id of the proposal.\n    /// @param currentState The current state of the proposal.\n    /// @param allowedStates The allowed state that must match the `currentState`, otherwise the error is thrown.\n    error UnexpectedProposalState(uint256 proposalId, uint8 currentState, bytes32 allowedStates);\n\n    /// @notice Thrown if a body address is duplicated in the same stage.\n    /// @param stageId The stage id that contains the duplicated body address.\n    /// @param body The address that is duplicated in `stageId`.\n    error DuplicateBodyAddress(uint256 stageId, address body);\n\n    /// @notice Thrown if the proposal with same actions and metadata already exists.\n    /// @param proposalId The id of the proposal.\n    error ProposalAlreadyExists(uint256 proposalId);\n\n    /// @notice Thrown if first stage's params don't match the count of the current first stage's bodies' count.\n    error InvalidCustomParamsForFirstStage();\n\n    /// @notice Thrown when the stages length is zero.\n    error StageCountZero();\n\n    /// @notice Thrown when the body tries to submit report for the stage id that has not yet become active.\n    /// @param currentStageId The stage id that proposal is currently at.\n    /// @param reportedStageId The stage id for which the report is being submitted.\n    error StageIdInvalid(uint64 currentStageId, uint64 reportedStageId);\n\n    /// @notice Thrown when the metadata is empty.\n    error EmptyMetadata();\n\n    error InsufficientGas();\n\n    // Trusted Forwarder\n    /// @notice Thrown when trusted forwarder can not execute the actions.\n    error IncorrectActionCount();\n\n    /// @notice Thrown when a body doesn't support IProposal interface.\n    error InterfaceNotSupported();\n\n    /// @notice Thrown if the proposal execution is forbidden.\n    /// @param proposalId The ID of the proposal.\n    error ProposalExecutionForbidden(uint256 proposalId);\n\n    /// @notice Thrown if the proposal advance is forbidden.\n    /// @param proposalId The ID of the proposal.\n    error ProposalAdvanceForbidden(uint256 proposalId);\n}\n"},"src/libraries/Permissions.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nlibrary Permissions {\n    /// @notice The ID of the permission required to call the `createProposal` function.\n    bytes32 internal constant CREATE_PROPOSAL_PERMISSION_ID =\n        keccak256(\"CREATE_PROPOSAL_PERMISSION\");\n\n    /// @notice The ID of the permission required to call the `setTrustedForwarder` function.\n    bytes32 internal constant SET_TRUSTED_FORWARDER_PERMISSION_ID =\n        keccak256(\"SET_TRUSTED_FORWARDER_PERMISSION\");\n\n    /// @notice The ID of the permission required to call the `updateStages` function.\n    bytes32 internal constant UPDATE_STAGES_PERMISSION_ID = keccak256(\"UPDATE_STAGES_PERMISSION\");\n\n    /// @notice The ID of the permission required to execute the proposal if it's on the last stage.\n    /// @dev It is important to use a different identifier than keccak256(\"EXECUTE_PERMISSION\") to ensure\n    ///      that it can still be granted with ANY_ADDR. Refer to the DAO.sol function -\n    ///      `isPermissionRestrictedForAnyAddr` for more details.\n    bytes32 internal constant EXECUTE_PROPOSAL_PERMISSION_ID =\n        keccak256(\"EXECUTE_PROPOSAL_PERMISSION\");\n\n    /// @notice The ID of the permission required to execute the proposal on the dao.\n    bytes32 internal constant EXECUTE_PERMISSION_ID = keccak256(\"EXECUTE_PERMISSION\");\n\n    /// @notice The ID of the permission required to cancel the proposal.\n    bytes32 internal constant CANCEL_PERMISSION_ID = keccak256(\"CANCEL_PERMISSION\");\n\n    /// @notice The ID of the permission required to advance the proposal.\n    bytes32 internal constant ADVANCE_PERMISSION_ID = keccak256(\"ADVANCE_PERMISSION\");\n\n    /// @notice The ID of the permission required to edit the proposal.\n    bytes32 internal constant EDIT_PERMISSION_ID = keccak256(\"EDIT_PERMISSION\");\n\n    /// @notice The ID of the permission required to call the `updateRules` function.\n    bytes32 internal constant UPDATE_RULES_PERMISSION_ID = keccak256(\"UPDATE_RULES_PERMISSION\");\n\n    /// @notice The ID of the permission required to call the `setTargetConfig` function.\n    bytes32 internal constant SET_TARGET_CONFIG_PERMISSION_ID =\n        keccak256(\"SET_TARGET_CONFIG_PERMISSION\");\n\n    /// @notice The ID of the permission required to call the `updateMetadata` function.\n    bytes32 internal constant SET_METADATA_PERMISSION_ID = keccak256(\"SET_METADATA_PERMISSION\");\n}\n"},"test/main.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nimport {\n    Blaxblux\n} from \"../src/Blaxblux.sol\";\n\ncontract PrepareInstallation_SPPSetup_UnitTest {\n\n    function setUp() public {\n        Blaxblux s = new Blaxblux();\n        Blaxblux s2 = new Blaxblux();\n    }\n\n\n    function test_WhenPreparingInstallation() external {\n       \n    }\n\n}"}},"settings":{"viaIR":false,"codegen":"yul","remappings":["forge-std/=node_modules/forge-std/src/","ds-test/=node_modules/ds-test/src/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/openzeppelin-foundry-upgrades/=node_modules/@openzeppelin/openzeppelin-foundry-upgrades/src/","@aragon/osx/=node_modules/@aragon/osx/","@aragon/osx-commons-contracts/=node_modules/@aragon/osx-commons-contracts/","@ensdomains/ens-contracts/=node_modules/@ensdomains/ens-contracts/"],"evmVersion":"cancun","outputSelection":{"*":{"":[],"*":["abi"]}},"optimizer":{"enabled":true,"mode":"3","fallback_to_optimizing_for_size":false,"disable_system_request_memoization":true},"metadata":{},"libraries":{},"enableEraVMExtensions":false,"forceEVMLA":false},"solc_version":"0.8.28","cli_settings":{"allowPaths":["/Users/giorgilagidze/Desktop/work/zksync","/Users/giorgilagidze/Desktop/work/zksync/lib"],"basePath":"/Users/giorgilagidze/Desktop/work/zksync","includePaths":["/Users/giorgilagidze/Desktop/work/zksync"]}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> src/Blaxblux.sol:14:9:\n   |\n14 |         address s = address(new SPP());\n   |         ^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"file":"src/Blaxblux.sol","start":362,"end":371},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> test/main.sol:11:9:\n   |\n11 |         Blaxblux s = new Blaxblux();\n   |         ^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"file":"test/main.sol","start":206,"end":216},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> test/main.sol:12:9:\n   |\n12 |         Blaxblux s2 = new Blaxblux();\n   |         ^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"file":"test/main.sol","start":243,"end":254},"type":"Warning"}],"contracts":{"node_modules/@aragon/osx-commons-contracts/src/dao/IDAO.sol":{"IDAO":{"abi":[{"type":"function","name":"deposit","inputs":[{"name":"_token","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_reference","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"getTrustedForwarder","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"hasPermission","inputs":[{"name":"_where","type":"address","internalType":"address"},{"name":"_who","type":"address","internalType":"address"},{"name":"_permissionId","type":"bytes32","internalType":"bytes32"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isValidSignature","inputs":[{"name":"_hash","type":"bytes32","internalType":"bytes32"},{"name":"_signature","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"registerStandardCallback","inputs":[{"name":"_interfaceId","type":"bytes4","internalType":"bytes4"},{"name":"_callbackSelector","type":"bytes4","internalType":"bytes4"},{"name":"_magicNumber","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMetadata","inputs":[{"name":"_metadata","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSignatureValidator","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTrustedForwarder","inputs":[{"name":"_trustedForwarder","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Deposited","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_reference","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"MetadataSet","inputs":[{"name":"metadata","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"NativeTokenDeposited","inputs":[{"name":"sender","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StandardCallbackRegistered","inputs":[{"name":"interfaceId","type":"bytes4","indexed":false,"internalType":"bytes4"},{"name":"callbackSelector","type":"bytes4","indexed":false,"internalType":"bytes4"},{"name":"magicNumber","type":"bytes4","indexed":false,"internalType":"bytes4"}],"anonymous":false},{"type":"event","name":"TrustedForwarderSet","inputs":[{"name":"forwarder","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@aragon/osx-commons-contracts/src/executors/IExecutor.sol":{"IExecutor":{"abi":[{"type":"function","name":"execute","inputs":[{"name":"_callId","type":"bytes32","internalType":"bytes32"},{"name":"_actions","type":"tuple[]","internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"_allowFailureMap","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"Executed","inputs":[{"name":"actor","type":"address","indexed":true,"internalType":"address"},{"name":"callId","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"actions","type":"tuple[]","indexed":false,"internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"allowFailureMap","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"failureMap","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"execResults","type":"bytes[]","indexed":false,"internalType":"bytes[]"}],"anonymous":false}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@aragon/osx-commons-contracts/src/permission/auth/DaoAuthorizableUpgradeable.sol":{"DaoAuthorizableUpgradeable":{"abi":[{"type":"function","name":"dao","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IDAO"}],"stateMutability":"view"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@aragon/osx-commons-contracts/src/plugin/IPlugin.sol":{"IPlugin":{"abi":[{"type":"function","name":"pluginType","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"enum IPlugin.PluginType"}],"stateMutability":"view"}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@aragon/osx-commons-contracts/src/plugin/PluginUUPSUpgradeable.sol":{"PluginUUPSUpgradeable":{"abi":[{"type":"function","name":"SET_TARGET_CONFIG_PERMISSION_ID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"UPGRADE_PLUGIN_PERMISSION_ID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"dao","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IDAO"}],"stateMutability":"view"},{"type":"function","name":"getCurrentTargetConfig","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}],"stateMutability":"view"},{"type":"function","name":"getTargetConfig","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}],"stateMutability":"view"},{"type":"function","name":"implementation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pluginType","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"enum IPlugin.PluginType"}],"stateMutability":"pure"},{"type":"function","name":"protocolVersion","inputs":[],"outputs":[{"name":"","type":"uint8[3]","internalType":"uint8[3]"}],"stateMutability":"pure"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"setTargetConfig","inputs":[{"name":"_targetConfig","type":"tuple","internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"_interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"upgradeTo","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeToAndCall","inputs":[{"name":"newImplementation","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"event","name":"AdminChanged","inputs":[{"name":"previousAdmin","type":"address","indexed":false,"internalType":"address"},{"name":"newAdmin","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BeaconUpgraded","inputs":[{"name":"beacon","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"TargetSet","inputs":[{"name":"newTargetConfig","type":"tuple","indexed":false,"internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"AlreadyInitialized","inputs":[]},{"type":"error","name":"DaoUnauthorized","inputs":[{"name":"dao","type":"address","internalType":"address"},{"name":"where","type":"address","internalType":"address"},{"name":"who","type":"address","internalType":"address"},{"name":"permissionId","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"DelegateCallFailed","inputs":[]},{"type":"error","name":"InvalidTargetConfig","inputs":[{"name":"targetConfig","type":"tuple","internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}]}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/IProposal.sol":{"IProposal":{"abi":[{"type":"function","name":"canExecute","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"createProposal","inputs":[{"name":"_metadata","type":"bytes","internalType":"bytes"},{"name":"_actions","type":"tuple[]","internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"_startDate","type":"uint64","internalType":"uint64"},{"name":"_endDate","type":"uint64","internalType":"uint64"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"customProposalParamsABI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"execute","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasSucceeded","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"proposalCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"ProposalCreated","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"creator","type":"address","indexed":true,"internalType":"address"},{"name":"startDate","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"endDate","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"metadata","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"actions","type":"tuple[]","indexed":false,"internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"allowFailureMap","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProposalExecuted","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol":{"ProposalUpgradeable":{"abi":[{"type":"function","name":"canExecute","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"createProposal","inputs":[{"name":"_metadata","type":"bytes","internalType":"bytes"},{"name":"_actions","type":"tuple[]","internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"_startDate","type":"uint64","internalType":"uint64"},{"name":"_endDate","type":"uint64","internalType":"uint64"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"customProposalParamsABI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"execute","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasSucceeded","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"proposalCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"supportsInterface","inputs":[{"name":"_interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"ProposalCreated","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"creator","type":"address","indexed":true,"internalType":"address"},{"name":"startDate","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"endDate","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"metadata","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"actions","type":"tuple[]","indexed":false,"internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"allowFailureMap","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProposalExecuted","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"FunctionDeprecated","inputs":[]}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@aragon/osx-commons-contracts/src/utils/metadata/MetadataExtensionUpgradeable.sol":{"MetadataExtensionUpgradeable":{"abi":[{"type":"function","name":"SET_METADATA_PERMISSION_ID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"dao","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IDAO"}],"stateMutability":"view"},{"type":"function","name":"getMetadata","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"setMetadata","inputs":[{"name":"_metadata","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"_interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"MetadataSet","inputs":[{"name":"metadata","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"error","name":"DaoUnauthorized","inputs":[{"name":"dao","type":"address","internalType":"address"},{"name":"where","type":"address","internalType":"address"},{"name":"who","type":"address","internalType":"address"},{"name":"permissionId","type":"bytes32","internalType":"bytes32"}]}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@aragon/osx-commons-contracts/src/utils/versioning/IProtocolVersion.sol":{"IProtocolVersion":{"abi":[{"type":"function","name":"protocolVersion","inputs":[],"outputs":[{"name":"_version","type":"uint8[3]","internalType":"uint8[3]"}],"stateMutability":"view"}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@aragon/osx-commons-contracts/src/utils/versioning/ProtocolVersion.sol":{"ProtocolVersion":{"abi":[{"type":"function","name":"protocolVersion","inputs":[],"outputs":[{"name":"","type":"uint8[3]","internalType":"uint8[3]"}],"stateMutability":"pure"}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ERC165Checker":{"abi":[],"userdoc":{},"devdoc":{},"hash":"01000007efdcf6c8c1d5a0121c0d942ee18b3c47c549b8c5320bf568ee5e2ccb","factoryDependencies":{},"eravm":{"bytecode":"0x00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000010ef4dff36c8647a36220431d349e98913bd6db7cbbf73e06189c180178235c8"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000010ef4dff36c8647a36220431d349e98913bd6db7cbbf73e06189c180178235c8","linkReferences":{}}},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"type":"event","name":"AdminChanged","inputs":[{"name":"previousAdmin","type":"address","indexed":false,"internalType":"address"},{"name":"newAdmin","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BeaconUpgraded","inputs":[{"name":"beacon","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"type":"event","name":"AdminChanged","inputs":[{"name":"previousAdmin","type":"address","indexed":false,"internalType":"address"},{"name":"newAdmin","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BeaconUpgraded","inputs":[{"name":"beacon","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"type":"function","name":"implementation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"upgradeTo","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeToAndCall","inputs":[{"name":"newImplementation","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"event","name":"AdminChanged","inputs":[{"name":"previousAdmin","type":"address","indexed":false,"internalType":"address"},{"name":"newAdmin","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BeaconUpgraded","inputs":[{"name":"beacon","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"userdoc":{},"devdoc":{},"hash":"01000007cf858dcfe7b5d13f84f62dac04495953df9a98f649f69d628f84b761","factoryDependencies":{},"eravm":{"bytecode":"0x00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000008969f88ab06bbdf622443205e03d975e05c3e42a7001d7e08d7f1c7f8aec2469"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000008969f88ab06bbdf622443205e03d975e05c3e42a7001d7e08d7f1c7f8aec2469","linkReferences":{}}},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"userdoc":{},"devdoc":{},"hash":"01000007a6d9b645e966b82a4534885298d5feb88d2e4a9f79f260eefe0735b6","factoryDependencies":{},"eravm":{"bytecode":"0x00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000ff51a3f29bc34d7479089755092d9e1dfefedfa626bd8bc492bd2739da34f1fb"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000ff51a3f29bc34d7479089755092d9e1dfefedfa626bd8bc492bd2739da34f1fb","linkReferences":{}}},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"userdoc":{},"devdoc":{},"hash":"010000075ce7c785728cda3d993ffc38c240288a5c4292f73981673cb4c8944e","factoryDependencies":{},"eravm":{"bytecode":"0x00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000010c3828744e368aad423a9281608877706d5f52b4d9140661c86037d32f26de0"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000010c3828744e368aad423a9281608877706d5f52b4d9140661c86037d32f26de0","linkReferences":{}}},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol":{"ERC165CheckerUpgradeable":{"abi":[],"userdoc":{},"devdoc":{},"hash":"0100000718ab0fc0cd53510b16db0305e4e7781bc971d3e68df285d792303568","factoryDependencies":{},"eravm":{"bytecode":"0x00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007da065b7d36e5f50ab12089306c3c6b4ca5aecc90f6d9331016df56a07570dbe"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007da065b7d36e5f50ab12089306c3c6b4ca5aecc90f6d9331016df56a07570dbe","linkReferences":{}}},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"userdoc":{},"devdoc":{},"factoryDependencies":{},"missingLibraries":[]}},"src/Blaxblux.sol":{"Blaxblux":{"abi":[{"type":"function","name":"setUp","inputs":[],"outputs":[],"stateMutability":"nonpayable"}],"userdoc":{},"devdoc":{},"hash":"01000021a51089f67aefcd6eb12ac70ace3f0481bc592948fa70a9d99191384e","factoryDependencies":{"01000c8b8c80bd028bc7dd9b19fc34458aa8c0de0f4d27db2aecbe494845a907":"src/StagedProposalProcessor.sol:StagedProposalProcessor"},"eravm":{"bytecode":"0x00020000000000020000006003100270000000180330019700010000003103550000008004000039000000400040043f0000000100200190000000280000c13d000000040030008c000000300000413d000000000101043b0000001a011001970000001b0010009c000000300000c13d0000000001000416000000000001004b000000300000c13d0000001c01000041000000a40010043f00000000010004140000001d02000041000000800020043f000000840000043f0000006002000039000000c40020043f000000e40000043f000000180010009c0000001801008041000000c0011002100000001e011001c70000800602000039005d00580000040f0000000100200190000000320000613d000000000101043b000000000001004b000000560000c13d00000001010003670000000002000031000000360000013d0000000001000416000000000001004b000000300000c13d00000020010000390000010000100443000001200000044300000019010000410000005e0001042e00000000010000190000005f0001043000010000000103550000006002100270000000180020019d00000018022001970000001f052001980000001f0620018f000000400300043d0000000004530019000000410000613d000000000701034f0000000008030019000000007907043c0000000008980436000000000048004b0000003d0000c13d000000000006004b0000004e0000613d000000000151034f0000000305600210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000180020009c00000018020080410000006001200210000000180030009c00000018030080410000004002300210000000000112019f0000005f0001043000000000010000190000005e0001042e0000005b002104210000000102000039000000000001042d0000000002000019000000000001042d0000005d000004320000005e0001042e0000005f0001043000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff000000000000000000000000000000000000000000000000000000000a9254e40000000000000000000000000000000000000000000000000000000001000c8b8c80bd028bc7dd9b19fc34458aa8c0de0f4d27db2aecbe494845a9079c4d535bdea7cd8a978f128b93471df48c7dbab89d703809115bdc118c235bfd0200000000000000000000000000000000000084000000800000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0b6b6f1897025e7e781eefb308154d16c0eb0fa36d734c952e2dd10a931d44a6b"},"evm":{"bytecode":{"object":"00020000000000020000006003100270000000180330019700010000003103550000008004000039000000400040043f0000000100200190000000280000c13d000000040030008c000000300000413d000000000101043b0000001a011001970000001b0010009c000000300000c13d0000000001000416000000000001004b000000300000c13d0000001c01000041000000a40010043f00000000010004140000001d02000041000000800020043f000000840000043f0000006002000039000000c40020043f000000e40000043f000000180010009c0000001801008041000000c0011002100000001e011001c70000800602000039005d00580000040f0000000100200190000000320000613d000000000101043b000000000001004b000000560000c13d00000001010003670000000002000031000000360000013d0000000001000416000000000001004b000000300000c13d00000020010000390000010000100443000001200000044300000019010000410000005e0001042e00000000010000190000005f0001043000010000000103550000006002100270000000180020019d00000018022001970000001f052001980000001f0620018f000000400300043d0000000004530019000000410000613d000000000701034f0000000008030019000000007907043c0000000008980436000000000048004b0000003d0000c13d000000000006004b0000004e0000613d000000000151034f0000000305600210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000180020009c00000018020080410000006001200210000000180030009c00000018030080410000004002300210000000000112019f0000005f0001043000000000010000190000005e0001042e0000005b002104210000000102000039000000000001042d0000000002000019000000000001042d0000005d000004320000005e0001042e0000005f0001043000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff000000000000000000000000000000000000000000000000000000000a9254e40000000000000000000000000000000000000000000000000000000001000c8b8c80bd028bc7dd9b19fc34458aa8c0de0f4d27db2aecbe494845a9079c4d535bdea7cd8a978f128b93471df48c7dbab89d703809115bdc118c235bfd0200000000000000000000000000000000000084000000800000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0b6b6f1897025e7e781eefb308154d16c0eb0fa36d734c952e2dd10a931d44a6b","linkReferences":{}}},"missingLibraries":[]}},"src/StagedProposalProcessor.sol":{"StagedProposalProcessor":{"abi":[{"type":"function","name":"SET_METADATA_PERMISSION_ID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"SET_TARGET_CONFIG_PERMISSION_ID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"UPGRADE_PLUGIN_PERMISSION_ID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"advanceProposal","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"canExecute","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"canProposalAdvance","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"cancel","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createProposal","inputs":[{"name":"_metadata","type":"bytes","internalType":"bytes"},{"name":"_actions","type":"tuple[]","internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"_allowFailureMap","type":"uint128","internalType":"uint128"},{"name":"_startDate","type":"uint64","internalType":"uint64"},{"name":"_proposalParams","type":"bytes[][]","internalType":"bytes[][]"}],"outputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createProposal","inputs":[{"name":"_metadata","type":"bytes","internalType":"bytes"},{"name":"_actions","type":"tuple[]","internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"_startDate","type":"uint64","internalType":"uint64"},{"name":"","type":"uint64","internalType":"uint64"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"customProposalParamsABI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"dao","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IDAO"}],"stateMutability":"view"},{"type":"function","name":"edit","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"},{"name":"_metadata","type":"bytes","internalType":"bytes"},{"name":"_actions","type":"tuple[]","internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"execute","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getBodyProposalId","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"},{"name":"_stageId","type":"uint16","internalType":"uint16"},{"name":"_body","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBodyResult","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"},{"name":"_stageId","type":"uint16","internalType":"uint16"},{"name":"_body","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint8","internalType":"enum StagedProposalProcessor.ResultType"}],"stateMutability":"view"},{"type":"function","name":"getCreateProposalParams","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"},{"name":"_stageId","type":"uint16","internalType":"uint16"},{"name":"_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getCurrentConfigIndex","inputs":[],"outputs":[{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"getCurrentTargetConfig","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}],"stateMutability":"view"},{"type":"function","name":"getMetadata","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getProposal","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct StagedProposalProcessor.Proposal","components":[{"name":"allowFailureMap","type":"uint128","internalType":"uint128"},{"name":"lastStageTransition","type":"uint64","internalType":"uint64"},{"name":"currentStage","type":"uint16","internalType":"uint16"},{"name":"stageConfigIndex","type":"uint16","internalType":"uint16"},{"name":"executed","type":"bool","internalType":"bool"},{"name":"canceled","type":"bool","internalType":"bool"},{"name":"creator","type":"address","internalType":"address"},{"name":"actions","type":"tuple[]","internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"targetConfig","type":"tuple","internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}]}],"stateMutability":"view"},{"type":"function","name":"getProposalTally","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"},{"name":"_stageId","type":"uint16","internalType":"uint16"}],"outputs":[{"name":"approvals","type":"uint256","internalType":"uint256"},{"name":"vetoes","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getStages","inputs":[{"name":"_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct StagedProposalProcessor.Stage[]","components":[{"name":"bodies","type":"tuple[]","internalType":"struct StagedProposalProcessor.Body[]","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"isManual","type":"bool","internalType":"bool"},{"name":"tryAdvance","type":"bool","internalType":"bool"},{"name":"resultType","type":"uint8","internalType":"enum StagedProposalProcessor.ResultType"}]},{"name":"maxAdvance","type":"uint64","internalType":"uint64"},{"name":"minAdvance","type":"uint64","internalType":"uint64"},{"name":"voteDuration","type":"uint64","internalType":"uint64"},{"name":"approvalThreshold","type":"uint16","internalType":"uint16"},{"name":"vetoThreshold","type":"uint16","internalType":"uint16"},{"name":"cancelable","type":"bool","internalType":"bool"},{"name":"editable","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getTargetConfig","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}],"stateMutability":"view"},{"type":"function","name":"getTrustedForwarder","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"hasAdvancePermission","inputs":[{"name":"_account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"hasExecutePermission","inputs":[{"name":"_account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"hasSucceeded","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"implementation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"_dao","type":"address","internalType":"contract IDAO"},{"name":"_trustedForwarder","type":"address","internalType":"address"},{"name":"_stages","type":"tuple[]","internalType":"struct StagedProposalProcessor.Stage[]","components":[{"name":"bodies","type":"tuple[]","internalType":"struct StagedProposalProcessor.Body[]","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"isManual","type":"bool","internalType":"bool"},{"name":"tryAdvance","type":"bool","internalType":"bool"},{"name":"resultType","type":"uint8","internalType":"enum StagedProposalProcessor.ResultType"}]},{"name":"maxAdvance","type":"uint64","internalType":"uint64"},{"name":"minAdvance","type":"uint64","internalType":"uint64"},{"name":"voteDuration","type":"uint64","internalType":"uint64"},{"name":"approvalThreshold","type":"uint16","internalType":"uint16"},{"name":"vetoThreshold","type":"uint16","internalType":"uint16"},{"name":"cancelable","type":"bool","internalType":"bool"},{"name":"editable","type":"bool","internalType":"bool"}]},{"name":"_pluginMetadata","type":"bytes","internalType":"bytes"},{"name":"_targetConfig","type":"tuple","internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isTrustedForwarder","inputs":[{"name":"_forwarder","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"pluginType","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"enum IPlugin.PluginType"}],"stateMutability":"pure"},{"type":"function","name":"proposalCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"protocolVersion","inputs":[],"outputs":[{"name":"","type":"uint8[3]","internalType":"uint8[3]"}],"stateMutability":"pure"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"reportProposalResult","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"},{"name":"_stageId","type":"uint16","internalType":"uint16"},{"name":"_resultType","type":"uint8","internalType":"enum StagedProposalProcessor.ResultType"},{"name":"_tryAdvance","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMetadata","inputs":[{"name":"_metadata","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTargetConfig","inputs":[{"name":"_targetConfig","type":"tuple","internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTrustedForwarder","inputs":[{"name":"_forwarder","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"state","inputs":[{"name":"_proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint8","internalType":"enum StagedProposalProcessor.ProposalState"}],"stateMutability":"view"},{"type":"function","name":"supportsInterface","inputs":[{"name":"_interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"updateStages","inputs":[{"name":"_stages","type":"tuple[]","internalType":"struct StagedProposalProcessor.Stage[]","components":[{"name":"bodies","type":"tuple[]","internalType":"struct StagedProposalProcessor.Body[]","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"isManual","type":"bool","internalType":"bool"},{"name":"tryAdvance","type":"bool","internalType":"bool"},{"name":"resultType","type":"uint8","internalType":"enum StagedProposalProcessor.ResultType"}]},{"name":"maxAdvance","type":"uint64","internalType":"uint64"},{"name":"minAdvance","type":"uint64","internalType":"uint64"},{"name":"voteDuration","type":"uint64","internalType":"uint64"},{"name":"approvalThreshold","type":"uint16","internalType":"uint16"},{"name":"vetoThreshold","type":"uint16","internalType":"uint16"},{"name":"cancelable","type":"bool","internalType":"bool"},{"name":"editable","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeTo","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeToAndCall","inputs":[{"name":"newImplementation","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"event","name":"AdminChanged","inputs":[{"name":"previousAdmin","type":"address","indexed":false,"internalType":"address"},{"name":"newAdmin","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BeaconUpgraded","inputs":[{"name":"beacon","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"MetadataSet","inputs":[{"name":"metadata","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"ProposalAdvanced","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"stageId","type":"uint16","indexed":true,"internalType":"uint16"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ProposalCanceled","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"stageId","type":"uint16","indexed":true,"internalType":"uint16"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ProposalCreated","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"creator","type":"address","indexed":true,"internalType":"address"},{"name":"startDate","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"endDate","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"metadata","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"actions","type":"tuple[]","indexed":false,"internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"allowFailureMap","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProposalEdited","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"stageId","type":"uint16","indexed":true,"internalType":"uint16"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"metadata","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"actions","type":"tuple[]","indexed":false,"internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"anonymous":false},{"type":"event","name":"ProposalExecuted","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProposalResultReported","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"stageId","type":"uint16","indexed":true,"internalType":"uint16"},{"name":"body","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"StagesUpdated","inputs":[{"name":"stages","type":"tuple[]","indexed":false,"internalType":"struct StagedProposalProcessor.Stage[]","components":[{"name":"bodies","type":"tuple[]","internalType":"struct StagedProposalProcessor.Body[]","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"isManual","type":"bool","internalType":"bool"},{"name":"tryAdvance","type":"bool","internalType":"bool"},{"name":"resultType","type":"uint8","internalType":"enum StagedProposalProcessor.ResultType"}]},{"name":"maxAdvance","type":"uint64","internalType":"uint64"},{"name":"minAdvance","type":"uint64","internalType":"uint64"},{"name":"voteDuration","type":"uint64","internalType":"uint64"},{"name":"approvalThreshold","type":"uint16","internalType":"uint16"},{"name":"vetoThreshold","type":"uint16","internalType":"uint16"},{"name":"cancelable","type":"bool","internalType":"bool"},{"name":"editable","type":"bool","internalType":"bool"}]}],"anonymous":false},{"type":"event","name":"SubProposalCreated","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"stageId","type":"uint16","indexed":true,"internalType":"uint16"},{"name":"body","type":"address","indexed":true,"internalType":"address"},{"name":"bodyProposalId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SubProposalNotCreated","inputs":[{"name":"proposalId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"stageId","type":"uint16","indexed":true,"internalType":"uint16"},{"name":"body","type":"address","indexed":true,"internalType":"address"},{"name":"reason","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"TargetSet","inputs":[{"name":"newTargetConfig","type":"tuple","indexed":false,"internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}],"anonymous":false},{"type":"event","name":"TrustedForwarderUpdated","inputs":[{"name":"forwarder","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"AlreadyInitialized","inputs":[]},{"type":"error","name":"DaoUnauthorized","inputs":[{"name":"dao","type":"address","internalType":"address"},{"name":"where","type":"address","internalType":"address"},{"name":"who","type":"address","internalType":"address"},{"name":"permissionId","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"DelegateCallFailed","inputs":[]},{"type":"error","name":"FunctionDeprecated","inputs":[]},{"type":"error","name":"InsufficientGas","inputs":[]},{"type":"error","name":"InvalidTargetConfig","inputs":[{"name":"targetConfig","type":"tuple","internalType":"struct IPlugin.TargetConfig","components":[{"name":"target","type":"address","internalType":"address"},{"name":"operation","type":"uint8","internalType":"enum IPlugin.Operation"}]}]},{"type":"error","name":"NonexistentProposal","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ProposalAdvanceForbidden","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ProposalAlreadyExists","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ProposalCanNotBeCancelled","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"stageId","type":"uint16","internalType":"uint16"}]},{"type":"error","name":"ProposalCanNotBeEdited","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"stageId","type":"uint16","internalType":"uint16"}]},{"type":"error","name":"ProposalExecutionForbidden","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"StageCountZero","inputs":[]},{"type":"error","name":"StartDateInvalid","inputs":[{"name":"","type":"uint64","internalType":"uint64"}]},{"type":"error","name":"Uint16MaxSizeExceeded","inputs":[]},{"type":"error","name":"UnexpectedProposalState","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"currentState","type":"uint8","internalType":"uint8"},{"name":"allowedStates","type":"bytes32","internalType":"bytes32"}]}],"userdoc":{},"devdoc":{},"hash":"01000c8b8c80bd028bc7dd9b19fc34458aa8c0de0f4d27db2aecbe494845a907","factoryDependencies":{},"eravm":{"bytecode":"0x00040000000000020017000000000002000000600310027000000bb90030019d00000bb903300197000300000031035500020000000103550000000100200190000000e60000c13d0000008006000039000000400060043f000000040030008c000014310000413d000000000201043b000000e00220027000000bc10020009c000001170000a13d00000bc20020009c000001420000213d00000bd10020009c000002150000a13d00000bd20020009c0000027b0000213d00000bd60020009c0000059a0000613d00000bd70020009c000006280000613d00000bd80020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b000000800000043f000000a00000043f000000c00000043f000000e00000043f000001000000043f000001200000043f000001400000043f0000006002000039000001600020043f000001e002000039000000400020043f000001a00000043f000001c00000043f000001a002000039000001800020043f000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000800000001001d000000400100043d000900000001001d00000c3e0010009c000006000000213d00000009040000290000012001400039000000400010043f0000000806000029000000000106041a00000c3f02100197000000000524043600000c23001001980000000002000039000000010200c039000000a003400039000700000003001d000000000023043500000c24001001980000000002000039000000010200c0390000008003400039000600000003001d0000000000230435000000d0021002700000ffff0220018f0000006003400039000300000003001d0000000000230435000000c0021002700000ffff0220018f0000004003400039000200000003001d0000000000230435000000800110027000000c0901100197000400000005001d0000000000150435000000c0024000390000000101600039000000000101041a00000bfb01100197000500000002001d00000000001204350000000201600039000000000401041a00000c090040009c000006000000213d00000005024002100000003f0220003900000c1102200197000000400300043d0000000002230019000100000003001d000000000032004b0000000003000039000000010300403900000c090020009c000006000000213d0000000100300190000006000000c13d000000400020043f000a00000004001d00000001020000290000000000420435000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000a05000029000000000005004b00000c700000c13d0000000901000029000000e00310003900000001010000290000000000130435000000400100043d00000c130010009c000006000000213d0000004002100039000000400020043f00000008020000290000000302200039000000000402041a00000bfb024001970000000002210436000000a004400270000000ff0440018f000000010040008c0000048b0000213d000000000042043500000009020000290000010004200039001100000004001d00000000001404350000002004000039000000400100043d0000000004410436000000000502043300000c3f0550019700000000005404350000000402000029000000000402043300000c090440019700000040051000390000000000450435000000020200002900000000040204330000ffff0440018f00000060051000390000000000450435000000030200002900000000040204330000ffff0440018f0000008005100039000000000045043500000006020000290000000004020433000000000004004b0000000004000039000000010400c039000000a005100039000000000045043500000007020000290000000004020433000000000004004b0000000004000039000000010400c039000000c00510003900000000004504350000000502000029000000000402043300000bfb04400197000000e00510003900000000004504350000000003030433000001000410003900000140050000390000000000540435000000000403043300000005054002100000000006510019000001600510003900000000004504350000018009600039000000000004004b000010160000c13d000001200210003900000011030000290000000003030433000000004303043400000bfb0330019700000000003204350000000002040433000000010020008c0000048b0000213d000001400310003900000000002304350000000002190049000001950000013d000000a001000039000000400010043f0000000001000416000000000001004b000014310000c13d0000000001000410000000800010043f000000000200041a0000ff00002001900000010b0000c13d000000ff0320018f000000ff0030008c000001030000613d000000ff012001bf000000000010041b000000ff01000039000000a00010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000bbe011001c70000800d02000039000000010300003900000bbf040000412ede2ecf0000040f0000000100200190000014310000613d000000800100043d00000001020000390000014000000443000001600010044300000020010000390000010000100443000001200020044300000bc00100004100002edf0001042e00000bba01000041000000a00010043f0000002001000039000000a40010043f0000002701000039000000c40010043f00000bbb01000041000000e40010043f00000bbc01000041000001040010043f00000bbd0100004100002ee00001043000000bdf0020009c0000019d0000a13d00000be00020009c000001e90000a13d00000be10020009c000002700000213d00000be50020009c000004bd0000613d00000be60020009c000005790000613d00000be70020009c000014310000c13d0000000001000416000000000001004b000014310000c13d00000c4d010000410000000000100443000000000100041200000004001004430000002400000443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c4e011001c700008005020000392ede2ed40000040f00000001002001900000201a0000613d000000400300043d00000bb90030009c00000bb90200004100000000020340190000004002200210000000000101043b00000bfb011001970000000004000410000000000014004b000008860000c13d00000c4c01000041000000000013043500000c21012001c700002edf0001042e00000bc30020009c000002610000a13d00000bc40020009c0000028a0000213d00000bc80020009c000005e90000613d00000bc90020009c000006620000613d00000bca0020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000016402000039000000000202041a0000ffff0220018f0000000401100370000000000101043b000000010310008a000000000023004b000018cd0000813d000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000201041a000a00000002001d00000c090020009c000006000000213d0000000a0200002900000005022002100000003f0220003900000c1102200197000000400300043d0000000002230019001100000003001d000000000032004b0000000003000039000000010300403900000c090020009c000006000000213d0000000100300190000006000000c13d000000400020043f00000011020000290000000a030000290000000000320435000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000a0000006b00000cd30000c13d000000400100043d00000020020000390000000003210436000000110200002900000000020204330000000000230435000000400310003900000005042002100000000006340019000000000002004b00000d9a0000c13d0000000007060019000000000217004900000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb9010080410000004001100210000000000112019f00002edf0001042e00000bee0020009c000001cb0000213d00000bf50020009c000002a60000a13d00000bf60020009c0000036d0000613d00000bf70020009c0000041b0000613d00000bf80020009c000014310000c13d000000640030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000002402100370000000000202043b001100000002001d0000ffff0020008c000014310000213d0000004402100370000000000202043b001000000002001d0000000401100370000000000101043b000000000010043f0000016101000039000000200010043f000000400200003900000000010000192ede2eba0000040f00000011020000292ede230d0000040f0000001002000029000000000020043f000000200010043f000000000100001900000040020000392ede2eba0000040f2ede232d0000040f0000002002000039000000400300043d001100000003001d00000000022304362ede22770000040f000008730000013d00000bef0020009c000002ec0000a13d00000bf00020009c000003760000613d00000bf10020009c0000042e0000613d00000bf20020009c000014310000c13d0000000001000416000000000001004b000014310000c13d000000e001000039000000400010043f0000002c01000039000000800010043f00000c6001000041000000a00010043f00000c6101000041000000c00010043f0000002001000039000000e00010043f000000800100003900000100020000392ede22770000040f000000e00110008a00000bb90010009c00000bb901008041000000600110021000000c62011001c700002edf0001042e00000be80020009c000002fe0000a13d00000be90020009c000004980000613d00000bea0020009c000004a10000613d00000beb0020009c000014310000c13d000000440030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000202043b001100000002001d0000002401100370000000000101043b001000000001001d0000ffff0010008c000014310000213d0000001101000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000101041a00000c32001001980000091c0000c13d00000c5901000041000000000010043f0000001101000029000000040010043f00000c030100004100002ee00001043000000bd90020009c000003190000a13d00000bda0020009c000004a70000613d00000bdb0020009c0000056d0000613d00000bdc0020009c000014310000c13d000000440030008c000014310000413d0000000002000416000000000002004b000014310000c13d000000fb02000039000000000202041a0000016404000039000000000404041a000000100440027000000bfb054001970000000004000411000000000054004b0000022f0000c13d000000140330008a000000000431034f000000000404043b000000600440027000000bfc05000041000000800050043f000000000500041000000bfb0b5001970000008400b0043f00000bfb0c400197000000a400c0043f00000c4404000041000000c40040043f0000008004000039000000e40040043f000001040030043f000000200400008a00000000064301700000001f0730018f0000012405600039000002460000613d0000012408000039000000000901034f000000009a09043c0000000008a80436000000000058004b000002420000c13d00000bfb02200197000000000007004b000002540000613d000000000161034f0000000307700210000000000605043300000000067601cf000000000676022f000000000101043b0000010007700089000000000171022f00000000017101cf000000000161019f0000000000150435000001240130003900000000000104350000000001000414000000040020008c00110000000b001d00100000000c001d000f00000002001d0000078e0000c13d0000000103000031000000200030008c00000020040000390000000004034019000007b90000013d00000bcb0020009c000003310000a13d00000bcc0020009c000004b20000613d00000bcd0020009c000005740000613d00000bce0020009c000014310000c13d0000000001000416000000000001004b000014310000c13d00000c2501000041000000800010043f00000c3a0100004100002edf0001042e00000be20020009c0000055a0000613d00000be30020009c0000058e0000613d00000be40020009c000014310000c13d0000000001000416000000000001004b000014310000c13d00000c4c010000410000049c0000013d00000bd30020009c000006060000613d00000bd40020009c000006b70000613d00000bd50020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b2ede26230000040f0000061e0000013d00000bc50020009c000006140000613d00000bc60020009c000006be0000613d00000bc70020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d000000fb02000039000000000202041a0000000404100370000000000404043b001100000004001d0000016404000039000000000404041a000000100440027000000bfb054001970000000004000411000000000054004b000007da0000c13d000000140330008a000000000431034f000000000404043b000000600b400270000007db0000013d00000bf90020009c0000033c0000613d00000bfa0020009c000014310000c13d000000640030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000202043b000f00000002001d0000002402100370000000000202043b00000c090020009c000014310000213d0000002304200039000000000034004b000014310000813d0000000404200039000000000441034f000000000404043b000d00000004001d00000c090040009c000014310000213d0000002404200039000600000004001d0000000d02400029000000000032004b000014310000213d0000004402100370000000000202043b000800000002001d00000c090020009c000014310000213d00000008020000290000002302200039000000000032004b000014310000813d00000008020000290000000402200039000000000221034f000000000202043b000e00000002001d00000c090020009c000014310000213d000000080200002900000024042000390000000e020000290000000502200210001000000004001d000500000002001d0000000002420019000000000032004b000014310000213d000000fb02000039000000000202041a0000016404000039000000000404041a000000100440027000000bfb044001970000000005000411000400000005001d000000000045004b00000df20000c13d000000140330008a000000000431034f000000000404043b000000600440027000000df30000013d00000bf30020009c0000034f0000613d00000bf40020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b00000c090010009c000014310000213d000000040110003900000000020300192ede224b0000040f000000000100001900002edf0001042e00000bec0020009c000003640000613d00000bed0020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d000000fb02000039000000000202041a0000000404100370000000000404043b001100000004001d0000016404000039000000000404041a000000100440027000000bfb044001970000000005000411000000000045004b000d00000005001d000007030000c13d000000140330008a000000000431034f000000000404043b000000600b400270000007040000013d00000bdd0020009c0000044f0000613d00000bde0020009c000014310000c13d0000000001000416000000000001004b000014310000c13d00000c2601000041000000000201041a000000010320019000000001012002700000007f0110618f0000001f0010008c00000000040000390000000104002039000000000442013f00000001004001900000077c0000613d00000c6b01000041000000000010043f0000002201000039000000040010043f00000c030100004100002ee00001043000000bcf0020009c000004910000613d00000bd00020009c000014310000c13d0000000001000416000000000001004b000014310000c13d00000c3c01000041000000000010043f00000c1f0100004100002ee000010430000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000201043b00000c7100200198000014310000c13d000000010100003900000c720020009c000008540000213d00000c780020009c000008c00000213d00000c450020009c000006bb0000613d00000c7a0020009c000006bb0000613d000008c90000013d0000000002000416000000000002004b000014310000c13d000000000131034f0000008002000039000000001301043c0000000002320436000000e00020008c000003540000c13d0000014001000039000000400010043f0000000101000039000000e00010043f0000000402000039000001000020043f000001200000043f000001400010043f000001600020043f000001800000043f00000c6d0100004100002edf0001042e000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b2ede237a0000040f000006210000013d0000000001000416000000000001004b000014310000c13d0000016401000039000000000101041a0000ffff0110018f000000800010043f00000c3a0100004100002edf0001042e000000a40030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000402043b00000c090040009c000014310000213d0000002302400039000000000032004b000014310000813d0000000405400039000000000251034f000000000202043b00000c090020009c000006000000213d0000001f0620003900000c7b066001970000003f0660003900000c7b0660019700000c180060009c000006000000213d00000024044000390000008006600039000000400060043f000000800020043f0000000004420019000000000034004b000014310000213d0000002004500039000000000541034f00000c7b062001980000001f0720018f000000a004600039000003a00000613d000000a008000039000000000905034f000000009a09043c0000000008a80436000000000048004b0000039c0000c13d000000000007004b000003ad0000613d000000000565034f0000000306700210000000000704043300000000076701cf000000000767022f000000000505043b0000010006600089000000000565022f00000000056501cf000000000575019f0000000000540435000000a00220003900000000000204350000002402100370000000000402043b00000c090040009c000014310000213d0000002302400039000000000032004b000014310000813d001100040040003d0000001102100360000000000602043b00000c090060009c000006000000213d00000005056002100000003f0250003900000c1102200197000000400700043d0000000002270019000a00000007001d000000000072004b0000000007000039000000010700403900000c090020009c000006000000213d0000000100700190000006000000c13d000000400020043f0000000a0200002900000000006204350000002404400039001000000045001d000000100030006b000014310000213d000000000006004b000011810000c13d0000004402100370000000000202043b000900000002001d00000c3f0020009c000014310000213d0000006402100370000000000202043b000800000002001d00000c090020009c000014310000213d0000008402100370000000000202043b00000c090020009c000014310000213d0000002304200039000000000034004b000000000500001900000c2b0500804100000c2b04400197000000000004004b000000000600001900000c2b0600404100000c2b0040009c000000000605c019000000000006004b000014310000c13d000e00040020003d0000000e04100360000000000504043b00000c090050009c000006000000213d00000005065002100000003f0460003900000c1104400197000000400700043d0000000004470019000700000007001d000000000074004b0000000007000039000000010700403900000c090040009c000006000000213d0000000100700190000006000000c13d000000400040043f00000007040000290000000004540436000600000004001d00000024042000390000000002040019000d00000046001d0000000d0030006b000014310000213d000000000005004b000015c20000c13d0000000002000411000d00000002001d000000fb02000039000000000202041a000000140530008c000017db0000413d0000016404000039000000000404041a000000100440027000000bfb044001970000000006000411000000000046004b0000000004060019000017dc0000c13d000000000351034f000000000303043b00000060043002700000000003050019000017dc0000013d0000000001000416000000000001004b000014310000c13d00000000010300192ede22650000040f001000000002001d001100000003001d000000000010043f0000015f01000039000000200010043f000000400200003900000000010000192ede2eba0000040f00000010020000292ede230d0000040f00000011020000292ede231d0000040f000000000101041a000006210000013d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b001100000001001d00000bfb0010009c000014310000213d00000c4d010000410000000000100443000000000100041200000004001004430000002400000443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c4e011001c700008005020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00000bfb011001970000000004000410000000000014004b000008cc0000c13d000000400100043d000000640210003900000c680300004100000a6f0000013d000000640030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000002402100370000000000202043b001100000002001d0000ffff0020008c000014310000213d0000004402100370000000000202043b001000000002001d00000bfb0020009c000014310000213d0000000401100370000000000101043b000000000010043f0000016001000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000001102000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000001002000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000101041a000000ff0110018f000000020010008c000006210000a13d00000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee0000104300000000001000416000000000001004b000014310000c13d0000016401000039000000000101041a00000010011002700000049d0000013d0000000001000416000000000001004b000014310000c13d000000fb01000039000000000101041a00000bfb01100197000000800010043f00000c3a0100004100002edf0001042e0000000001000416000000000001004b000014310000c13d000000800000043f00000c3a0100004100002edf0001042e000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b00000bfb0010009c000014310000213d2ede25470000040f0000061e0000013d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b00000bfb0010009c000014310000213d000000000100001900002edf0001042e000000440030008c000014310000413d0000000402100370000000000202043b001100000002001d00000bfb0020009c000014310000213d0000002402100370000000000402043b00000c090040009c000014310000213d0000002302400039000000000032004b000014310000813d0000000405400039000000000251034f000000000202043b00000c090020009c000006000000213d0000001f0620003900000c7b066001970000003f0660003900000c7b0660019700000c180060009c000006000000213d00000024044000390000008006600039000000400060043f000000800020043f0000000004420019000000000034004b000014310000213d0000002003500039000000000331034f00000c7b042001980000001f0520018f000000a001400039000004e90000613d000000a006000039000000000703034f000000007807043c0000000006860436000000000016004b000004e50000c13d000000000005004b000004f60000613d000000000343034f0000000304500210000000000501043300000000054501cf000000000545022f000000000303043b0000010004400089000000000343022f00000000034301cf000000000353019f0000000000310435000000a001200039000000000001043500000c4d010000410000000000100443000000000100041200000004001004430000002400000443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c4e011001c700008005020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00000bfb011001970000000004000410000000000014004b0000044b0000613d00000c4c02000041000000000202041a00000bfb02200197000000000012004b00000a6c0000c13d00000002020003670000000001000031000000fb03000039000000000303041a0000016405000039000000000505041a000000100550027000000bfb065001970000000005000411000000000065004b000005210000c13d000000140610008c000005210000413d000000000162034f000000000101043b00000060051002700000000001060019000000400800043d00000064068000390000008007000039000b00000007001d0000000000760435000000440680003900000c3d07000041000000000076043500000bfc0600004100000000006804350000008406800039000000000016043500000bfb065001970000002405800039000d00000006001d000000000065043500000bfb054001970000000404800039000c00000005001d000000000054043500000c7b061001980000001f0710018f001000000008001d000000a4048000390000000005640019000005410000613d000000000802034f0000000009040019000000008a08043c0000000009a90436000000000059004b0000053d0000c13d000f0bfb0030019b000000000007004b0000054f0000613d000000000262034f0000000303700210000000000605043300000000063601cf000000000636022f000000000202043b0000010003300089000000000232022f00000000023201cf000000000262019f00000000002504350000000002140019000000000002043500000000020004140000000f03000029000000040030008c0000105f0000c13d0000000103000031000000200030008c00000020040000390000000004034019000010900000013d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b00000bfb0010009c000014310000213d0000016402000039000000000202041a0000001002200270000000000112013f00000bfb0010019800000000010000390000000101006039000000800010043f00000c3a0100004100002edf0001042e0000000001000416000000000001004b000014310000c13d00000c4401000041000000800010043f00000c3a0100004100002edf0001042e0000000001000416000000000001004b000014310000c13d2ede265e0000040f0000060b0000013d000000840030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000002402100370000000000202043b0000ffff0020008c000014310000213d0000004402100370000000000202043b000000020020008c000014310000213d0000006401100370000000000101043b000000000001004b0000000002000039000000010200c039000000000021004b000004bb0000613d000014310000013d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b2ede237a0000040f000000030010008c00000000010000390000000101006039000006210000013d000000c40030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000202043b00000bfb0020009c000014310000213d0000002402100370000000000202043b00000bfb0020009c000014310000213d0000004402100370000000000202043b00000c090020009c000014310000213d0000002304200039000000000034004b000014310000813d0000000404200039000000000441034f000000000404043b00000c090040009c000014310000213d000000050440021000000000024200190000002402200039000000000032004b000014310000213d0000006402100370000000000202043b00000c090020009c000014310000213d0000002304200039000000000034004b000014310000813d0000000404200039000000000141034f000000000101043b00000c090010009c000014310000213d00000000011200190000002401100039000000000031004b000014310000213d0000000001000415000000130110008a0010000500100218000000000100041a001100000001001d000fff000010019400000fb40000c13d0000000001000415000000120110008a00100005001002180000001101000029000000ff0010019000000fb40000c13d000001000100008a000000110210017f000000800100003900000001022001bf00000c7c02200197000000000020041b0000000103000039000000000031043500000bb90010009c00000bb9010080410000004001100210000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c10011001c70000800d0200003900000bbf040000410000142e0000013d000000a40030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000402043b00000c090040009c000014310000213d0000002302400039000000000032004b000014310000813d0000000405400039000000000251034f000000000202043b00000c090020009c000006000000213d0000001f0620003900000c7b066001970000003f0660003900000c7b0660019700000c180060009c000009280000a13d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee0000104300000000001000416000000000001004b000014310000c13d2ede25f90000040f2ede26080000040f000000400200043d001100000002001d2ede22f00000040f000000110100002900000bb90010009c00000bb901008041000000400110021000000c3b011001c700002edf0001042e000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b00000bfb0010009c000014310000213d2ede268e0000040f000000000001004b0000000001000039000000010100c039000000400200043d000000000012043500000bb90020009c00000bb902008041000000400120021000000c21011001c700002edf0001042e000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b001100000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b001000000001001d00000011010000292ede237a0000040f0000001002000029000000000202041a001100000002001d000000d0022002700000ffff0220018f000000000020043f0000016302000039000000200020043f001000000001001d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000101041a000000000001004b000006fd0000613d000000010110008a0000001102000029000000c0022002700000ffff0220018f000000000112013f0000001002000029000000060220018f000000020220015f00000000002101a000000000010000390000000101006039000006210000013d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000202043b00000c090020009c000014310000213d0000002304200039000000000034004b000014310000813d001000040020003d0000001004100360000000000404043b001100000004001d00000c090040009c000014310000213d0000001102200029000f00240020003d0000000f0030006b000014310000213d000000fb02000039000000000202041a0000016404000039000000000404041a000000100440027000000bfb054001970000000004000411000000000054004b000006850000c13d000000140330008a000000000431034f000000000404043b000000600440027000000bfc05000041000000800050043f000000000500041000000bfb0b5001970000008400b0043f00000bfb0c400197000000a400c0043f00000c2504000041000000c40040043f0000008004000039000000e40040043f000001040030043f000000200a00008a0000000005a301700000001f0630018f00000124045000390000069c0000613d0000012407000039000000000801034f000000008908043c0000000007970436000000000047004b000006980000c13d00000bfb02200197000000000006004b000006aa0000613d000000000151034f0000000306600210000000000504043300000000056501cf000000000565022f000000000101043b0000010006600089000000000161022f00000000016101cf000000000151019f0000000000140435000001240130003900000000000104350000000001000414000000040020008c000e0000000b001d000d0000000c001d000c00000002001d00000ace0000c13d0000000103000031000000200030008c0000002004000039000000000403401900000af90000013d0000000001000416000000000001004b000014310000c13d00000c3d01000041000000800010043f00000c3a0100004100002edf0001042e000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b001100000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b001000000001001d00000011010000292ede237a0000040f000000030010008c0000087d0000c13d0000016401000039000000000101041a000000100110027000000bfb011001970000000003000411000000000013004b0000000002030019000006e70000c13d0000000001000031000000140110008c0000000002030019000006e70000413d0000000201100367000000000101043b0000006002100270000f00000002001d0000001001000029000000000101041a001000000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000401041a000000000004004b00000a800000c13d00000c6b01000041000000000010043f0000001101000039000000040010043f00000c030100004100002ee00001043000000bfb0b50019700000bfc04000041000000800040043f000000000400041000000bfb0c4001970000008400c0043f000000a400b0043f00000c5a04000041000000c40040043f0000008004000039000000e40040043f000001040030043f000000200400008a00000000064301700000001f0730018f00000124056000390000071a0000613d0000012408000039000000000901034f000000009a09043c0000000008a80436000000000058004b000007160000c13d00000bfb02200197000000000007004b000007280000613d000000000161034f0000000307700210000000000605043300000000067601cf000000000676022f000000000101043b0000010007700089000000000171022f00000000017101cf000000000161019f0000000000150435000001240130003900000000000104350000000001000414000000040020008c00100000000b001d000f0000000c001d000e00000002001d000007350000c13d0000000103000031000000200030008c00000020040000390000000004034019000007600000013d0000001f03300039000000000343016f00000bfe0030009c00000bfe03008041000000600330021000000bb90010009c00000bb901008041000000c001100210000000000113019f00000bff0110009a2ede2ed40000040f000000800a000039000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000080057001bf0000074f0000613d000000000801034f000000008908043c000000000a9a043600000000005a004b0000074b0000c13d000000000006004b0000075c0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f000300000001035500000001002001900000085b0000613d0000001f01400039000000600210018f00000080012001bf000000400010043f000000200030008c000014310000413d000000800300043d000000000003004b0000000004000039000000010400c039000000000043004b000014310000c13d000000000003004b000009f30000c13d00000c0403000041000000000031043500000084032001bf0000000e040000290000000000430435000000e40320003900000c5a040000410000000000430435000000c40320003900000010040000290000000000430435000000a4022000390000000f03000029000008500000013d000000800010043f000000000003004b000008670000613d00000c2602000041000000000020043f000000000001004b00000000020000190000086c0000613d00000c28030000410000000002000019000000000403041a000000a005200039000000000045043500000001033000390000002002200039000000000012004b000007860000413d0000086c0000013d0000001f03300039000000000343016f00000bfe0030009c00000bfe03008041000000600330021000000bb90010009c00000bb901008041000000c001100210000000000113019f00000bff0110009a2ede2ed40000040f000000800a000039000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000080057001bf000007a80000613d000000000801034f000000008908043c000000000a9a043600000000005a004b000007a40000c13d000000000006004b000007b50000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000100200190000008960000613d0000001f01400039000000600110018f00000080021001bf000e00000002001d000000400020043f000000200030008c000014310000413d000000800200043d000000000002004b0000000004000039000000010400c039000000000042004b000014310000c13d000000000002004b00000a100000c13d00000c04020000410000000e04000029000000000024043500000084021001bf0000000f030000290000000000320435000000e40210003900000c44030000410000000000320435000000c40210003900000010030000290000000000320435000000a40110003900000011020000290000000000210435000000400140021000000c05011001c700002ee00001043000000bfb0b40019700000bfc04000041000000800040043f000000000400041000000bfb04400197000000840040043f000000a400b0043f00000bfd04000041000000c40040043f000000e40060043f000001040030043f000000200400008a00000000064301700000001f0730018f0000012405600039000007f00000613d0000012408000039000000000901034f000000009a09043c0000000008a80436000000000058004b000007ec0000c13d00000bfb02200197000000000007004b000007fe0000613d000000000161034f0000000307700210000000000605043300000000067601cf000000000676022f000000000101043b0000010007700089000000000171022f00000000017101cf000000000161019f0000000000150435000001240130003900000000000104350000000001000414000000040020008c00100000000b001d000f00000002001d0000080a0000c13d0000000103000031000000200030008c00000020040000390000000004034019000008350000013d0000001f03300039000000000343016f00000bfe0030009c00000bfe03008041000000600330021000000bb90010009c00000bb901008041000000c001100210000000000113019f00000bff0110009a2ede2ed40000040f000000800a000039000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000080057001bf000008240000613d000000000801034f000000008908043c000000000a9a043600000000005a004b000008200000c13d000000000006004b000008310000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000100200190000008a20000613d0000001f01400039000000600210018f00000080012001bf000000400010043f000000200030008c000014310000413d000000800300043d000000000003004b0000000004000039000000010400c039000000000043004b000014310000c13d000000000003004b00000a3a0000c13d00000c0403000041000000000031043500000084032001bf0000000f040000290000000000430435000000e40320003900000bfd040000410000000000430435000000c40320003900000010040000290000000000430435000000a40220003900000000030004100000000000320435000000400110021000000c05011001c700002ee00001043000000c730020009c000008c50000213d00000c760020009c000006bb0000613d00000c770020009c000006bb0000613d000008c90000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000008620000c13d000008ad0000013d00000c7d02200197000000a00020043f000000000001004b00000020020000390000000002006039000000200220003900000080010000392ede22de0000040f000000400100043d001100000001001d00000080020000392ede22a90000040f0000001102000029000000000121004900000bb90010009c00000bb901008041000000600110021000000bb90020009c00000bb9020080410000004002200210000000000121019f00002edf0001042e00000c0602000041000000000020043f0000001102000029000000040020043f000000240010043f0000000801000039000000440010043f00000c070100004100002ee000010430000000640130003900000c4f040000410000000000410435000000440130003900000c5004000041000000000041043500000024013000390000003804000039000000000041043500000bba01000041000000000013043500000004013000390000002003000039000000000031043500000c05012001c700002ee0000104300000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b0000089d0000c13d000008ad0000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000008a90000c13d000000000005004b000008ba0000613d000000000161034f0000000305500210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000600130021000000bb90020009c00000bb9020080410000004002200210000000000112019f00002ee00001043000000c790020009c000006bb0000613d00000c520020009c000006bb0000613d000008c90000013d00000c740020009c000006bb0000613d00000c750020009c000006bb0000613d000000800000043f00000c3a0100004100002edf0001042e00000c4c02000041000000000202041a00000bfb02200197000000000012004b00000a6c0000c13d000000020c0003670000000001000031000000fb03000039000000000303041a0000016405000039000000000505041a000000100550027000000bfb065001970000000005000411000000000065004b000008e20000c13d000000140610008c000008e20000413d00000000016c034f000000000101043b00000060051002700000000001060019000000400800043d00000064068000390000008007000039000b00000007001d0000000000760435000000440680003900000c3d07000041000000000076043500000bfc0600004100000000006804350000008406800039000000000016043500000bfb065001970000002405800039000e00000006001d000000000065043500000bfb054001970000000404800039000d00000005001d0000000000540435000000200b00008a0000000006b101700000001f0710018f001000000008001d000000a4048000390000000005640019000009030000613d00000000080c034f0000000009040019000000008a08043c0000000009a90436000000000059004b000008ff0000c13d00000bfb02300197000000000007004b000009110000613d00000000086c034f0000000303700210000000000605043300000000063601cf000000000636022f000000000708043b0000010003300089000000000737022f00000000033701cf000000000363019f0000000000350435000000000314001900000000000304350000000004000414000000040020008c000c00000002001d00000b180000c13d0000000103000031000000200030008c0000002004000039000000000403401900000b480000013d000000110100002900000010020000292ede2a0e0000040f000000400300043d00000020043000390000000000240435000000000013043500000bb90030009c00000bb903008041000000400130021000000c3b011001c700002edf0001042e00000024044000390000008006600039000000400060043f000000800020043f0000000004420019000000000034004b000014310000213d0000002004500039000000000541034f00000c7b062001980000001f0720018f000000a0046000390000093b0000613d000000a008000039000000000905034f000000009a09043c0000000008a80436000000000048004b000009370000c13d000000000007004b000009480000613d000000000565034f0000000306700210000000000704043300000000076701cf000000000767022f000000000505043b0000010006600089000000000565022f00000000056501cf000000000575019f0000000000540435000000a00220003900000000000204350000002402100370000000000402043b00000c090040009c000014310000213d0000002302400039000000000032004b000014310000813d001100040040003d0000001102100360000000000602043b00000c090060009c000006000000213d00000005056002100000003f0250003900000c1102200197000000400700043d0000000002270019000e00000007001d000000000072004b0000000007000039000000010700403900000c090020009c000006000000213d0000000100700190000006000000c13d000000400020043f0000000e0200002900000000006204350000002404400039001000000045001d000000100030006b000014310000213d000000000006004b000011fe0000c13d0000004402100370000000000202043b000800000002001d00000c090020009c000014310000213d0000006402100370000000000202043b00000c090020009c000014310000213d0000008402100370000000000502043b00000c090050009c000014310000213d0000002302500039000000000032004b000000000400001900000c2b0400804100000c2b02200197000000000002004b000000000600001900000c2b0600404100000c2b0020009c000000000604c019000000000006004b000014310000c13d0000000406500039000000000261034f000000000202043b00000c090020009c000006000000213d0000001f0420003900000c7b044001970000003f0440003900000c7b07400197000000400400043d0000000007740019000000000047004b0000000008000039000000010800403900000c090070009c000006000000213d0000000100800190000006000000c13d0000002408500039000000400070043f00000000052404360000000007820019000000000037004b000014310000213d0000002006600039000000000761034f00000c7b082001980000001f0920018f0000000006850019000009a90000613d000000000a07034f000000000b05001900000000ac0a043c000000000bcb043600000000006b004b000009a50000c13d000000000009004b000009b60000613d000000000787034f0000000308900210000000000906043300000000098901cf000000000989022f000000000707043b0000010008800089000000000787022f00000000078701cf000000000797019f000000000076043500000000022500190000000000020435000000000204043300000c2c0020009c000014310000213d000000200020008c000014310000413d000000000605043300000c090060009c000014310000213d00000000025200190000000004460019000a00000004001d0000003f04400039000000000024004b000000000600001900000c2b0600804100000c2b04400197000000000502001900100c2b0020019b000000100740014f000000100040006c000000000400001900000c2b0400404100000c2b0070009c000000000406c019000000000004004b000014310000c13d0000000a020000290000002004200039000000000404043300000c090040009c000006000000213d00000005064002100000003f0760003900000c1107700197000000400200043d0000000007720019000700000002001d000000000027004b0000000008000039000000010800403900000c090070009c000006000000213d0000000100800190000006000000c13d000000400070043f00000007020000290000000002420436000600000002001d0000000a02000029000c00400020003d0000000c02600029000900000002001d000000000052004b000014310000213d00000009040000290000000c0040006b0000192f0000813d000b00060000002d000010be0000013d0000001101000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b001000000001001d00000011010000292ede237a0000040f000000010210020f000000090020019000000ba20000c13d00000c0602000041000000000020043f0000001102000029000000040020043f000000240010043f0000000901000039000000440010043f00000c070100004100002ee000010430000000040200008a000000000220003100000c2c0020009c000014310000213d000000400020008c000014310000413d000000c002100039000000400020043f00000002020003670000000404200370000000000404043b001100000004001d00000bfb0040009c000014310000213d0000000e04000029000000110500002900000000005404350000002402200370000000000202043b000000010020008c000014310000213d000000a001100039001000000001001d0000000000210435000000400100043d000000200210003900000c45040000410000000000420435000000240510003900000000004504350000002404000039000000000041043500000c140010009c000006000000213d0000006004100039000000400040043f0000001104000029000000040040008c00000fd40000c13d0000000001020433000000000010043f00000fff0000013d0000001101000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b001000000001001d00000011010000292ede237a0000040f000000030010008c00000c260000c13d0000001001000029000000000101041a001000000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000101041a000000000001004b000006fd0000613d000000010110008a0000001002000029000000c0022002700000ffff0220018f000000000012004b00000c260000c13d00000011010000292ede2b600000040f000000000100001900002edf0001042e000000400100043d000000640210003900000c63030000410000000000320435000000440210003900000c6403000041000000000032043500000024021000390000002c03000039000000000032043500000bba02000041000000000021043500000004021000390000002003000039000000000032043500000bb90010009c00000bb901008041000000400110021000000c05011001c700002ee0000104300000016401000039000000000101041a000000100110027000000bfb011001970000000002000411000000000012004b000000000200003900000001020060390000000003000031000000140130008c0000000005000039000000010500803900000000002501700000000001036019000000fb02000039000000000202041a000000400700043d00000bfc0300004100000000003704350000000f0300002900000bfb053001970000002403700039000600000005001d00000000005304350000000403700039000000000500041000000000005304350000008409700039000000640a700039000000440b70003900000bfb02200197000000020500036700000c7b06100197000e00000007001d000000a40870003900000000038100190000001f0710018f000000010440008a000000100c000029000000c00cc002700000ffff0cc0018f00000000004c004b000000000468001900000b740000c13d00000bfd0c0000410000000000cb0435000000800b0000390000000000ba04350000000000190435000000000006004b00000ab80000613d000000000905034f000000009a09043c0000000008a80436000000000048004b00000ab40000c13d000000000007004b00000ac50000613d000000000565034f0000000306700210000000000704043300000000076701cf000000000767022f000000000505043b0000010006600089000000000565022f00000000056501cf000000000575019f000000000054043500000000000304350000000003000414000000040020008c00000be00000c13d0000000103000031000000200030008c0000002004000039000000000403401900000c100000013d0000001f033000390000000003a3016f00000bfe0030009c00000bfe03008041000000600330021000000bb90010009c00000bb901008041000000c001100210000000000113019f00000bff0110009a2ede2ed40000040f000000800a000039000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000080057001bf00000ae80000613d000000000801034f000000008908043c000000000a9a043600000000005a004b00000ae40000c13d000000000006004b00000af50000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000000b960000613d0000001f01400039000000600110018f00000080021001bf000000400020043f000000200030008c000014310000413d000000800300043d000000000003004b0000000004000039000000010400c039000000000043004b000014310000c13d000000000003004b00000d440000c13d00000c0403000041000000000032043500000084031001bf0000000c040000290000000000430435000000e40310003900000c25040000410000000000430435000000c4031000390000000d040000290000000000430435000000a4011000390000000e030000290000000000310435000000400120021000000c05011001c700002ee0000104300000001f011000390000000001b1016f000000a40110003900000bb90010009c00000bb9010080410000006001100210000000100300002900000bb90030009c00000bb9030080410000004003300210000000000131019f00000bb90040009c00000bb904008041000000c003400210000000000113019f2ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f0000002007400190000000100570002900000b370000613d000000000801034f0000001009000029000000008a08043c0000000009a90436000000000059004b00000b330000c13d000000000006004b00000b440000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000000bd40000613d0000001f01400039000000600110018f0000001002100029000000000012004b00000000010000390000000101004039000f00000002001d00000c090020009c000006000000213d0000000100100190000006000000c13d0000000f01000029000000400010043f000000200030008c000014310000413d00000010010000290000000001010433000000000001004b0000000002000039000000010200c039000000000021004b000014310000c13d000000000001004b00000e900000c13d0000000f03000029000000640130003900000c3d02000041000000000021043500000044013000390000000e02000029000000000021043500000024013000390000000d02000029000000000021043500000c0401000041000000000013043500000004013000390000000c02000029000000000021043500000bb90030009c00000bb903008041000000400130021000000c05011001c700002ee00001043000000c080c0000410000000000cb0435000000800b0000390000000000ba04350000000000190435000000000006004b00000b800000613d000000000905034f000000009a09043c0000000008a80436000000000048004b00000b7c0000c13d000000000007004b00000b8d0000613d000000000565034f0000000306700210000000000704043300000000076701cf000000000767022f000000000505043b0000010006600089000000000565022f00000000056501cf000000000575019f000000000054043500000000000304350000000003000414000000040020008c00000c280000c13d0000000103000031000000200030008c0000002004000039000000000403401900000c580000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00000b9d0000c13d000008ad0000013d0000001001000029000000000101041a000f00000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000f02000029000000c002200270000fffff00200193000000000101043b000000000201041a0000000f0020006c000020d70000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000f020000290000000102200210000000000101043b00000000012100190000000101100039000000000101041a00000c2400100198000011620000c13d00000c5e01000041000000000010043f0000001101000029000000040010043f0000000f01000029000000240010043f00000c5f0100004100002ee0000104300000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00000bdb0000c13d000008ad0000013d0000001f0110003900000c7b01100197000000a40110003900000bb90010009c00000bb90100804100000060011002100000000e0400002900000bb90040009c00000bb9040080410000004004400210000000000141019f00000bb90030009c00000bb903008041000000c003300210000000000113019f2ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f00000020074001900000000e0570002900000bff0000613d000000000801034f0000000e09000029000000008a08043c0000000009a90436000000000059004b00000bfb0000c13d000000000006004b00000c0c0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000000e6c0000613d0000001f01400039000000600210018f0000000e01200029000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f000000200030008c000014310000413d0000000e010000290000000001010433000000000001004b0000000002000039000000010200c039000000000021004b000014310000c13d000000000001004b00000ea90000c13d00000c0201000041000002100000013d0000001f0110003900000c7b01100197000000a40110003900000bb90010009c00000bb90100804100000060011002100000000e0400002900000bb90040009c00000bb9040080410000004004400210000000000141019f00000bb90030009c00000bb903008041000000c003300210000000000113019f2ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f00000020074001900000000e0570002900000c470000613d000000000801034f0000000e09000029000000008a08043c0000000009a90436000000000059004b00000c430000c13d000000000006004b00000c540000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000000e780000613d0000001f01400039000000600210018f0000000e01200029000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f000000200030008c000014310000413d0000000e010000290000000001010433000000000001004b0000000002000039000000010200c039000000000021004b000014310000c13d000000000001004b00000ea90000c13d00000c0a01000041000002100000013d000000000601043b000000200700008a00000000080000190000000109000029000000400a00043d00000c1400a0009c000006000000213d0000006001a00039000000400010043f000000000106041a00000bfb0110019700000000011a04360000000102600039000000000202041a00000000002104350000000201600039000000000201041a0000000103200190000000010c2002700000007f0cc0618f0000001f00c0008c00000000040000390000000104002039000000000442013f00000001004001900000032b0000c13d000000400b00043d0000000004cb0436000000000003004b00000cb40000613d000b00000004001d000c0000000c001d000d0000000b001d000e0000000a001d000f00000009001d001000000008001d001100000006001d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000c0c00002900000000000c004b000000200700008a00000010080000290000000f0900002900000cba0000613d000000000201043b00000000010000190000000a0500002900000011060000290000000e0a0000290000000d0b0000290000000b0d00002900000000031d0019000000000402041a0000000000430435000000010220003900000020011000390000000000c1004b00000cac0000413d00000cbf0000013d00000c7d01200197000000000014043500000000000c004b0000002001000039000000000100603900000cbf0000013d00000000010000190000000a0500002900000011060000290000000e0a0000290000000d0b0000290000003f01100039000000000271016f0000000001b20019000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d0000002009900039000000400010043f0000004001a000390000000000b104350000000000a9043500000003066000390000000108800039000000000058004b00000c740000413d0000008e0000013d000000000801043b000c00000000001d000b00110000002d00000d000000013d0000000b0400002900000020044000390000000001a904360000000102800039000000000202041a00000c0903200197000000000031043500000c23002001980000000001000039000000010100c039000000e003900039000000000013043500000c24002001980000000001000039000000010100c039000000c0039000390000000000130435000000d0012002700000ffff0110018f000000a0039000390000000000130435000000c0012002700000ffff0110018f00000080039000390000000000130435000000800120027000000c090110019700000060039000390000000000130435000000400120027000000c090110019700000040029000390000000000120435000b00000004001d000000000094043500000002088000390000000c020000290000000102200039000c00000002001d0000000a0020006c000001880000813d000000400200043d00000c220020009c000006000000213d0000010003200039000000400030043f000000000408041a00000c090040009c000006000000213d00000005014002100000003f0110003900000c1101100197000000000131001900000c090010009c000006000000213d000f00000002001d000000400010043f000e00000003001d0000000000430435001000000008001d000000000080043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c70000801002000039000d00000004001d2ede2ed40000040f0000000100200190000014310000613d0000000d0b00002900000000000b004b00000010080000290000000f090000290000000e0a00002900000cd70000613d0000012002900039000000000101043b0000000003000019000000400400043d00000c180040009c000006000000213d0000008005400039000000400050043f000000000501041a00000c16005001980000000006000039000000010600c0390000004007400039000000000067043500000bfb06500197000000000664043600000c12005001980000000007000039000000010700c0390000000000760435000000b005500270000000ff0550018f000000020050008c0000048b0000213d000000600640003900000000005604350000000002420436000000010110003900000001033000390000000000b3004b00000d270000413d00000cd70000013d00000011030000290000001f0330003900000c7b033001970000003f0330003900000c7b03300197000000000332001900000c090030009c000006000000213d00000c7b0b000041000000400030043f000000110300002900000000003204350000000f03000029000000000030007c000014310000213d00000011030000290000000004b301700000001f0530018f000000a001100039000000000341001900000010060000290000002006600039000000020660036700000d620000613d000000000706034f0000000008010019000000007907043c0000000008980436000000000038004b00000d5e0000c13d000000000005004b00000d6f0000613d000000000446034f0000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000011031000290000000000030435000000000302043300000c090030009c000006000000213d00000c2604000041000000000504041a000000010050019000000001045002700000007f0440618f0000001f0040008c00000000060000390000000106002039000000000565013f00000001005001900000032b0000c13d000000200040008c00000d910000413d00000c2605000041000000000050043f0000001f05300039000000050550027000000c270550009a000000200030008c00000c28050040410000001f04400039000000050440027000000c270440009a000000000045004b00000d910000813d000000000005041b0000000105500039000000000045004b00000d8d0000413d0000001f0030008c000013ad0000a13d00000c2604000041000000000040043f0000000006b30170000013cf0000c13d000000200500003900000c2804000041000013db0000013d000000000500001900000dc50000013d00000000040a043300000c090440019700000000004904350000004004800039000000000404043300000c0904400197000000400960003900000000004904350000006004800039000000000404043300000c090440019700000060096000390000000000490435000000800480003900000000040404330000ffff0440018f00000080096000390000000000490435000000a00480003900000000040404330000ffff0440018f000000a0096000390000000000490435000000c0048000390000000004040433000000000004004b0000000004000039000000010400c039000000c0096000390000000000490435000000e004600039000000e0068000390000000006060433000000000006004b0000000006000039000000010600c03900000000006404350000000105500039000000000025004b0000000006070019000001940000813d0000000007160049000000400770008a000000000373043600000011040000290000002004400039001100000004001d000000000804043300000000ab080434000001000400003900000000094604360000010007600039000000000c0b04330000000000c70435000001200760003900000000000c004b00000d9c0000613d000000000d000019000000200bb00039000000000e0b0433000000004f0e043400000bfb0ff00197000000000ff704360000000004040433000000000004004b0000000004000039000000010400c03900000000004f04350000004004700039000000400fe00039000000000f0f043300000000000f004b000000000f000039000000010f00c0390000000000f404350000006004e00039000000000e0404330000000200e0008c0000048b0000213d00000060047000390000000000e404350000008007700039000000010dd000390000000000cd004b00000dd60000413d00000d9c0000013d000000000400041100000bfc05000041000000800050043f000000000500041000000bfb05500197000c00000005001d000000840050043f00000bfb04400197000b00000004001d000000a40040043f00000c6e04000041000000c40040043f0000008004000039000000e40040043f000001040030043f00000c7b053001980000001f0630018f000001240450003900000e0b0000613d0000012407000039000000000801034f000000008908043c0000000007970436000000000047004b00000e070000c13d00110bfb0020019b000000000006004b00000e190000613d000000000151034f0000000302600210000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f00000000001404350000012401300039000000000001043500000000010004140000001102000029000000040020008c00000e240000c13d0000000103000031000000200030008c0000002004000039000000000403401900000e500000013d0000001f0230003900000c7b0220019700000bfe0020009c00000bfe02008041000000600220021000000bb90010009c00000bb901008041000000c001100210000000000112019f00000bff0110009a00000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000080057001bf000000800a00003900000e3f0000613d000000000801034f000000008908043c000000000a9a043600000000005a004b00000e3b0000c13d000000000006004b00000e4c0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000000e840000613d0000001f01400039000000600210018f00000080012001bf000000400010043f000000200030008c000014310000413d000000800300043d000000000003004b0000000004000039000000010400c039000000000043004b000014310000c13d000000000003004b000011470000c13d00000c0403000041000000000031043500000084032001bf00000011040000290000000000430435000000e40320003900000c6e040000410000000000430435000000c4032000390000000b040000290000000000430435000000a4022000390000000c03000029000008500000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00000e730000c13d000008ad0000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00000e7f0000c13d000008ad0000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00000e8b0000c13d000008ad0000013d0000000f0100002900000c190010009c000006000000213d0000000f010000290000002002100039000e00000002001d000000400020043f000000000001043500000c5101000041000000000101041a000000ff001001900000126f0000c13d000000400200043d00000c5201000041001000000002001d00000000001204350000000005000415000000170550008a000000050550021000000000010004140000001102000029000000040020008c000012fd0000c13d00000020040000390000132b0000013d0000001101000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000e00000001001d000000000101041a001000000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000f00000001001d000000000101041a000000000001004b000006fd0000613d000000010110008a0000001002000029000000c0022002700000ffff0220018f000000000012004b00000a680000813d0000000e01000029000000000101041a000000c0021002700000ffff0220018f0000ffff0020008c000006fd0000613d00000c0b011001970000000102200039000c00000002001d000000c00220021000000c0c02200197000000000112019f0000000e02000029000000000012041b00000c0d010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d0000000e03000029000000000203041a00000c0f02200197000000000101043b00000c0901100197000500000001001d0000008001100210000000000112019f000000000013041b0000000f01000029000000000101041a0000000c0010006c000020d70000a13d0000000f01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000c02000029000a000100200218000000000101043b0000000a01100029000000000201041a00000c090020009c000006000000213d00000005012002100000003f0310003900000c1103300197000000400400043d0000000003340019000e00000004001d000000000043004b0000000004000039000000010400403900000c090030009c000006000000213d0000000100400190000006000000c13d000000400030043f0000000e030000290000000005230436000000000002004b00000f240000613d00000060020000390000000003000019000000000435001900000000002404350000002003300039000000000013004b00000f1f0000413d000b00000005001d0000000f01000029000000000101041a0000000c0010006c000020d70000a13d0000000c01000029000dffff001001930000000003000019001000000003001d0000000f01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000a01100029000000000101041a0000001102000029000000000020043f000000100010006b000018f40000813d0000016101000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000d02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000001002000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000201041a000000010320019000000001062002700000007f0660618f0000001f0060008c00000000040000390000000104002039000000000442013f00000001004001900000032b0000c13d000000400500043d0000000004650436000000000003004b00000f8f0000613d000700000004001d000800000006001d000900000005001d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000806000029000000000006004b00000f950000613d000000000201043b0000000001000019000000090500002900000007070000290000000003170019000000000402041a000000000043043500000001022000390000002001100039000000000061004b00000f870000413d00000f970000013d00000c7d012001970000000000140435000000000006004b0000002001000039000000000100603900000f970000013d000000000100001900000009050000290000003f0110003900000c7b021001970000000001520019000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f0000000e0100002900000000010104330000001003000029000000000031004b000020d70000a13d00000005013002100000000b0110002900000000005104350000000e010000290000000001010433000000000031004b000020d70000a13d00000001033000390000000f01000029000000000101041a0000000c0010006c00000f2c0000213d000020d70000013d00000c4001000041000000000010044300000000010004100000000400100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c41011001c700008002020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000000001004b000012890000c13d0000001101000029000000ff0110018f000000010010008c00000010010000290000000501100270000000000100003f000000010100603f0000128c0000c13d000000000200041a00000c7d0120019700000001021001bf000000000020041b0000000f0000006b000004bb0000c13d000000400100043d000005d90000013d00000bb90020009c00000bb9020080410000004002200210000000000101043300000bb90010009c00000bb9010080410000006001100210000000000121019f00000c46011001c700000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0540018f000000200440019000000fed0000613d000000000601034f0000000007000019000000006806043c0000000007870436000000000047004b00000fe90000c13d000000000005004b00000ffa0000613d000000000641034f0000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000100000003001f00030000000103550000000100200190000012c50000613d000000000100043d000000200030008c000012c50000413d000000000001004b000012c50000613d000000400100043d000000200210003900000c45040000410000000000420435000000240410003900000c470500004100000000005404350000002404000039000000000041043500000c140010009c000006000000213d0000006004100039000000400040043f0000001104000029000000040040008c000012960000c13d0000000001020433000000000010043f000012c10000013d00000000070000190000102a0000013d0000000302b00210000000000b0d0433000000000b2b01cf000000000b2b022f000000000a0a04330000010002200089000000000a2a022f00000000022a01cf0000000002b2019f00000000002d0435000000000298001900000000000204350000001f0280003900000c7b0220019700000000099200190000000107700039000000000047004b000000d90000813d0000000008190049000001800880008a000000200550003900000000008504350000002003300039000000000803043300000000ba08043400000bfb0aa00197000000000aa90436000000000b0b04330000000000ba043500000040088000390000000008080433000000400a900039000000600200003900000000002a0435000000600b90003900000000a808043400000000008b043500000c7b0c8001970000001f0b80018f000000800990003900000000009a004b000010520000813d00000000000c004b0000104e0000613d000000000eba0019000000000db90019000000200dd0008a000000200ee0008a000000000fcd00190000000002ce0019000000000202043300000000002f0435000000200cc0008c000010480000c13d00000000000b004b000010220000613d000000000d090019000010180000013d000000000dc9001900000000000c004b0000105b0000613d000000000e0a0019000000000f09001900000000e20e0434000000000f2f04360000000000df004b000010570000c13d00000000000b004b000010220000613d000000000aca0019000010180000013d0000001f0110003900000c7b01100197000000a40110003900000bb90010009c00000bb9010080410000006001100210000000100300002900000bb90030009c00000bb9030080410000004003300210000000000131019f00000bb90020009c00000bb902008041000000c002200210000000000112019f0000000f020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000010057000290000107f0000613d000000000801034f0000001009000029000000008a08043c0000000009a90436000000000059004b0000107b0000c13d000000000006004b0000108c0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000100200190000011f20000613d0000001f01400039000000600110018f0000001002100029000000000012004b00000000010000390000000101004039000e00000002001d00000c090020009c000006000000213d0000000100100190000006000000c13d0000000e01000029000000400010043f000000200030008c000014310000413d00000010010000290000000001010433000000000001004b0000000002000039000000010200c039000000000021004b000014310000c13d000000000001004b000013bf0000c13d0000000e03000029000000640130003900000c3d02000041000000000021043500000044013000390000000d02000029000000000021043500000024013000390000000c02000029000000000021043500000c0401000041000000000013043500000004013000390000000f0200002900000b6e0000013d0000000b020000290000000d040000290000000002420436000b00000002001d00000009040000290000000c0040006b0000192f0000813d0000000c020000290000000024020434000c00000002001d00000c090040009c000014310000213d0000000a044000290000005f06400039000000000056004b000000000700001900000c2b0700804100000c2b06600197000000100860014f000000100060006c000000000600001900000c2b0600404100000c2b0080009c000000000607c019000000000006004b000014310000c13d0000004002400039000f00000002001d000000000602043300000c090060009c000006000000213d00000005076002100000003f0870003900000c1108800197000000400200043d0000000008820019000d00000002001d000000000028004b0000000009000039000000010900403900000c090080009c000006000000213d0000000100900190000006000000c13d000000400080043f0000000d020000290000000000620435000000600b4000390011000000b7001d000000110050006b000014310000213d0000001100b0006c000010b70000813d0000000d0d000029000010ff0000013d00000000076700190000000302800210000000000604043300000000062601cf000000000626022f00000000070704330000010002200089000000000727022f00000000022701cf000000000262019f0000000000240435000000200dd000390000000002ec001900000000000204350000000000fd04350000001100b0006c000010b70000813d00000000b40b043400000c090040009c000014310000213d0000000f044000290000003f06400039000000000056004b000000000700001900000c2b0700804100000c2b06600197000000100860014f000000100060006c000000000600001900000c2b0600404100000c2b0080009c000000000607c019000000000006004b000014310000c13d0000002006400039000000000e06043300000c0900e0009c000006000000213d0000001f06e0003900000c7b066001970000003f0660003900000c7b06600197000000400f00043d00000000066f00190000000000f6004b0000000007000039000000010700403900000c090060009c000006000000213d0000000100700190000006000000c13d000000400060043f000000000cef0436000000400740003900000000047e0019000000000054004b000014310000213d00000c7b06e001970000001f08e0018f0000000000c7004b0000113b0000813d000000000006004b000011370000613d000000000987001900000000048c0019000000200440008a000000200990008a000000000a6400190000000002690019000000000202043300000000002a0435000000200660008c000011310000c13d000000000008004b000010f90000613d00000000040c0019000010ef0000013d00000000046c0019000000000006004b000011440000613d0000000009070019000000000a0c00190000000092090434000000000a2a043600000000004a004b000011400000c13d000000000008004b000010ee0000c13d000010f90000013d0000000f01000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000c00000001001d0000000f010000292ede237a0000040f001100000001001d000000010110020f00000009001001900000137b0000c13d00000c0601000041000000000010043f0000000f01000029000000040010043f000000110100002900000a0b0000013d0000001002000029000000000102041a00000c5b0110019700000c5c011001c7000000000012041b0000016401000039000000000101041a000000100110027000000bfb011001970000000002000411000000000012004b000011740000c13d0000000001000031000000140110008c000011740000413d0000000201100367000000000101043b000d006000100278000000000100041400000bb90010009c00000bb901008041000000c0011002100000000d0200002900000bfb0720019700000c1c011001c70000800d02000039000000040300003900000c5d0400004100000011050000290000000f060000290000142e0000013d000000800230008a000f00000002001d00000c2b072001970000000a080000290000118f0000013d00000020088000390000000002a50019000000000002043500000040029000390000000000b2043500000000009804350000002004400039000000100040006c000003d10000813d000000000241034f000000000202043b00000c090020009c000014310000213d000000110a20002900000c2b02a00197000000000572013f000000000072004b000000000200001900000c2b020040410000000f00a0006c000000000900001900000c2b0900204100000c2b0050009c000000000209c019000000000002004b000014310000c13d000000400900043d00000c140090009c000006000000213d0000006002900039000000400020043f000000200ba000390000000002b1034f000000000202043b00000bfb0020009c000014310000213d00000000022904360000002005b00039000000000551034f000000000505043b00000000005204350000004002b00039000000000221034f000000000202043b00000c090020009c000014310000213d000000000ca200190000003f02c00039000000000032004b000000000500001900000c2b0500804100000c2b02200197000000000002004b000000000a00001900000c2b0a00404100000c2b0020009c000000000a05c01900000000000a004b000014310000c13d000000200dc000390000000002d1034f000000000a02043b00000c0900a0009c000006000000213d0000001f02a0003900000c7b022001970000003f0220003900000c7b02200197000000400b00043d000000000e2b00190000000000be004b0000000002000039000000010200403900000c0900e0009c000006000000213d0000000100200190000006000000c13d0000004002c000390000004000e0043f0000000005ab043600000000022a0019000000000032004b000014310000213d0000002002d00039000000000221034f00000c7b0fa00198000000000df50019000011e40000613d000000000e02034f000000000c05001900000000e60e043c000000000c6c04360000000000dc004b000011e00000c13d0000001f0ca00190000011860000613d0000000002f2034f0000000306c00210000000000c0d0433000000000c6c01cf000000000c6c022f000000000202043b0000010006600089000000000262022f00000000026201cf0000000002c2019f00000000002d0435000011860000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000011f90000c13d000008ad0000013d000000800230008a000f00000002001d00000c2b072001970000000e080000290000120c0000013d00000020088000390000000002a50019000000000002043500000040029000390000000000b2043500000000009804350000002004400039000000100040006c0000096c0000813d000000000241034f000000000202043b00000c090020009c000014310000213d000000110a20002900000c2b02a00197000000000572013f000000000072004b000000000200001900000c2b020040410000000f00a0006c000000000900001900000c2b0900204100000c2b0050009c000000000209c019000000000002004b000014310000c13d000000400900043d00000c140090009c000006000000213d0000006002900039000000400020043f000000200ba000390000000002b1034f000000000202043b00000bfb0020009c000014310000213d00000000022904360000002005b00039000000000551034f000000000505043b00000000005204350000004002b00039000000000221034f000000000202043b00000c090020009c000014310000213d000000000ca200190000003f02c00039000000000032004b000000000500001900000c2b0500804100000c2b02200197000000000002004b000000000a00001900000c2b0a00404100000c2b0020009c000000000a05c01900000000000a004b000014310000c13d000000200dc000390000000002d1034f000000000a02043b00000c0900a0009c000006000000213d0000001f02a0003900000c7b022001970000003f0220003900000c7b02200197000000400b00043d000000000e2b00190000000000be004b0000000002000039000000010200403900000c0900e0009c000006000000213d0000000100200190000006000000c13d0000004002c000390000004000e0043f0000000005ab043600000000022a0019000000000032004b000014310000213d0000002002d00039000000000221034f00000c7b0fa00198000000000df50019000012610000613d000000000e02034f000000000c05001900000000e60e043c000000000c6c04360000000000dc004b0000125d0000c13d0000001f0ca00190000012030000613d0000000002f2034f0000000306c00210000000000c0d0433000000000c6c01cf000000000c6c022f000000000202043b0000010006600089000000000262022f00000000026201cf0000000002c2019f00000000002d0435000012030000013d00000c4001000041000000000010044300000011010000290000000400100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c41011001c700008002020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000000001004b000013b80000c13d000000400100043d000000640210003900000c66030000410000000000320435000000440210003900000c6703000041000000000032043500000024021000390000002d0300003900000a750000013d00000010010000290000000501100270000000000100003f000000400100043d000000640210003900000c42030000410000000000320435000000440210003900000c4303000041000000000032043500000024021000390000002e0300003900000a750000013d00000bb90020009c00000bb9020080410000004002200210000000000101043300000bb90010009c00000bb9010080410000006001100210000000000121019f00000c46011001c700000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0540018f0000002004400190000012af0000613d000000000601034f0000000007000019000000006806043c0000000007870436000000000047004b000012ab0000c13d000000000005004b000012bc0000613d000000000641034f0000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000100000003001f00030000000103550000000100200190000012ea0000613d000000000100043d000000200030008c000012ea0000413d000000000001004b000012ea0000613d000000100100002900000000010104330000000e02000029000000000202043300000bfb022001970000012d03000039000000000403041a00000c3604400197000000000424019f000000000043041b000000010010008c0000048b0000213d00000c4a04400197000000a00110021000000c1201100197000000000114019f000000000013041b000000400100043d000000000221043600000010030000290000000003030433000000010030008c0000048b0000213d000000000032043500000bb90010009c00000bb9010080410000004001100210000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c01011001c70000800d02000039000000010300003900000c4b040000410000142e0000013d000000400100043d000000200210003900000c45040000410000000000420435000000240410003900000c480500004100000000005404350000002404000039000000000041043500000c140010009c000006000000213d0000006004100039000000400040043f0000001104000029000000040040008c000014330000c13d0000000001020433000000000010043f0000145e0000013d000000100200002900000bb90020009c00000bb902008041000000400220021000000bb90010009c00000bb901008041000000c001100210000000000121019f00000c1f011001c700000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f00000020074001900000001005700029000013170000613d000000000801034f0000001009000029000000008a08043c0000000009a90436000000000059004b000013130000c13d000000000006004b000013240000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000005000415000000160550008a00000005055002100000000100200190000014ea0000613d0000001f01400039000000600210018f0000001001200029000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f000000200030008c000014310000413d000000100200002900000000020204330000000503500270000000000302001f00000c4c0020009c000014fa0000c13d00000c4001000041000000000010044300000011010000290000000400100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c41011001c700008002020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000000001004b0000127f0000613d00000c4c01000041000000000201041a00000c36022001970000001105000029000000000252019f000000000021041b000000000100041400000bb90010009c00000bb901008041000000c00110021000000c1c011001c70000800d02000039000000020300003900000c55040000412ede2ecf0000040f0000000100200190000014310000613d0000000f010000290000000001010433000000000001004b000004bb0000613d000000400100043d001000000001001d00000c140010009c000006000000213d00000010030000290000006001300039000000400010043f000000400130003900000c56020000410000000000210435000000200130003900000c57020000410000000000210435000000270100003900000000001304350000000f01000029000000000201043300000000010004140000001103000029000000040030008c0000178e0000c13d00000001020000390000000103000031000017a10000013d0000000c01000029000000000101041a000b00000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000b02000029000000c0022002700003ffff00200193000000000101043b000000000201041a000000030020006c000020d70000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d00000003020000290000000102200210000000000101043b00000000012100190000001102000029000000030020008c000015030000613d000000000201041a000000000002004b000015030000613d00000c0601000041000000000010043f0000000f01000029000000040010043f0000001101000029000008810000013d000000000003004b0000000004000019000013b10000613d0000000004010433000000030530021000000c7e0550027f00000c7e05500167000000000454016f0000000103300210000000000334019f000013e70000013d00000c4c01000041000000000201041a00000c360220019700000011022001af000000000021041b000000000100001900002edf0001042e00000c5101000041000000000101041a000000ff00100190000014700000c13d00000c52010000410000000e0200002900000000001204350000000005000415000000150550008a000000050550021000000000010004140000001102000029000000040020008c000014760000c13d0000002004000039000014a40000013d00000c28040000410000002005000039000000010760008a000000050770027000000c290770009a00000000082500190000000008080433000000000084041b00000020055000390000000104400039000000000074004b000013d40000c13d000000000036004b000013e50000813d0000000306300210000000f80660018f00000c7e0660027f00000c7e0660016700000000052500190000000005050433000000000565016f000000000054041b000000010330021000000001033001bf00000c2604000041000000000034041b0000002004000039000000400300043d0000000004430436000000000202043300000000002404350000000006b2016f0000001f0520018f0000004004300039000000000041004b000014030000813d000000000006004b000013ff0000613d00000000085100190000000007540019000000200770008a000000200880008a0000000009670019000000000a680019000000000a0a04330000000000a90435000000200660008c000013f90000c13d000000000005004b000014190000613d00000000070400190000140f0000013d0000000007640019000000000006004b0000140c0000613d00000000080100190000000009040019000000008a0804340000000009a90436000000000079004b000014080000c13d000000000005004b000014190000613d00000000016100190000000305500210000000000607043300000000065601cf000000000656022f00000000010104330000010005500089000000000151022f00000000015101cf000000000161019f00000000001704350000001f012000390000000001b1016f00000000024200190000000000020435000000400110003900000bb90010009c00000bb901008041000000600110021000000bb90030009c00000bb9030080410000004002300210000000000121019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000121019f00000c1c011001c70000800d02000039000000010300003900000c2a040000412ede2ecf0000040f0000000100200190000004bb0000c13d000000000100001900002ee00001043000000bb90020009c00000bb9020080410000004002200210000000000101043300000bb90010009c00000bb9010080410000006001100210000000000121019f00000c46011001c700000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0540018f00000020044001900000144c0000613d000000000601034f0000000007000019000000006806043c0000000007870436000000000047004b000014480000c13d000000000005004b000014590000613d000000000641034f0000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000100000003001f00030000000103550000000100200190000012c50000613d000000000100043d000000200030008c000012c50000413d000000000001004b000012c50000613d00000010010000290000000001010433000000010010008c0000048b0000213d0000000001000019000012c70000c13d000000400200043d001100000002001d00000c4901000041000000000012043500000004012000390000000e020000292ede22fe0000040f000014f00000013d00000c40010000410000000000100443000000110100002900000004001004430000000001000414000012740000013d0000000e0200002900000bb90020009c00000bb902008041000000400220021000000bb90010009c00000bb901008041000000c001100210000000000121019f00000c1f011001c700000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f00000020074001900000000e05700029000014900000613d000000000801034f0000000e09000029000000008a08043c0000000009a90436000000000059004b0000148c0000c13d000000000006004b0000149d0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000005000415000000140550008a00000005055002100000000100200190000014ea0000613d0000001f01400039000000600110018f0000000e0110002900000c090010009c000006000000213d000000400010043f000000200030008c000014310000413d0000000e0200002900000000020204330000000503500270000000000302001f00000c4c0020009c000014fa0000c13d00000c4001000041000000000010044300000011010000290000000400100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c41011001c700008002020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000000001004b0000127f0000613d00000c4c01000041000000000201041a00000c36022001970000001105000029000000000252019f000000000021041b000000000100041400000bb90010009c00000bb901008041000000c00110021000000c1c011001c70000800d02000039000000020300003900000c55040000412ede2ecf0000040f0000000100200190000014310000613d000000400100043d001000000001001d00000c140010009c000006000000213d00000010030000290000006001300039000000400010043f000000400130003900000c56020000410000000000210435000000200130003900000c5702000041000000000021043500000027010000390000000000130435000000800200043d00000000010004140000001103000029000000040030008c000018760000c13d00000001020000390000000103000031000018850000013d000000400200043d001100000002001d00000bba01000041000000000012043500000004012000392ede2a010000040f0000001102000029000000000121004900000bb90010009c00000bb901008041000000600110021000000bb90020009c00000bb9020080410000004002200210000000000121019f00002ee000010430000000640210003900000c53030000410000000000320435000000440210003900000c540300004100000000003204350000002402100039000000290300003900000a750000013d0000000101100039000000000101041a00000c23001001980000150f0000c13d00000c7001000041000000000010043f0000000f01000029000000040010043f0000000301000029000000240010043f00000c5f0100004100002ee0000104300000000c010000290000000202100039000000000102041a000c00000002001d000000000002041b000000000001004b0000156d0000c13d0000000e0000006b000016480000c13d000000020100036700110000000000350000016402000039000000000202041a000000100220027000000bfb022001970000000003000411000000000023004b000015270000c13d0000001102000029000000140220008c000015270000413d000000000221034f000000000202043b00040060002002780000000607100360000000400400043d0000004002000039000000000524043600000040024000390000000d03000029000000000032043500000c7b083001980000001f0930018f000c00000004001d000000600440003900000000068400190000153a0000613d000000000307034f000000000a040019000000003203043c000000000a2a043600000000006a004b000015360000c13d000000000009004b000015470000613d000000000287034f0000000303900210000000000706043300000000073701cf000000000737022f000000000202043b0000010003300089000000000232022f00000000023201cf000000000272019f00000000002604350000000d03000029000000000234001900000000000204350000001f0230003900000c7b0220019700000000042400190000000c0240006a00000000002504350000000e030000290000000000340435000d00000004001d0000000502400029000000200c200039000000000003004b0000171d0000c13d000000040100002900000bfb071001970000000c0200002900000000012c004900000bb90010009c00000bb901008041000000600110021000000bb90020009c00000bb9020080410000004002200210000000000121019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000121019f00000c1c011001c70000800d02000039000000040300003900000c6f040000410000000f0500002900000003060000290000142e0000013d00000003021000c9001100000002001d000000030220011a000000000021004b000006fd0000c13d0000000c01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000301043b0000001104300029000000000043004b000015160000813d000900000004001d000015970000013d0000001101000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000501043b0000001102000029000000000002041b0000000a030000290000000904000029000000000005041b0000000303300039000000000043004b000015160000813d000000000003041b0000000101300039000000000001041b0000000205300039000000000105041a000000010210019000000001061002700000007f0660618f0000001f0060008c00000000010000390000000101002039000000000012004b0000032b0000c13d000000000006004b000015940000613d0000001f0060008c000015930000a13d000b00000006001d000a00000003001d001100000005001d000000000050043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000201043b0000000b010000290000001f01100039000000050110027000000000011200190000000102200039000000000012004b000015830000813d000000000002041b0000000102200039000000000012004b000015bd0000413d000015830000013d0000003f0430008a000c00000004001d000b0c2b0040019b001000070000002d000015d00000013d00000010020000290000002002200039001000000002001d000000110400002900000000004204350000000f0200002900000020022000390000000d0020006c000004080000813d000f00000002001d000000000221034f000000000202043b00000c090020009c000014310000213d0000000e0920002900000c2b029001970000000b0420014f0000000b0020006c000000000200001900000c2b020040410000000c0090006c000000000500001900000c2b0500804100000c2b0040009c000000000205c019000000000002004b000014310000c13d0000002002900039000000000221034f000000000202043b00000c090020009c000006000000213d00000005052002100000003f0450003900000c1104400197000000400700043d0000000006470019001100000007001d000000000076004b0000000004000039000000010400403900000c090060009c000006000000213d0000000100400190000006000000c13d000000400060043f00000011040000290000000000240435000000400b900039000000000cb5001900000000003c004b000014310000213d0000000000cb004b000015c70000813d000000110d000029000016060000013d000000200dd000390000000002e4001900000000000204350000000000fd0435000000200bb000390000000000cb004b000015c70000813d0000000002b1034f000000000202043b00000c090020009c000014310000213d00000000029200190000005f04200039000000000034004b000000000500001900000c2b0500804100000c2b04400197000000000004004b000000000600001900000c2b0600404100000c2b0040009c000000000605c019000000000006004b000014310000c13d0000004005200039000000000451034f000000000e04043b00000c0900e0009c000006000000213d0000001f04e0003900000c7b044001970000003f0440003900000c7b04400197000000400f00043d00000000064f00190000000000f6004b0000000004000039000000010400403900000c090060009c000006000000213d0000000100400190000006000000c13d0000006002200039000000400060043f0000000004ef043600000000022e0019000000000032004b000014310000213d0000002002500039000000000821034f00000c7b07e0019800000000057400190000163a0000613d000000000608034f0000000002040019000000006a06043c0000000002a20436000000000052004b000016360000c13d0000001f02e00190000015ff0000613d000000000678034f0000000302200210000000000705043300000000072701cf000000000727022f000000000606043b0000010002200089000000000626022f00000000022601cf000000000272019f0000000000250435000015ff0000013d0000000003000019000016520000013d000000010160021000000001011001bf0000000a030000290000000905000029000000000015041b00000001033000390000000e0030006c000015180000813d000a00000003001d000000050130021000000010011000290000000201100367000000000501043b00000008010000290000000001100079000000830110008a00000c2b0250019700000c2b03100197000000000432013f000000000032004b000000000200001900000c2b02004041000b00000005001d000000000015004b000000000100001900000c2b0100804100000c2b0040009c000000000201c019000000000002004b000014310000c13d0000000c01000029000000000101041a001100000001001d00000c090010009c000006000000213d000000110100002900000001011000390000000c02000029000000000012041b000000000020043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000b030000290000001002300029000000000101043b0000000203000367000000000423034f000000000404043b00000bfb0040009c000014310000213d000000110500002900000003055000c90000000001510019000000000501041a00000c3605500197000000000445019f000000000041041b0000002004200039000000000443034f000000000404043b0000000105100039000000000045041b0000004004200039000000000543034f000000000400003100000000062400490000001f0660008a000000000505043b00000c2b0750019700000c2b08600197000000000987013f000000000087004b000000000700001900000c2b07004041000000000065004b000000000600001900000c2b0600804100000c2b0090009c000000000706c019000000000007004b000014310000c13d0000000002250019000000000323034f000000000303043b001100000003001d00000c090030009c000014310000213d000000110340006a000000200620003900000c2b0230019700000c2b04600197000000000524013f000000000024004b000000000200001900000c2b02004041000b00000006001d000000000036004b000000000300001900000c2b0300204100000c2b0050009c000000000203c019000000000002004b000014310000c13d0000000205100039000000000105041a000000010010019000000001031002700000007f0330618f0000001f0030008c00000000020000390000000102002039000000000121013f00000001001001900000032b0000c13d000000200030008c0000001104000029000900000005001d000016e40000413d000700000003001d000000000050043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d00000011040000290000001f024000390000000502200270000000200040008c0000000002004019000000000301043b00000007010000290000001f01100039000000050110027000000000011300190000000002230019000000000012004b0000000905000029000016e40000813d000000000002041b0000000102200039000000000012004b000016e00000413d000000200040008c000017000000413d000000000050043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000110600002900000c7b02600198000000000101043b0000170f0000613d000000020400036700000000030000190000000b070000290000000005730019000000000554034f000000000505043b000000000051041b00000001011000390000002003300039000000000023004b000016f70000413d000017110000013d000000000004004b0000000a030000290000000b060000290000170d0000613d000000030140021000000c7e0110027f00000c7e011001670000000202600367000000000202043b000000000112016f0000000102400210000000000121019f0000164e0000013d00000000010000190000164e0000013d00000000030000190000000b07000029000000000062004b0000164a0000813d0000000302600210000000f80220018f00000c7e0220027f00000c7e0220016700000000037300190000000203300367000000000303043b000000000223016f000000000021041b0000164a0000013d0000001103000029000000080230006a000000830520008a0000001f0630008a00000c2b075001970000000d09000029000000000a000019000000100b0000290000172f0000013d0000001f03d0003900000c7b0330019700000000042d00190000000000040435000000000c230019000000200bb00039000000010aa000390000000e00a0006c000015560000813d0000000d02c0006a000000200220008a000000200990003900000000002904350000000002b1034f000000000302043b00000c2b02300197000000000872013f000000000072004b000000000200001900000c2b02004041000000000053004b000000000d00001900000c2b0d00804100000c2b0080009c00000000020dc019000000000002004b000014310000c13d000000100d3000290000000002d1034f000000000202043b00000bfb0020009c000014310000213d00000000022c04360000002003d00039000000000331034f000000000303043b00000000003204350000000002d600490000004003d00039000000000331034f000000000303043b00000c2b0820019700000c2b0e300197000000000f8e013f00000000008e004b000000000800001900000c2b08004041000000000023004b000000000200001900000c2b0200804100000c2b00f0009c000000000802c019000000000008004b000014310000c13d0000000002d30019000000000321034f000000000d03043b00000c0900d0009c000014310000213d00000020032000390000001102d00069000000000023004b000000000800001900000c2b0800204100000c2b0220019700000c2b0e300197000000000f2e013f00000000002e004b000000000200001900000c2b0200404100000c2b00f0009c000000000208c019000000000002004b000014310000c13d0000004002c00039000000600400003900000000004204350000006002c000390000000000d20435000000000831034f00000c7b03d001980000008002c00039000000000e320019000017800000613d000000000f08034f000000000c02001900000000f40f043c000000000c4c04360000000000ec004b0000177c0000c13d0000001f0cd00190000017260000613d000000000338034f0000000304c0021000000000080e043300000000084801cf000000000848022f000000000303043b0000010004400089000000000343022f00000000034301cf000000000383019f00000000003e0435000017260000013d0000000e0300002900000bb90030009c00000bb903008041000000400330021000000bb90020009c00000bb9020080410000006002200210000000000232019f00000bb90010009c00000bb901008041000000c001100210000000000112019f00000011020000292ede2ed90000040f000000010220018f0003000000010355000000600110027000010bb90010019d00000bb903100197000000000003004b000017af0000c13d00000060010000390000000001010433000000000002004b0000188b0000613d000000000001004b000004bb0000c13d00000c40010000410000000000100443000000110100002900000004001004430000000001000414000018d80000013d00000c090030009c000006000000213d0000001f0130003900000c7b011001970000003f0110003900000c7b0700004100000c7b04100197000000400100043d0000000004410019000000000014004b0000000005000039000000010500403900000c090040009c000006000000213d0000000100500190000006000000c13d000000400040043f000000000631043600000000047301700000001f0530018f000b00000006001d00000000034600190000000306000367000017cd0000613d000000000706034f0000000b08000029000000007907043c0000000008980436000000000038004b000017c90000c13d000000000005004b000017a40000613d000000000446034f0000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f0000000000430435000017a40000013d0000000004000411000000400800043d000000640580003900000080060000390000000000650435000000440580003900000c2d06000041000000000065043500000bfc0500004100000000005804350000008405800039000000000035043500000bfb054001970000002404800039000f00000005001d0000000000540435000000000400041000000bfb054001970000000404800039000e00000005001d000000000054043500000c7b063001980000001f0730018f001100000008001d000000a4048000390000000005640019000017fc0000613d000000000801034f0000000009040019000000008a08043c0000000009a90436000000000059004b000017f80000c13d00100bfb0020019b000000000007004b0000180a0000613d000000000161034f0000000302700210000000000605043300000000062601cf000000000626022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000161019f00000000001504350000000001340019000000000001043500000000010004140000001002000029000000040020008c000018150000c13d0000000103000031000000200030008c00000020040000390000000004034019000018460000013d0000001f0230003900000c7b0220019700000bfe0020009c00000bfe020080410000006002200210000000110300002900000bb90030009c00000bb9030080410000004003300210000000000232019f00000bb90010009c00000bb901008041000000c001100210000000000112019f00000c2e0110009a00000010020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f00000020074001900000001105700029000018350000613d000000000801034f0000001109000029000000008a08043c0000000009a90436000000000059004b000018310000c13d000000000006004b000018420000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f000300000001035500000001002001900000186a0000613d0000001f01400039000000600210018f0000001101200029000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f000000200030008c000014310000413d00000011020000290000000002020433000000000002004b0000000003000039000000010300c039000000000032004b000014310000c13d000000000002004b000018c90000c13d000000640210003900000c2d03000041000000000032043500000044021000390000000f03000029000000000032043500000024021000390000000e03000029000000000032043500000c040200004100000000002104350000000402100039000000100300002900000a7a0000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000018710000c13d000008ad0000013d00000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb901008041000000c001100210000000000121019f00000c58011001c700000011020000292ede2ed90000040f000000010220018f0003000000010355000000600110027000010bb90010019d00000bb903100197000000000003004b0000189e0000c13d00000060010000390000000001010433000000000002004b000018d10000c13d000000000001004b000018950000c13d000000400200043d001100000002001d00000bba010000410000000000120435000000040120003900000010020000292ede22a90000040f000014f00000013d0000000b0200002900000bb90020009c00000bb902008041000000400220021000000bb90010009c00000bb9010080410000006001100210000000000121019f00002ee00001043000000c090030009c000006000000213d0000001f0130003900000c7b011001970000003f0110003900000c7b04100197000000400100043d0000000004410019000000000014004b0000000005000039000000010500403900000c090040009c000006000000213d0000000100500190000006000000c13d000000400040043f000000000631043600000c7b043001980000001f0530018f000b00000006001d00000000034600190000000306000367000018bb0000613d000000000706034f0000000b08000029000000007907043c0000000008980436000000000038004b000018b70000c13d000000000005004b000018880000613d000000000446034f0000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f0000000000430435000018880000013d0000016402000039000000000202041a0011ffff00200194000019420000c13d00000c6c01000041000000000010043f00000c1f0100004100002ee000010430000000000001004b000004bb0000c13d00000c4001000041000000000010044300000011010000290000000400100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c41011001c700008002020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000000001004b000004bb0000c13d000000400100043d000000440210003900000c6503000041000000000032043500000024021000390000001d03000039000000000032043500000bba02000041000000000021043500000004021000390000002003000039000000000032043500000bb90010009c00000bb901008041000000400110021000000c07011001c700002ee0000104300000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000101041a000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000201041a0000000c0020006c000020d70000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000a01100029000c00000001001d000000000101041a000000000001004b00001b6d0000c13d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c1c011001c70000800d02000039000000040300003900000c200400004100000011050000290000000d0600002900000006070000290000142e0000013d0000000002000411000c00000002001d000000fb02000039000000000202041a000000140530008c00001aa30000413d0000016404000039000000000404041a000000100440027000000bfb044001970000000006000411000000000046004b000000000406001900001aa40000c13d000000000351034f000000000303043b0000006004300270000000000305001900001aa40000013d000000100220027000000bfb022001970000000003000411000000000023004b0000194d0000c13d0000000002000031000000140220008c0000194d0000413d0000000202200367000000000202043b000d0060002002780000002002100039000000600300003900000000003204350000000a0300002900000000030304330000000504300210000000000541001900000080041000390000000000340435000000a008500039000000000003004b000019730000c13d000000200d00008a000000000328004900000040041000390000000000340435000000800300043d00000000043804360000000006d3016f0000001f0530018f000000a10040008c000019c00000413d000000000006004b0000196e0000613d000000000854001900000080075001bf000000200880008a0000000009680019000000000a670019000000000a0a04330000000000a90435000000200660008c000019680000c13d000000000005004b000019d60000613d000000a0060000390000000007040019000019cc0000013d00000000050000190000000a06000029000000200d00008a0000198a0000013d0000000009b90019000000030aa00210000000000b0c0433000000000bab01cf000000000bab022f0000000009090433000001000aa000890000000009a9022f0000000009a901cf0000000009b9019f00000000009c0435000000000987001900000000000904350000001f077000390000000007d7016f00000000088700190000000105500039000000000035004b0000195a0000813d0000000007180049000000a00770008a000000200440003900000000007404350000002006600039000000000706043300000000a907043400000bfb099001970000000009980436000000000a0a04330000000000a90435000000400770003900000000070704330000004009800039000000600a0000390000000000a90435000000600a800039000000009707043400000000007a0435000000000bd7016f0000001f0a70018f0000008008800039000000000089004b000019b30000813d00000000000b004b000019ae0000613d000000000da90019000000000ca80019000000200cc0008a000000200dd0008a000000000ebc0019000000000fbd0019000000000f0f04330000000000fe0435000000200bb0008c000019a80000c13d00000000000a004b000000200d00008a000019820000613d000000000c080019000019780000013d000000000cb8001900000000000b004b000019bc0000613d000000000d090019000000000e08001900000000df0d0434000000000efe04360000000000ce004b000019b80000c13d00000000000a004b000000200d00008a000019770000c13d000019820000013d0000000007640019000000000006004b000019c90000613d000000a0080000390000000009040019000000008a0804340000000009a90436000000000079004b000019c50000c13d000000000005004b000019d60000613d000000a0066000390000000305500210000000000807043300000000085801cf000000000858022f00000000060604330000010005500089000000000656022f00000000055601cf000000000585019f00000000005704350000000005430019000000000005043500000000041400490000001f0330003900000c7b0330019700000000034300190000000d0400002900000bfb064001970000006004100039000400000006001d0000000000640435000000200430008a00000000004104350000001f0330003900000c7b043001970000000003140019000000000043004b0000000004000039000000010400403900000c090030009c000006000000213d0000000100400190000006000000c13d000000400030043f00000bb90020009c00000bb9020080410000004002200210000000000101043300000bb90010009c00000bb9010080410000006001100210000000000121019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c1c011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000f00000001001d000000400100043d001000000001001d00000c2f010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d00000010020000290000002002200039000000000101043b000e00000002001d000000000012043500000c30010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000100400002900000080024000390000000f030000290000000000320435000000600240003900000000030004100000000000320435000000400240003900000000001204350000008001000039000000000014043500000c310040009c000006000000213d0000001002000029000000a001200039000000400010043f0000000e0100002900000bb90010009c00000bb9010080410000004001100210000000000202043300000bb90020009c00000bb9020080410000006002200210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c1c011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000500000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000300000001001d000000000101041a00000c320010019800001f0b0000c13d000000090200002900020c3f0020019b00000c340110019700000002011001af0000000302000029000000000012041b000000400200043d00000c130020009c000006000000213d0000004003200039000000400030043f000000200320003900000000000304350000000000020435000000400300043d00000c130030009c000006000000213d0000004002300039000000400020043f0000012d02000039000000000502041a00000bfb025001970000000004230436000000a003500270000000ff0330018f000000020030008c0000048b0000813d0000000000340435000000000002004b00001a7f0000c13d000000400300043d00000c130030009c000006000000213d000000fb02000039000000000202041a0000004004300039000000400040043f00000bfb0220019700000000032304360000000000030435000000000300001900000003060000290000000304600039000000000504041a00000c3505500197000000000252019f000000a003300210000000000232019f000000000024041b0000000102600039000000000302041a00000c360330019700000004033001af000000000032041b0000001102000029000000d00220021000000c6901100197000000000121019f000000000016041b00000c0d010000410000000000100443000000080100002900110c090010019c00001f150000c13d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00110c090010019b000800110000002d00001f240000013d0000000004000411000000400800043d000000640580003900000080060000390000000000650435000000440580003900000c2d06000041000000000065043500000bfc0500004100000000005804350000008405800039000000000035043500000bfb054001970000002404800039000f00000005001d0000000000540435000000000400041000000bfb054001970000000404800039000d00000005001d000000000054043500000c7b063001980000001f0730018f001100000008001d000000a404800039000000000564001900001ac40000613d000000000801034f0000000009040019000000008a08043c0000000009a90436000000000059004b00001ac00000c13d00100bfb0020019b000000000007004b00001ad20000613d000000000161034f0000000302700210000000000605043300000000062601cf000000000626022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000161019f00000000001504350000000001340019000000000001043500000000010004140000001002000029000000040020008c00001add0000c13d0000000103000031000000200030008c0000002004000039000000000403401900001b0e0000013d0000001f0230003900000c7b0220019700000bfe0020009c00000bfe020080410000006002200210000000110300002900000bb90030009c00000bb9030080410000004003300210000000000232019f00000bb90010009c00000bb901008041000000c001100210000000000112019f00000c2e0110009a00000010020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f0000002007400190000000110570002900001afd0000613d000000000801034f0000001109000029000000008a08043c0000000009a90436000000000059004b00001af90000c13d000000000006004b00001b0a0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000001b2d0000613d0000001f01400039000000600210018f0000001101200029000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f000000200030008c000014310000413d00000011020000290000000002020433000000000002004b0000000003000039000000010300c039000000000032004b000014310000c13d000000000002004b00001b390000c13d000000640210003900000c2d03000041000000000032043500000044021000390000000f03000029000000000032043500000024021000390000000d03000029000018640000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00001b340000c13d000008ad0000013d0000016402000039000000000202041a0011ffff00200194000018cd0000613d000000100220027000000bfb022001970000000003000411000000000023004b00001b480000c13d0000000002000031000000140220008c00001b480000413d0000000202200367000000000202043b000c0060002002780000002002100039000000600300003900000000003204350000000e0300002900000000030304330000000504300210000000000541001900000080041000390000000000340435000000a008500039000000000003004b00001de10000c13d000000000328004900000040041000390000000000340435000000800300043d000000000438043600000c7b063001970000001f0530018f000000a10040008c00001e2b0000413d000000000006004b00001b680000613d000000000854001900000080075001bf000000200880008a0000000009680019000000000a670019000000000a0a04330000000000a90435000000200660008c00001b620000c13d000000000005004b00001e410000613d000000a006000039000000000704001900001e370000013d000000000100041000070bfb0010019b0000000c01000029000100010010003d001000000000001d00001b9e0000013d0000000304400210000000000506043300000000054501cf000000000545022f0000000f0800002900000000080804330000010004400089000000000848022f00000000044801cf000000000454019f00000000004604350000001f0420003900000c7b0440019700000000023200190000000000020435000000400240003900000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb9010080410000004001100210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000121019f00000c1c011001c70000800d02000039000000040300003900000c1d0400004100000011050000290000000d060000292ede2ecf0000040f0000000100200190000014310000613d0000001002000029001000010020003d0000000c01000029000000000101041a000000100010006b000019230000813d0000000c01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000001001100029000a00000001001d000000000101041a000f00000001001d00000c120010019800001b980000c13d000000400200043d00000c130020009c000006000000213d0000004001200039000000400010043f00000001010000390000000003120436000000400400043d00000c140040009c000006000000213d0000006001400039000000400010043f0000004001400039000000600500003900000000005104350000002001400039000000000001043500000000000404350000000000430435000000400400043d000000200140003900000c1505000041000000000051043500000044014000390000000d0500002900000000005104350000002401400039000000110500002900000000005104350000000f01000029000000b001100270000000ff0110018f000000020010008c0000048b0000213d000000640540003900000000001504350000000f0100002900000c16001001980000000001000039000000010100c039000000840540003900000000001504350000008401000039000000000014043500000c170040009c000006000000213d000000c005400039000000400050043f00000c140050009c000006000000213d0000012001400039000000400010043f0000000701000029000000000015043500000100014000390000000000410435000000e00140003900000000000104350000000001020433000000000001004b000020d70000613d00000000005304350000000001000414000200000001001d000000400900043d00000060019000390000000d030000290000000000310435000000400190003900000011030000290000000000310435000000600100003900000000081904360000000701000029000000000018043500000c180090009c000006000000213d0000008001900039000900000001001d000000400010043f0000000101000029000000000101041a000000800110027000000c09011001970000000501100029000400000001001d00000c090010009c000006fd0000213d0000000e010000290000000001010433000000100010006c00001c130000a13d000000100100002900000005011002100000000b0110002900000000010104330000000903000029000900000001001d00001c1b0000013d000000090100002900000c190010009c000006000000213d000000a001900039000000400010043f00000009010000290000000000010435000000400300043d000000200430003900000c1a01000041000300000004001d00000000001404350000002404300039000000a001000039000800000004001d00000000001404350000000009090433000000c401300039000000000091043500000c7b0c9001970000001f0b90018f000000e40a3000390000000000a8004b00001c3b0000813d00000000000c004b00001c370000613d0000000001b800190000000004ba0019000000200440008a000000200710008a0000000001c400190000000006c7001900000000060604330000000000610435000000200cc0008c00001c310000c13d00000000000b004b00001c510000613d00000000040a001900001c470000013d0000000004ca001900000000000c004b00001c440000613d000000000108001900000000070a001900000000160104340000000007670436000000000047004b00001c400000c13d00000000000b004b00001c510000613d0000000008c800190000000301b00210000000000604043300000000061601cf000000000616022f00000000070804330000010001100089000000000717022f00000000011701cf000000000161019f00000000001404350000000001a9001900000000000104350000001f0190003900000c7b011001970000000008a10019000000080180006a000000440430003900000000001404350000000009020433000000000098043500000005019002100000000001180019000000200d100039000000000009004b00001caa0000613d000000000a000019000000000b08001900001c750000013d0000000301f0021000000000040d043300000000041401cf000000000414022f00000000050e04330000010001100089000000000515022f00000000011501cf000000000141019f00000000001d043500000000016c001900000000000104350000001f01c0003900000c7b01100197000000000d610019000000010aa0003900000000009a004b00001caa0000813d00000000018d0049000000200110008a000000200bb0003900000000001b043500000020022000390000000001020433000000006401043400000bfb0440019700000000044d043600000000060604330000000000640435000000400110003900000000010104330000004004d00039000000600500003900000000005404350000006004d0003900000000ec0104340000000000c4043500000c7b04c001970000001f0fc0018f0000008006d0003900000000006e004b00001c9d0000813d000000000004004b00001c990000613d0000000001fe00190000000007f60019000000200d70008a000000200110008a00000000074d0019000000000541001900000000050504330000000000570435000000200440008c00001c930000c13d00000000000f004b00001c6d0000613d000000000d06001900001c630000013d000000000d460019000000000004004b00001ca60000613d00000000010e00190000000007060019000000001501043400000000075704360000000000d7004b00001ca20000c13d00000000000f004b00001c6d0000613d000000000e4e001900001c630000013d0000000801d0006a000000a4023000390000000000120435000000040100002900000c0901100197000000840230003900000000001204350000006401300039000000050200002900000000002104350000000901000029000000006201043400000000052d043600000c7b042001970000001f0720018f000000000056004b00001ccb0000813d000000000004004b00001cc70000613d00000000017600190000000008750019000000200880008a000000200110008a0000000009480019000000000a410019000000000a0a04330000000000a90435000000200440008c00001cc10000c13d000000000007004b00001ce10000613d000000000805001900001cd70000013d0000000008450019000000000004004b00001cd40000613d00000000010600190000000009050019000000001a0104340000000009a90436000000000089004b00001cd00000c13d000000000007004b00001ce10000613d00000000064600190000000301700210000000000408043300000000041401cf000000000414022f00000000060604330000010001100089000000000616022f00000000011601cf000000000141019f00000000001804350000000001520019000000000001043500000000013500490000001f0220003900000c7b022001970000000001120019000000200210008a00000000002304350000001f0110003900000c7b011001970000000004310019000000000014004b0000000001000039000000010100403900000c090040009c000006000000213d0000000100100190000006000000c13d0000000f0100002900000bfb02100197000000400040043f00000000030304330000000001000414000000040020008c00001cfd0000c13d0000000101000031000000010200003900001d0f0000013d000000030400002900000bb90040009c00000bb904008041000000400440021000000bb90030009c00000bb9030080410000006003300210000000000343019f00000bb90010009c00000bb901008041000000c001100210000000000113019f2ede2ecf0000040f000000010220018f0003000000010355000000600110027000010bb90010019d00000bb901100197000000000001004b000f00800000003d000900600000003d00001d3e0000613d00000c090010009c000006000000213d0000001f0310003900000c7b033001970000003f0330003900000c7b03300197000000400400043d0000000003340019000900000004001d000000000043004b0000000004000039000000010400403900000c090030009c000006000000213d0000000100400190000006000000c13d000000400030043f0000000903000029000000000513043600000c7b04100198000f00000005001d0000000003450019000000030500036700001d310000613d000000000605034f0000000f07000029000000006806043c0000000007870436000000000037004b00001d2d0000c13d0000001f0110019000001d3e0000613d000000000445034f0000000301100210000000000503043300000000051501cf000000000515022f000000000404043b0000010001100089000000000414022f00000000011401cf000000000151019f00000000001304350000000001000414000000000002004b00001d860000613d00000009010000290000000001010433000000200010008c00001d8a0000c13d0000000f010000290000000001010433000f00000001001d0000001101000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000d02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000a02000029000000000202041a00000bfb02200197000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000f03000029000000000031041b0000000a01000029000000000201041a000000400100043d000000000031043500000bb90010009c00000bb9010080410000004001100210000000000300041400000bb90030009c00000bb903008041000000c003300210000000000113019f00000c10011001c700000bfb072001970000800d02000039000000040300003900000c1b0400004100001b930000013d00000002020000290000000602200270000000000021004b00001f110000413d0000001101000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000d02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000a02000029000000000202041a00000bfb02200197000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000010200008a000000000021041b0000000a01000029000000000301041a000000400100043d0000002002000039000000000421043600000009020000290000000002020433000000000024043500000bfb0730019700000c7b052001970000001f0420018f00000040031000390000000f0030006b00001dd40000813d000000000005004b00001dd00000613d0000000f084000290000000006430019000000200660008a000000200880008a0000000009560019000000000a580019000000000a0a04330000000000a90435000000200550008c00001dca0000c13d000000000004004b00001b7e0000613d000000000603001900001b730000013d0000000006530019000000000005004b00001ddd0000613d0000000f080000290000000009030019000000008a0804340000000009a90436000000000069004b00001dd90000c13d000000000004004b00001b7e0000613d000f000f0050002d00001b730000013d00000000050000190000000e0600002900001df70000013d0000000009b90019000000030aa00210000000000b0c0433000000000bab01cf000000000bab022f0000000009090433000001000aa000890000000009a9022f0000000009a901cf0000000009b9019f00000000009c0435000000000987001900000000000904350000001f0770003900000c7b0770019700000000088700190000000105500039000000000035004b00001b540000813d0000000007180049000000a00770008a000000200440003900000000007404350000002006600039000000000706043300000000a907043400000bfb099001970000000009980436000000000a0a04330000000000a90435000000400770003900000000070704330000004009800039000000600a0000390000000000a90435000000600a800039000000009707043400000000007a043500000c7b0b7001970000001f0a70018f0000008008800039000000000089004b00001e1f0000813d00000000000b004b00001e1b0000613d000000000da90019000000000ca80019000000200cc0008a000000200dd0008a000000000ebc0019000000000fbd0019000000000f0f04330000000000fe0435000000200bb0008c00001e150000c13d00000000000a004b00001def0000613d000000000c08001900001de50000013d000000000cb8001900000000000b004b00001e280000613d000000000d090019000000000e08001900000000df0d0434000000000efe04360000000000ce004b00001e240000c13d00000000000a004b00001de40000c13d00001def0000013d0000000007640019000000000006004b00001e340000613d000000a0080000390000000009040019000000008a0804340000000009a90436000000000079004b00001e300000c13d000000000005004b00001e410000613d000000a0066000390000000305500210000000000807043300000000085801cf000000000858022f00000000060604330000010005500089000000000656022f00000000055601cf000000000585019f00000000005704350000000005430019000000000005043500000000041400490000001f0330003900000c7b0330019700000000034300190000000c0400002900000bfb064001970000006004100039000400000006001d0000000000640435000000200430008a00000000004104350000001f0330003900000c7b043001970000000003140019000000000043004b0000000004000039000000010400403900000c090030009c000006000000213d0000000100400190000006000000c13d000000400030043f00000bb90020009c00000bb9020080410000004002200210000000000101043300000bb90010009c00000bb9010080410000006001100210000000000121019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c1c011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000f00000001001d000000400100043d001000000001001d00000c2f010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d00000010020000290000002002200039000000000101043b000d00000002001d000000000012043500000c30010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000100400002900000080024000390000000f030000290000000000320435000000600240003900000000030004100000000000320435000000400240003900000000001204350000008001000039000000000014043500000c310040009c000006000000213d0000001002000029000000a001200039000000400010043f0000000d0100002900000bb90010009c00000bb9010080410000004001100210000000000202043300000bb90020009c00000bb9020080410000006002200210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c1c011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000500000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000300000001001d000000000101041a00000c320010019800001f0b0000c13d00000c34021001970000000303000029000000000023041b000000400200043d00000c130020009c000006000000213d0000004003200039000000400030043f000000200320003900000000000304350000000000020435000000400300043d00000c130030009c000006000000213d0000004002300039000000400020043f0000012d02000039000000000502041a00000bfb025001970000000004230436000000a003500270000000ff0330018f000000010030008c0000048b0000213d0000000000340435000000000002004b00001ee70000c13d000000400300043d00000c130030009c000006000000213d000000fb02000039000000000202041a0000004004300039000000400040043f00000bfb0220019700000000032304360000000000030435000000000300001900000003060000290000000304600039000000000504041a00000c3505500197000000000252019f000000a003300210000000000232019f000000000024041b0000000102600039000000000302041a00000c360330019700000004033001af000000000032041b0000001102000029000000d00220021000000c3701100197000000000121019f000000000016041b00000c0d010000410000000000100443000000080100002900110c090010019c00001ffa0000c13d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00110c090010019b000800110000002d000020070000013d00000c3301000041000000000010043f0000000501000029000000040010043f00000c030100004100002ee00001043000000c1e01000041000000000010043f00000c1f0100004100002ee000010430000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00000c0901100197000000110010006b00001f240000813d00000c3801000041000002100000013d0000000801000029000000800110021000000c32011001970000000303000029000000000203041a00000c0f02200197000000000112019f000000000013041b000000070100002900000000010104330000ffff0010008c00001f340000a13d00000c6a01000041000000000010043f00000c1f0100004100002ee000010430000000020010008c00001ff10000413d000b00010000003d00001f3c0000013d0000000b02000029000b00010020003d0000000b0010006b000020dd0000813d0000000b0200002900000005022002100000000602200029000900000002001d00000000020204330000000003020433000000000003004b00001f380000613d0000000b010000290008ffff00100193000f00000000001d0000000f010000290000000501100210000000000112001900000020011000390000000001010433001100000001001d0000000501000029000000000010043f0000016101000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000802000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000f02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000e00000001001d00000011010000290000000021010434000c00000002001d001000000001001d00000c090010009c000006000000213d0000000e01000029000000000101041a000000010010019000000001021002700000007f0220618f000d00000002001d0000001f0020008c00000000020000390000000102002039000000000121013f00000001001001900000032b0000c13d0000000d01000029000000200010008c00001fa70000413d0000000e01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d00000010030000290000001f023000390000000502200270000000200030008c0000000002004019000000000301043b0000000d010000290000001f01100039000000050110027000000000011300190000000002230019000000000012004b00001fa70000813d000000000002041b0000000102200039000000000012004b00001fa30000413d0000001001000029000000200010008c00001fc60000413d0000000e01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000200200008a0000001002200180000000000101043b00001fd40000613d000000010320008a000000050330027000000000033100190000000104300039000000200300003900000011053000290000000005050433000000000051041b00000020033000390000000101100039000000000041004b00001fbe0000c13d00001fd50000013d000000100000006b00001fd20000613d0000001003000029000000030130021000000c7e0110027f00000c7e011001670000000c020000290000000002020433000000000112016f0000000102300210000000000121019f00001fe30000013d000000000100001900001fe30000013d0000002003000039000000100020006c00001fe00000813d00000010020000290000000302200210000000f80220018f00000c7e0220027f00000c7e0220016700000011033000290000000003030433000000000223016f000000000021041b0000001001000029000000010110021000000001011001bf0000000e02000029000000000012041b000000070100002900000000010104330000000b0010006c000020d70000a13d0000000f04000029000f00010040003d0000000902000029000000000202043300000000030204330000000f0030006b00001f470000413d00001f380000013d000000000001004b000020e10000c13d000000400300043d00000c190030009c000006000000213d0000002001300039000000400010043f0000000000030435000020e30000013d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00000c0901100197000000110010006b00001f220000413d0000000801000029000000800110021000000c32011001970000000303000029000000000203041a00000c0f02200197000000000112019f000000000013041b000000070100002900000000010104330000ffff0010008c00001f300000213d000000010010008c00000000020000390000000102002039000000020010008c0000219a0000413d000a00010000003d000020200000013d000000000001042f0000000a02000029000a00010020003d0000000a0010006b0000000102000039000021a30000813d0000000100200190000020d70000613d0000000a0200002900000005022002100000000602200029000900000002001d00000000020204330000000003020433000000000003004b0000201b0000613d0000000a010000290008ffff00100193000f00000000001d0000000f010000290000000501100210000000000112001900000020011000390000000001010433001100000001001d0000000501000029000000000010043f0000016101000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000802000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000f02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000d00000001001d00000011010000290000000021010434000b00000002001d001000000001001d00000c090010009c000006000000213d0000000d01000029000000000101041a000000010010019000000001021002700000007f0220618f000c00000002001d0000001f0020008c00000000020000390000000102002039000000000121013f00000001001001900000032b0000c13d0000000c01000029000000200010008c0000208d0000413d0000000d01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d00000010030000290000001f023000390000000502200270000000200030008c0000000002004019000000000301043b0000000c010000290000001f01100039000000050110027000000000011300190000000002230019000000000012004b0000208d0000813d000000000002041b0000000102200039000000000012004b000020890000413d0000001001000029000000200010008c000020ac0000413d0000000d01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000200200008a0000001002200180000000000101043b000020b80000613d000000010320008a000000050330027000000000033100190000000104300039000000200300003900000011053000290000000005050433000000000051041b00000020033000390000000101100039000000000041004b000020a40000c13d000020b90000013d000000100000006b000020c80000613d0000001003000029000000030130021000000c7e0110027f00000c7e011001670000000b020000290000000002020433000000000112016f0000000102300210000000000121019f000020c90000013d0000002003000039000000100020006c000020c40000813d00000010020000290000000302200210000000f80220018f00000c7e0220027f00000c7e0220016700000011033000290000000003030433000000000223016f000000000021041b0000001001000029000000010110021000000001011001bf000020c90000013d00000000010000190000000d02000029000000000012041b000000070100002900000000010104330000000a0010006c000020d70000a13d0000000f04000029000f00010040003d0000000902000029000000000202043300000000030204330000000f0030006b0000202d0000413d0000201b0000013d00000c6b01000041000000000010043f0000003201000039000000040010043f00000c030100004100002ee0000104300000000301000029000000000101041a000000800110027000110c090010019b00000006010000290000000003010433000000050100002900000011020000292ede27400000040f0000000301000029000000000201041a000000400100043d0000004003100039000000a0070000390000000000730435000000800220027000000c090220019700000000022104360000000000020435000000a003100039000000800200043d000000000023043500000c7b052001970000001f0420018f000000c003100039000000a10030008c000021080000413d000000000005004b000021030000613d000000000743001900000080064001bf000000200770008a0000000008570019000000000956001900000000090904330000000000980435000000200550008c000020fd0000c13d000000000004004b0000211d0000613d000000a0050000390000000006030019000021130000013d0000000006530019000000000005004b000021100000613d000000000803001900000000790704340000000008980436000000000068004b0000210c0000c13d000000000004004b0000211d0000613d000000a0055000390000000304400210000000000706043300000000074701cf000000000747022f00000000050504330000010004400089000000000545022f00000000044501cf000000000474019f0000000000460435000000000432001900000000000404350000001f0220003900000c7b0220019700000000023200190000000003120049000000600410003900000000003404350000000a0300002900000000030304330000000000320435000000050430021000000000044200190000002007400039000000000003004b0000214e0000c13d000000800210003900000002030000290000000000320435000000000217004900000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb9010080410000004001100210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000121019f00000c1c011001c70000800d02000039000000030300003900000c3904000041000000050500002900000004060000292ede2ecf0000040f0000000100200190000014310000613d000000400100043d0000000502000029000000000021043500000bb90010009c00000bb901008041000000400110021000000c21011001c700002edf0001042e00000000040000190000000005020019000021630000013d0000000309900210000000000a0b0433000000000a9a01cf000000000a9a022f00000000080804330000010009900089000000000898022f00000000089801cf0000000008a8019f00000000008b0435000000000876001900000000000804350000001f0660003900000c7b0660019700000000077600190000000104400039000000000034004b0000212d0000813d0000000006270049000000200660008a000000200550003900000000006504350000000a060000290000002006600039000a00000006001d0000000006060433000000009806043400000bfb088001970000000008870436000000000909043300000000009804350000004006600039000000000606043300000040087000390000006009000039000000000098043500000060097000390000000086060434000000000069043500000c7b0a6001970000001f0960018f0000008007700039000000000078004b0000218d0000813d00000000000a004b000021890000613d000000000c980019000000000b970019000000200bb0008a000000200cc0008a000000000dab0019000000000eac0019000000000e0e04330000000000ed0435000000200aa0008c000021830000c13d000000000009004b0000215b0000613d000000000b070019000021510000013d000000000ba7001900000000000a004b000021960000613d000000000c080019000000000d07001900000000ce0c0434000000000ded04360000000000bd004b000021920000c13d000000000009004b0000215b0000613d0000000008a80019000021510000013d000000000001004b000021a70000c13d000000400300043d00000c190030009c000006000000213d0000002001300039000000400010043f0000000000030435000021a90000013d0000000301000029000000000101041a000000800110027000110c090010019b00000006010000290000000003010433000000050100002900000011020000292ede27400000040f0000000301000029000000000201041a000000400100043d0000004003100039000000a0070000390000000000730435000000800220027000000c090220019700000000022104360000000000020435000000a003100039000000800200043d000000000023043500000c7b052001970000001f0420018f000000c003100039000000a10030008c000021ce0000413d000000000005004b000021c90000613d000000000743001900000080064001bf000000200770008a0000000008570019000000000956001900000000090904330000000000980435000000200550008c000021c30000c13d000000000004004b000021e30000613d000000a0050000390000000006030019000021d90000013d0000000006530019000000000005004b000021d60000613d000000000803001900000000790704340000000008980436000000000068004b000021d20000c13d000000000004004b000021e30000613d000000a0055000390000000304400210000000000706043300000000074701cf000000000747022f00000000050504330000010004400089000000000545022f00000000044501cf000000000474019f0000000000460435000000000432001900000000000404350000001f0220003900000c7b0220019700000000023200190000000003120049000000600410003900000000003404350000000e0300002900000000030304330000000000320435000000050430021000000000044200190000002007400039000000000003004b000021ff0000c13d00000080021000390000000000020435000000000217004900000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb9010080410000004001100210000000000112019f0000000002000414000021390000013d00000000040000190000000005020019000022140000013d0000000309900210000000000a0b0433000000000a9a01cf000000000a9a022f00000000080804330000010009900089000000000898022f00000000089801cf0000000008a8019f00000000008b0435000000000876001900000000000804350000001f0660003900000c7b0660019700000000077600190000000104400039000000000034004b000021f30000813d0000000006270049000000200660008a000000200550003900000000006504350000000e060000290000002006600039000e00000006001d0000000006060433000000009806043400000bfb088001970000000008870436000000000909043300000000009804350000004006600039000000000606043300000040087000390000006009000039000000000098043500000060097000390000000086060434000000000069043500000c7b0a6001970000001f0960018f0000008007700039000000000078004b0000223e0000813d00000000000a004b0000223a0000613d000000000c980019000000000b970019000000200bb0008a000000200cc0008a000000000dab0019000000000eac0019000000000e0e04330000000000ed0435000000200aa0008c000022340000c13d000000000009004b0000220c0000613d000000000b070019000022020000013d000000000ba7001900000000000a004b000022470000613d000000000c080019000000000d07001900000000ce0c0434000000000ded04360000000000bd004b000022430000c13d000000000009004b0000220c0000613d0000000008a80019000022020000013d0000001f03100039000000000023004b000000000400001900000c2b0400404100000c2b0520019700000c2b03300197000000000653013f000000000053004b000000000300001900000c2b0300204100000c2b0060009c000000000304c019000000000003004b000022630000613d0000000203100367000000000303043b00000c090030009c000022630000213d000000050330021000000000013100190000002001100039000000000021004b000022630000213d000000000001042d000000000100001900002ee00001043000000c2c0010009c000022750000213d000000630010008c000022750000a13d00000002010003670000002402100370000000000202043b0000ffff0020008c000022750000213d0000004403100370000000000303043b00000bfb0030009c000022750000213d0000000401100370000000000101043b000000000001042d000000000100001900002ee0000104300000000043010434000000000132043600000c7b063001970000001f0530018f000000000014004b0000228d0000813d000000000006004b000022890000613d00000000085400190000000007510019000000200770008a000000200880008a0000000009670019000000000a680019000000000a0a04330000000000a90435000000200660008c000022830000c13d000000000005004b000022a30000613d0000000007010019000022990000013d0000000007610019000000000006004b000022960000613d00000000080400190000000009010019000000008a0804340000000009a90436000000000079004b000022920000c13d000000000005004b000022a30000613d00000000046400190000000305500210000000000607043300000000065601cf000000000656022f00000000040404330000010005500089000000000454022f00000000045401cf000000000464019f0000000000470435000000000431001900000000000404350000001f0330003900000c7b023001970000000001210019000000000001042d000000200300003900000000033104360000000042020434000000000023043500000c7b062001970000001f0520018f0000004001100039000000000014004b000022c20000813d000000000006004b000022be0000613d00000000085400190000000007510019000000200770008a000000200880008a0000000009670019000000000a680019000000000a0a04330000000000a90435000000200660008c000022b80000c13d000000000005004b000022d80000613d0000000007010019000022ce0000013d0000000007610019000000000006004b000022cb0000613d00000000080400190000000009010019000000008a0804340000000009a90436000000000079004b000022c70000c13d000000000005004b000022d80000613d00000000046400190000000305500210000000000607043300000000065601cf000000000656022f00000000040404330000010005500089000000000454022f00000000045401cf000000000464019f0000000000470435000000000412001900000000000404350000001f0220003900000c7b022001970000000001120019000000000001042d0000001f0220003900000c7b022001970000000001120019000000000021004b0000000002000039000000010200403900000c090010009c000022ea0000213d0000000100200190000022ea0000c13d000000400010043f000000000001042d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000000003101043400000bfb0110019700000000011204360000000002030433000000020020008c000022f80000813d0000000000210435000000000001042d00000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee000010430000000003202043400000bfb0220019700000000022104360000000003030433000000020030008c000023070000813d00000000003204350000004001100039000000000001042d00000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee0000104300000ffff0220018f000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f00000001002001900000231b0000613d000000000101043b000000000001042d000000000100001900002ee00001043000000bfb02200197000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f00000001002001900000232b0000613d000000000101043b000000000001042d000000000100001900002ee0000104300003000000000002000000000201041a000000010320019000000001062002700000007f0660618f0000001f0060008c00000000040000390000000104002039000000000043004b0000236c0000c13d000000400500043d0000000004650436000000000003004b000023570000613d000100000004001d000300000006001d000200000005001d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000023780000613d0000000306000029000000000006004b0000235d0000613d000000000201043b0000000001000019000000020500002900000001070000290000000003170019000000000402041a000000000043043500000001022000390000002001100039000000000061004b0000234f0000413d0000235f0000013d00000c7d012001970000000000140435000000000006004b000000200100003900000000010060390000235f0000013d000000000100001900000002050000290000003f0110003900000c7b021001970000000001520019000000000021004b0000000002000039000000010200403900000c090010009c000023720000213d0000000100200190000023720000c13d000000400010043f0000000001050019000000000001042d00000c6b01000041000000000010043f0000002201000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000000000100001900002ee000010430000c000000000002000c00000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000025260000613d000000000101043b000000000101041a00000c24001001980000238e0000613d0000000201000039000000000001042d00000c2300100198000023920000613d0000000101000039000000000001042d00000c3200100198000025400000613d000b00000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000025260000613d0000000b02000029000000c0022002700009ffff00200193000000000101043b000000000201041a000000090020006c000025280000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f00000001002001900000000b03000029000025260000613d00000009020000290008000100200218000000000101043b00000008011000290000000101100039000000000201041a000000800130027000000c0903100197000200000002001d00000c0901200197000a00000003001d0000000001310019000b00000001001d00000c7f0010009c0000252e0000813d00000c0d010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f0000000100200190000025460000613d000000000201043b0000000b0020006b000023d40000813d0000000401000039000000000001042d0000000201000029000000400110027000000c09011001970000000a0110002900000c090010009c0000252e0000213d000000000021004b00000000010000190000238d0000213d0000000201000029000000d0011002700001ffff00100194000023ea0000613d0000000201000029000000800110027000000c09011001970000000a0110002900000c090010009c0000252e0000213d000000000021004b00000000010000190000238d0000213d0000000c01000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000025260000613d000000000101043b000000000101041a000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000025260000613d000000000101043b000000000201041a000000090020006c000025280000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000025260000613d000000000101043b000000080b10002900000000010b041a000500000001001d000000000001004b000025150000613d000080100c000039000000000d000019000400000000001d000300000000001d00060000000b001d000024270000013d0000000301000029000300010010003e0000252e0000613d000000010dd000390000000500d0006c000025170000813d00000000010b041a000b0000000d001d0000000000d1004b000025280000a13d0000000000b0043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700000000020c00192ede2ed40000040f00008010030000390000000100200190000025260000613d000000000101043b0000000b01100029000000000101041a000800000001001d0000000c01000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f00008010030000390000000100200190000025260000613d000000000101043b0000000902000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f00008010030000390000000100200190000025260000613d000000080200002900000bfb02200197000000000101043b000a00000002001d000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f00008010030000390000000100200190000025260000613d000000000101043b000000000101041a000700000001001d0000000c01000029000000000010043f0000016001000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f00008010030000390000000100200190000025260000613d000000000101043b0000000902000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f00008010030000390000000100200190000025260000613d000000000101043b0000000a02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f000080100c0000390000000100200190000025260000613d000000000101043b000000000101041a000000ff0110018f000000030010008c000000060b0000290000000b0d000029000025340000813d000000000001004b0000000a02000029000024a30000613d000000010010008c000024210000613d0000000401000029000400010010003e000024240000c13d0000252e0000013d000000010100008a000000070010006b000024240000613d000000080100002900000c1200100198000024240000c13d000000400400043d000000200140003900000c800300004100000000003104350000002403400039000000070500002900000000005304350000002403000039000000000034043500000c810040009c0000253a0000813d0000006003400039000000400030043f00000000030404330000000004000414000000040020008c000024bd0000c13d00000001030000310000000102000039000024d10000013d00000bb90010009c00000bb901008041000000400110021000000bb90030009c00000bb9030080410000006003300210000000000113019f00000bb90040009c00000bb904008041000000c003400210000000000131019f2ede2ed40000040f0000000b0d000029000080100c000039000000060b000029000000010220018f0003000000010355000000600110027000010bb90010019d00000bb903100197000000000003004b00000080040000390000006001000039000024fd0000613d00000c090030009c0000253a0000213d0000001f0130003900000c7b011001970000003f0110003900000c7b04100197000000400100043d0000000004410019000000000014004b0000000005000039000000010500403900000c090040009c0000253a0000213d00000001005001900000253a0000c13d000000400040043f000000000431043600000c7b0630019800000000056400190000000307000367000024f00000613d000000000807034f0000000009040019000000008a08043c0000000009a90436000000000059004b000024ec0000c13d0000001f03300190000024fd0000613d000000000667034f0000000303300210000000000705043300000000073701cf000000000737022f000000000606043b0000010003300089000000000636022f00000000033601cf000000000373019f0000000000350435000000000002004b000024240000613d0000000001010433000000200010008c000024240000c13d0000000001040433000000000001004b0000000002000039000000010200c039000000000021004b000025260000c13d000000000001004b000025120000613d0000000801000029000000b001100270000000ff0110018f000000020010008c000000060b0000290000000b0d0000290000249d0000a13d000025340000013d000000060b0000290000000b0d000029000024240000013d000300000000001d000400000000001d0000000201000029000000c0011002700000ffff0110018f000000030010006b000000000100003900000001010040390000000102000029000000010220008a000000040020006c0000000002000039000000010200403900000000001201a00000000301000039000000000100c039000000000001042d000000000100001900002ee00001043000000c6b01000041000000000010043f0000003201000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000001101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee00001043000000c5901000041000000000010043f0000000c01000029000000040010043f00000c030100004100002ee000010430000000000001042f00010000000000020000016402000039000000000202041a000000100220027000000bfb022001970000000003000411000000000023004b000000000200003900000001020060390000000004000031000000140340008c0000000005000039000000010500803900000000005201700000000003046019000000fb02000039000000000202041a000000400c00043d0000006404c00039000000800500003900000000005404350000004404c0003900000c0805000041000000000054043500000bfb011001970000002404c00039000000000014043500000bfc0100004100000000001c04350000000401c00039000000000400041000000000004104350000008401c00039000000000031043500000c7b063001980000001f0730018f000000a404c0003900000000056400190000000208000367000025750000613d000000000908034f000000000a040019000000009b09043c000000000aba043600000000005a004b000025710000c13d00000bfb02200197000000000007004b000025830000613d000000000668034f0000000307700210000000000805043300000000087801cf000000000878022f000000000606043b0000010007700089000000000676022f00000000067601cf000000000686019f0000000000650435000000000443001900000000000404350000000004000414000000040020008c0000258d0000c13d0000000103000031000000200030008c00000020040000390000000004034019000025bf0000013d0000001f0330003900000c7b01300197000000a40110003900000bb90010009c00000bb901008041000000600110021000000bb900c0009c00000bb90300004100000000030c40190000004003300210000000000131019f00000bb90040009c00000bb904008041000000c003400210000000000113019f00010000000c001d2ede2ed40000040f000000010c000029000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000000057c0019000025ae0000613d000000000801034f00000000090c0019000000008a08043c0000000009a90436000000000059004b000025aa0000c13d000000000006004b000025bb0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000100200190000025db0000613d0000001f01400039000000600210018f0000000001c20019000000000021004b0000000002000039000000010200403900000c090010009c000025d50000213d0000000100200190000025d50000c13d000000400010043f0000001f0030008c000025d30000a13d00000000010c0433000000000001004b0000000002000039000000010200c039000000000021004b000025d30000c13d000000000001042d000000000100001900002ee00001043000000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee0000104300000001f0530018f00000c0006300198000000400200043d0000000004620019000025e60000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000025e20000c13d000000000005004b000025f30000613d000000000161034f0000000305500210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000600130021000000bb90020009c00000bb9020080410000004002200210000000000112019f00002ee000010430000000400100043d00000c820010009c000026020000813d0000004002100039000000400020043f000000200210003900000000000204350000000000010435000000000001042d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000000400100043d00000c820010009c000026170000813d0000004002100039000000400020043f0000012d02000039000000000302041a00000bfb023001970000000002210436000000a003300270000000ff0330018f000000020030008c0000261d0000813d0000000000320435000000000001042d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee0000104300002000000000002000200000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000026560000613d000000000101043b000100000001001d00000002010000292ede237a0000040f000000030010008c0000000001000019000026540000c13d0000000101000029000000000101041a000200000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000026560000613d000000000101043b000000000101041a000000000001004b000026580000613d000000010110008a0000000202000029000000c0022002700000ffff0220018f000000000012004b00000000010000390000000101006039000000010110018f000000000001042d000000000100001900002ee00001043000000c6b01000041000000000010043f0000001101000039000000040010043f00000c030100004100002ee000010430000000400100043d00000c820010009c000026820000813d0000004002100039000000400020043f000000200210003900000000000204350000000000010435000000400100043d00000c130010009c000026820000213d0000004002100039000000400020043f0000012d02000039000000000402041a00000bfb024001970000000003210436000000a004400270000000ff0440018f000000020040008c000026880000813d0000000000430435000000000002004b000026770000613d000000000001042d000000400100043d00000c130010009c000026820000213d000000fb02000039000000000202041a0000004003100039000000400030043f00000bfb0220019700000000022104360000000000020435000000000001042d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee00001043000010000000000020000016402000039000000000202041a000000100220027000000bfb022001970000000003000411000000000023004b000000000200003900000001020060390000000004000031000000140340008c0000000005000039000000010500803900000000005201700000000003046019000000fb02000039000000000202041a000000400c00043d0000006404c00039000000800500003900000000005404350000004404c0003900000bfd05000041000000000054043500000bfb011001970000002404c00039000000000014043500000bfc0100004100000000001c04350000000401c00039000000000400041000000000004104350000008401c00039000000000031043500000c7b063001980000001f0730018f000000a404c0003900000000056400190000000208000367000026bc0000613d000000000908034f000000000a040019000000009b09043c000000000aba043600000000005a004b000026b80000c13d00000bfb02200197000000000007004b000026ca0000613d000000000668034f0000000307700210000000000805043300000000087801cf000000000878022f000000000606043b0000010007700089000000000676022f00000000067601cf000000000686019f0000000000650435000000000443001900000000000404350000000004000414000000040020008c000026d40000c13d0000000103000031000000200030008c00000020040000390000000004034019000027060000013d0000001f0330003900000c7b01300197000000a40110003900000bb90010009c00000bb901008041000000600110021000000bb900c0009c00000bb90300004100000000030c40190000004003300210000000000131019f00000bb90040009c00000bb904008041000000c003400210000000000113019f00010000000c001d2ede2ed40000040f000000010c000029000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000000057c0019000026f50000613d000000000801034f00000000090c0019000000008a08043c0000000009a90436000000000059004b000026f10000c13d000000000006004b000027020000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000100200190000027220000613d0000001f01400039000000600210018f0000000001c20019000000000021004b0000000002000039000000010200403900000c090010009c0000271c0000213d00000001002001900000271c0000c13d000000400010043f0000001f0030008c0000271a0000a13d00000000010c0433000000000001004b0000000002000039000000010200c039000000000021004b0000271a0000c13d000000000001042d000000000100001900002ee00001043000000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee0000104300000001f0530018f00000c0006300198000000400200043d00000000046200190000272d0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000027290000c13d000000000005004b0000273a0000613d000000000161034f0000000305500210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000600130021000000bb90020009c00000bb9020080410000004002200210000000000112019f00002ee000010430000f000000000002000400000003001d000f00000002001d000d00000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b000000000101041a000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b000000000201041a000000000002004b000029eb0000613d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000201043b000000000102041a000000000001004b000029e20000613d0000000401000029000100200010003d0000000f01000029000b0c090010019b000200010020003d000000000100041000030bfb0010019b0000000003000019000c00000002001d000027a60000013d0000000304400210000000000506043300000000054501cf000000000545022f00000000080c04330000010004400089000000000848022f00000000044801cf000000000454019f00000000004604350000001f0420003900000c7b0440019700000000023200190000000000020435000000400240003900000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb9010080410000004001100210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000121019f00000c1c011001c70000800d02000039000000040300003900000c1d040000410000000d0500002900000000060000192ede2ecf0000040f0000000100200190000029e90000613d0000000f0300002900000001033000390000000c02000029000000000102041a000000000013004b000029e20000813d000f00000003001d000000000020043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b0000000f01100029000e00000001001d000000000701041a00000c1200700198000027a00000c13d000000400200043d00000c820020009c0000000306000029000000200f00008a000029e30000813d0000004001200039000000400010043f00000001010000390000000003120436000000400400043d00000c140040009c000029e30000213d0000006001400039000000400010043f0000004001400039000000600500003900000000005104350000002001400039000000000001043500000000000404350000000000430435000000400400043d000000200140003900000c1505000041000000000051043500000024014000390000000d05000029000000000051043500000044014000390000000000010435000000b001700270000000ff0110018f000000030010008c000029f10000813d0000006405400039000000000015043500000c16007001980000000001000039000000010100c039000000840540003900000000001504350000008401000039000000000014043500000c170040009c000029e30000213d000000c005400039000000400050043f00000c140050009c000029e30000213d0000012001400039000000400010043f000000000065043500000100014000390000000000410435000000e00140003900000000000104350000000001020433000000000001004b000029eb0000613d00000000005304350000000001000414000500000001001d000000400900043d00000040019000390000000d0300002900000000003104350000006001000039000000000819043600000000006804350000006001900039000000000001043500000c180090009c000029e30000213d0000008004900039000000400040043f0000000201000029000000000101041a000000800110027000000c09011001970000000b0510002900000c7f0050009c000029f70000813d000000040100002900000000010104330000000f03000029000000000031004b000a00000007001d000900000005001d000028160000a13d0000000501300210000000010110002900000000010104330000000003040019000700000001001d0000281d0000013d00000c190040009c000029e30000213d000000a001900039000000400010043f000700000004001d0000000000040435000000400300043d000000200430003900000c1a01000041000600000004001d00000000001404350000002405300039000000a00100003900000000001504350000000009090433000000c4013000390000000000910435000000000cf9016f0000001f0b90018f000000e40a3000390000000000a8004b0000283c0000813d00000000000c004b000028380000613d0000000001b800190000000004ba0019000000200440008a000000200710008a0000000001c400190000000006c7001900000000060604330000000000610435000000200cc0008c000028320000c13d00000000000b004b000028520000613d00000000040a0019000028480000013d0000000004ca001900000000000c004b000028450000613d000000000108001900000000070a001900000000160104340000000007670436000000000047004b000028410000c13d00000000000b004b000028520000613d0000000008c800190000000301b00210000000000604043300000000061601cf000000000616022f00000000070804330000010001100089000000000717022f00000000011701cf000000000161019f00000000001404350000000001a9001900000000000104350000001f019000390000000001f1016f0000000008a10019000800000005001d0000000001580049000000440430003900000000001404350000000009020433000000000098043500000005019002100000000001180019000000200d100039000000000009004b000028ad0000613d000000000a000019000000000b080019000028780000013d0000000301f0021000000000040d043300000000041401cf000000000414022f00000000050e04330000010001100089000000000515022f00000000011501cf000000000141019f00000000001d043500000000016c001900000000000104350000001f01c00039000000200f00008a0000000001f1016f000000000d610019000000010aa0003900000000009a004b000028ad0000813d00000000018d0049000000200110008a000000200bb0003900000000001b043500000020022000390000000001020433000000006401043400000bfb0440019700000000044d043600000000060604330000000000640435000000400110003900000000010104330000004004d00039000000600500003900000000005404350000006004d0003900000000ec0104340000000000c404350000000004fc016f0000001f0fc0018f0000008006d0003900000000006e004b000028a00000813d000000000004004b0000289c0000613d0000000001fe00190000000007f60019000000200d70008a000000200110008a00000000074d0019000000000541001900000000050504330000000000570435000000200440008c000028960000c13d00000000000f004b0000286f0000613d000000000d060019000028650000013d000000000d460019000000000004004b000028a90000613d00000000010e00190000000007060019000000001501043400000000075704360000000000d7004b000028a50000c13d00000000000f004b0000286f0000613d000000000e4e0019000028650000013d0000000801d0006a000000a4023000390000000000120435000000090100002900000c09011001970000008402300039000000000012043500000064013000390000000b0200002900000000002104350000000701000029000000006201043400000000052d04360000000004f2016f0000001f0720018f000000000056004b000028cf0000813d000000000004004b000028ca0000613d00000000017600190000000008750019000000200880008a000000200110008a0000000009480019000000000a410019000000000a0a04330000000000a90435000000200440008c000028c40000c13d000000000007004b0000000a09000029000028e60000613d0000000008050019000028dc0000013d0000000008450019000000000004004b000028d80000613d00000000010600190000000009050019000000001a0104340000000009a90436000000000089004b000028d40000c13d000000000007004b0000000a09000029000028e60000613d00000000064600190000000301700210000000000408043300000000041401cf000000000414022f00000000060604330000010001100089000000000616022f00000000011601cf000000000141019f00000000001804350000000001520019000000000001043500000000013500490000001f022000390000000002f2016f0000000001210019000000200210008a00000000002304350000001f011000390000000001f1016f0000000004310019000000000014004b0000000001000039000000010100403900000c090040009c000029e30000213d0000000100100190000029e30000c13d00000bfb02900197000000400040043f00000000030304330000000001000414000000040020008c000029010000c13d00000001010000310000000102000039000029140000013d000000060400002900000bb90040009c00000bb904008041000000400440021000000bb90030009c00000bb9030080410000006003300210000000000343019f00000bb90010009c00000bb901008041000000c001100210000000000113019f2ede2ecf0000040f000000200f00008a000000010220018f0003000000010355000000600110027000010bb90010019d00000bb901100197000000000001004b0000008009000039000000600a000039000029400000613d00000c090010009c000029e30000213d0000001f031000390000000003f3016f0000003f033000390000000003f3016f000000400a00043d00000000033a00190000000000a3004b0000000004000039000000010400403900000c090030009c000029e30000213d0000000100400190000029e30000c13d000000400030043f00000000091a04360000000004f1017000000000034900190000000305000367000029330000613d000000000605034f0000000007090019000000006806043c0000000007870436000000000037004b0000292f0000c13d0000001f01100190000029400000613d000000000445034f0000000301100210000000000503043300000000051501cf000000000515022f000000000404043b0000010001100089000000000414022f00000000011401cf000000000151019f00000000001304350000000001000414000000000002004b000029850000613d00000000010a0433000000200010008c000029890000c13d0000000001090433000a00000001001d0000000d01000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b000000000000043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b0000000e02000029000000000202041a00000bfb02200197000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b0000000a03000029000000000031041b0000000e01000029000000000201041a000000400100043d000000000031043500000bb90010009c00000bb9010080410000004001100210000000000300041400000bb90030009c00000bb903008041000000c003300210000000000113019f00000c10011001c700000bfb072001970000800d02000039000000040300003900000c1b040000410000279b0000013d00000005020000290000000602200270000000000021004b000029fd0000413d00090000000a001d000a00000009001d0000000d01000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b000000000000043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b0000000e02000029000000000202041a00000bfb02200197000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b000000010200008a000000000021041b0000000e01000029000000000301041a000000400100043d0000002002000039000000000421043600000009020000290000000002020433000000000024043500000bfb0730019700000c7b052001970000001f0420018f00000040031000390000000a0c00002900000000003c004b000029d50000813d000000000005004b000029d10000613d00000000084c00190000000006430019000000200660008a000000200880008a0000000009560019000000000a580019000000000a0a04330000000000a90435000000200550008c000029cb0000c13d000000000004004b000027860000613d00000000060300190000277c0000013d0000000006530019000000000005004b000029de0000613d00000000080c00190000000009030019000000008a0804340000000009a90436000000000069004b000029da0000c13d000000000004004b000027860000613d000000000c5c00190000277c0000013d000000000001042d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000000000100001900002ee00001043000000c6b01000041000000000010043f0000003201000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000001101000039000000040010043f00000c030100004100002ee00001043000000c1e01000041000000000010043f00000c1f0100004100002ee000010430000000600210003900000c83030000410000000000320435000000400210003900000c8403000041000000000032043500000020021000390000002e030000390000000000320435000000200200003900000000002104350000008001100039000000000001042d000a000000000002000a00000002001d000700000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f000000010020019000002b4c0000613d000000000101043b000000000101041a000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f000000010020019000002b4c0000613d000000000101043b000000000201041a0000000a0020006c00002b4e0000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f000000010020019000002b4c0000613d0000000a030000290000000102300210000000000101043b000000000b21001900000000010b041a000100000001001d000000000001004b00002b470000613d0006ffff00300193000080100c000039000000000d000019000300000000001d000200000000001d00040000000b001d00002a4f0000013d000000040b0000290000000a0d000029000000010dd000390000000100d0006c00002b490000813d00000000010b041a000a0000000d001d0000000000d1004b00002b4e0000a13d0000000000b0043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700000000020c00192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000000101043b0000000a01100029000000000101041a000800000001001d0000000701000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000000101043b0000000602000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000080200002900000bfb02200197000000000101043b000900000002001d000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000000101043b000000000101041a000500000001001d0000000701000029000000000010043f0000016001000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000000101043b0000000602000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000000101043b0000000902000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f000080100c000039000000010020019000002b4c0000613d000000000101043b000000000101041a000000ff0110018f000000030010008c000000040b0000290000000a0d00002900002b410000813d000000000001004b000000090200002900002ad30000613d000000010010008c00002acd0000c13d000000010100008a000000020010006b00002b540000613d0000000201000029000200010010003d00002a4c0000013d000000010100008a000000030010006b00002b540000613d0000000301000029000300010010003d00002a4c0000013d000000010100008a000000050010006b00002a4c0000613d000000080100002900000c120010019800002a4c0000c13d000000400400043d000000200140003900000c800300004100000000003104350000002403400039000000050500002900000000005304350000002403000039000000000034043500000c810040009c00002b5a0000813d0000006003400039000000400030043f00000000030404330000000004000414000000040020008c00002aed0000c13d0000000103000031000000010200003900002b010000013d00000bb90010009c00000bb901008041000000400110021000000bb90030009c00000bb9030080410000006003300210000000000113019f00000bb90040009c00000bb904008041000000c003400210000000000131019f2ede2ed40000040f0000000a0d000029000080100c000039000000040b000029000000010220018f0003000000010355000000600110027000010bb90010019d00000bb903100197000000000003004b0000008004000039000000600100003900002b2d0000613d00000c090030009c00002b5a0000213d0000001f0130003900000c7b011001970000003f0110003900000c7b04100197000000400100043d0000000004410019000000000014004b0000000005000039000000010500403900000c090040009c00002b5a0000213d000000010050019000002b5a0000c13d000000400040043f000000000431043600000c7b063001980000000005640019000000030700036700002b200000613d000000000807034f0000000009040019000000008a08043c0000000009a90436000000000059004b00002b1c0000c13d0000001f0330019000002b2d0000613d000000000667034f0000000303300210000000000705043300000000073701cf000000000737022f000000000606043b0000010003300089000000000636022f00000000033601cf000000000373019f0000000000350435000000000002004b00002a4c0000613d0000000001010433000000200010008c00002a4c0000c13d0000000001040433000000000001004b0000000002000039000000010200c039000000000021004b00002b4c0000c13d000000000001004b00002a4a0000613d0000000801000029000000b001100270000000ff0110018f000000020010008c000000040b0000290000000a0d00002900002ac50000a13d00000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee000010430000200000000001d000300000000001d00000002010000290000000302000029000000000001042d000000000100001900002ee00001043000000c6b01000041000000000010043f0000003201000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000001101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000c000000000002000300000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f000000010020019000002e7f0000613d000000000101043b000000000201041a000200000002001d00000c850220019700000c86022001c7000000000021041b0000000202100039000000000502041a00000c7f0050009c00002e790000813d00000005035002100000003f0330003900000c1103300197000000400400043d0000000003340019000c00000004001d000000000043004b0000000004000039000000010400403900000c090030009c00002e790000213d000000010040019000002e790000c13d0000000301100039000000000101041a000100000001001d000000400030043f0000000c01000029000400000005001d0000000000510435000000000020043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f000000010020019000002e7f0000613d0000000405000029000000000005004b000000200c00008a00002bf90000613d000000000601043b00000000070000190000000c08000029000000400900043d00000c140090009c00002e790000213d0000006001900039000000400010043f000000000106041a00000bfb0110019700000000011904360000000102600039000000000202041a00000000002104350000000201600039000000000201041a0000000103200190000000010b2002700000007f0bb0618f0000001f00b0008c00000000040000390000000104002039000000000043004b00002e810000c13d000000400a00043d0000000004ba0436000000000003004b00002bdc0000613d000500000004001d00060000000b001d00070000000a001d000800000009001d000900000008001d000a00000007001d000b00000006001d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f000000200c00008a000000010020019000002e7f0000613d000000060b00002900000000000b004b00000004050000290000000a07000029000000090800002900002be20000613d000000000201043b00000000010000190000000b060000290000000809000029000000070a000029000000050d00002900000000031d0019000000000402041a0000000000430435000000010220003900000020011000390000000000b1004b00002bd40000413d00002be60000013d00000c7d01200197000000000014043500000000000b004b0000002001000039000000000100603900002be60000013d00000000010000190000000b060000290000000809000029000000070a0000290000003f011000390000000002c1016f0000000001a20019000000000021004b0000000002000039000000010200403900000c090010009c00002e790000213d000000010020019000002e790000c13d0000002008800039000000400010043f00000040019000390000000000a10435000000000098043500000003066000390000000107700039000000000057004b00002b9d0000413d0000000102000029000000a001200270000000ff0310018f000000020030008c00002e870000813d000000020100002900000c3f0110019700000bfb02200197000000400d00043d0000008404d000390000002405d00039000000010030008c000b0000000d001d00002c660000c13d0000002003d0003900000c87060000410000000000630435000000030600002900000000006504350000004405d000390000006006000039000a00000006001d00000000006504350000000c0500002900000000050504330000000000540435000000050650021000000000066d0019000000a408600039000000000005004b00002cc20000613d000000000600001900002c2d0000013d000000030aa00210000000000b0c0433000000000bab01cf000000000bab022f0000000009090433000001000aa000890000000009a9022f0000000009a901cf0000000009b9019f00000000009c0435000000000987001900000000000904350000001f07700039000000200c00008a0000000007c7016f00000000088700190000000106600039000000000056004b00002cc20000813d0000000007d80049000000a40770008a000000200440003900000000007404350000000c070000290000002007700039000c00000007001d000000000707043300000000a907043400000bfb099001970000000009980436000000000a0a04330000000000a90435000000400770003900000000070704330000004009800039000000600a0000390000000000a90435000000600a800039000000009707043400000000007a0435000000000bc7016f0000001f0a70018f0000008008800039000000000089004b00002c580000813d00000000000b004b00002c530000613d000000000da90019000000000ca80019000000200cc0008a000000200dd0008a000000000ebc0019000000000fbd0019000000000f0f04330000000000fe0435000000200bb0008c00002c4d0000c13d00000000000a004b0000000b0d00002900002c240000613d000000000c08001900002c1a0000013d000000000cb8001900000000000b004b00002c610000613d000000000d090019000000000e08001900000000df0d0434000000000efe04360000000000ce004b00002c5d0000c13d00000000000a004b0000000b0d00002900002c240000613d0000000009b9001900002c1a0000013d00000c870300004100000000003d04350000000403d0003900000003060000290000000000630435000000600300003900000000003504350000000c050000290000000005050433000000050650021000000000086400190000006404d000390000000000540435000000000005004b00002d060000613d000000000600001900002c8a0000013d000000030aa00210000000000b0c0433000000000bab01cf000000000bab022f0000000009090433000001000aa000890000000009a9022f0000000009a901cf0000000009b9019f00000000009c0435000000000987001900000000000904350000001f07700039000000200c00008a0000000007c7016f00000000088700190000000106600039000000000056004b00002d060000813d0000000007d80049000000840770008a000000200440003900000000007404350000000c070000290000002007700039000c00000007001d000000000707043300000000a907043400000bfb099001970000000009980436000000000a0a04330000000000a904350000004007700039000000000707043300000040098000390000000000390435000000600a800039000000009707043400000000007a0435000000000bc7016f0000001f0a70018f0000008008800039000000000089004b00002cb40000813d00000000000b004b00002caf0000613d000000000da90019000000000ca80019000000200cc0008a000000200dd0008a000000000ebc0019000000000fbd0019000000000f0f04330000000000fe0435000000200bb0008c00002ca90000c13d00000000000a004b0000000b0d00002900002c810000613d000000000c08001900002c770000013d000000000cb8001900000000000b004b00002cbd0000613d000000000d090019000000000e08001900000000df0d0434000000000efe04360000000000ce004b00002cb90000c13d00000000000a004b0000000b0d00002900002c810000613d0000000009b9001900002c770000013d0000006404d0003900000000001404350000000001d80049000000200410008a00000000004d04350000001f011000390000000004c1016f0000000001d40019000000000041004b0000000004000039000000010400403900000c090010009c00002e790000213d000000010040019000002e790000c13d000000400010043f00000000040d04330000000001000414000000040020008c00002dca0000c13d00000001010000310000000002000019000000000001004b00002dde0000613d00000c090010009c00002e790000213d0000001f031000390000000003c3016f0000003f033000390000000003c3016f000000400400043d0000000003340019000a00000004001d000000000043004b0000000004000039000000010400403900000c090030009c00002e790000213d000000010040019000002e790000c13d000000400030043f0000000a0300002900000000031304360000000004c101700000001f0510018f0000000001430019000000030600036700002cf80000613d000000000706034f0000000008030019000000007907043c0000000008980436000000000018004b00002cf40000c13d000000000005004b00002ddf0000613d000000000446034f0000000305500210000000000601043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000041043500002ddf0000013d0000004403d0003900000000001304350000000001000414000000040020008c00002d0e0000c13d0000000301000367000000010300003100002d240000013d0000000003d8004900000bb90030009c00000bb903008041000000600330021000000bb900d0009c00000bb90400004100000000040d40190000004004400210000000000343019f00000bb90010009c00000bb901008041000000c001100210000000000113019f2ede2ecf0000040f000000600310027000010bb90030019d00000bb9033001970003000000010355000000010020019000002e930000613d000000200c00008a0000000b0d0000290000000004c301700000001f0530018f00000000024d001900002d2e0000613d000000000601034f00000000070d0019000000006806043c0000000007870436000000000027004b00002d2a0000c13d000000000005004b00002d3b0000613d000000000141034f0000000304500210000000000502043300000000054501cf000000000545022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f00000000001204350000001f013000390000000002c1016f0000000001d20019000000000021004b0000000002000039000000010200403900000c090010009c00002e790000213d000000010020019000002e790000c13d000000400010043f00000c2c0030009c00002e7f0000213d000000400030008c00002e7f0000413d00000000040d043300000c090040009c00002e7f0000213d0000000002d300190000000003d40019000c00000003001d0000001f04300039000000000024004b000000000500001900000c2b0500804100000c2b0640019700000c2b04200197000000000746013f000000000046004b000000000600001900000c2b0600404100000c2b0070009c000000000605c019000000000006004b00002e7f0000c13d0000000c03000029000000005603043400000c090060009c00002e790000213d00000005076002100000003f0870003900000c1108800197000000000818001900000c090080009c00002e790000213d000000400080043f00000000006104350000000006570019000000000026004b00002e7f0000213d000000000065004b00002d820000413d00002e120000013d000000000aca00190000000303b00210000000000b0d0433000000000b3b01cf000000000b3b022f000000000a0a04330000010003300089000000000a3a022f00000000033a01cf0000000003b3019f00000000003d04350000002001100039000000000379001900000000000304350000000000810435000000000065004b000000200c00008a00002e120000813d000000005705043400000c090070009c00002e7f0000213d0000000c0a7000290000003f07a00039000000000027004b000000000800001900000c2b0800804100000c2b07700197000000000947013f000000000047004b000000000700001900000c2b0700404100000c2b0090009c000000000708c019000000000007004b00002e7f0000c13d0000002007a00039000000000707043300000c090070009c00002e790000213d0000001f087000390000000008c8016f0000003f088000390000000009c8016f000000400800043d0000000009980019000000000089004b000000000b000039000000010b00403900000c090090009c00002e790000213d0000000100b0019000002e790000c13d000000400090043f0000000009780436000000400aa00039000000000ba7001900000000002b004b00002e7f0000213d000000000cc7016f0000001f0b70018f00000000009a004b00002dbe0000813d00000000000c004b00002dba0000613d000000000eba0019000000000db90019000000200dd0008a000000200ee0008a000000000fcd00190000000003ce0019000000000303043300000000003f0435000000200cc0008c00002db40000c13d00000000000b004b00002d7b0000613d000000000d09001900002d710000013d000000000dc9001900000000000c004b00002dc70000613d000000000e0a0019000000000f09001900000000e30e0434000000000f3f04360000000000df004b00002dc30000c13d00000000000b004b00002d700000c13d00002d7b0000013d00000bb90030009c00000bb903008041000000400330021000000bb90040009c00000bb9040080410000006004400210000000000334019f00000bb90010009c00000bb901008041000000c001100210000000000113019f2ede2ed90000040f000000200c00008a000000010220015f0003000000010355000000600110027000010bb90010019d00000bb901100197000000000001004b00002cda0000c13d00000080030000390000000a010000290000000001010433000000010020019000002e8d0000c13d00000c2c0010009c00002e7f0000213d000000400010008c00002e7f0000413d000000000203043300000c090020009c00002e7f0000213d00000000011300190000000002320019000c00000002001d0000001f03200039000000000013004b000000000400001900000c2b0400804100000c2b0530019700000c2b03100197000000000635013f000000000035004b000000000500001900000c2b0500404100000c2b0060009c000000000504c019000000000005004b00002e7f0000c13d0000000c02000029000000004602043400000c090060009c00002e790000213d00000005076002100000003f0570003900000c1108500197000000400500043d0000000008850019000000000058004b0000000009000039000000010900403900000c090080009c00002e790000213d000000010090019000002e790000c13d000000400080043f00000000006504350000000006470019000000000016004b00002e7f0000213d000000000064004b00002e310000413d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c1c011001c70000800d02000039000000020300003900000c880400004100000003050000292ede2ecf0000040f000000010020019000002e7f0000613d000000000001042d000000000aca00190000000302b00210000000000b0d0433000000000b2b01cf000000000b2b022f000000000a0a04330000010002200089000000000a2a022f00000000022a01cf0000000002b2019f00000000002d04350000002005500039000000000279001900000000000204350000000000850435000000000064004b000000200c00008a00002e120000813d000000004704043400000c090070009c00002e7f0000213d0000000c0a7000290000003f07a00039000000000017004b000000000800001900000c2b0800804100000c2b07700197000000000937013f000000000037004b000000000700001900000c2b0700404100000c2b0090009c000000000708c019000000000007004b00002e7f0000c13d0000002007a00039000000000707043300000c090070009c00002e790000213d0000001f087000390000000008c8016f0000003f088000390000000009c8016f000000400800043d0000000009980019000000000089004b000000000b000039000000010b00403900000c090090009c00002e790000213d0000000100b0019000002e790000c13d000000400090043f0000000009780436000000400aa00039000000000ba7001900000000001b004b00002e7f0000213d000000000cc7016f0000001f0b70018f00000000009a004b00002e6d0000813d00000000000c004b00002e690000613d000000000eba0019000000000db90019000000200dd0008a000000200ee0008a000000000fcd00190000000002ce0019000000000202043300000000002f0435000000200cc0008c00002e630000c13d00000000000b004b00002e2a0000613d000000000d09001900002e200000013d000000000dc9001900000000000c004b00002e760000613d000000000e0a0019000000000f09001900000000e20e0434000000000f2f04360000000000df004b00002e720000c13d00000000000b004b00002e1f0000c13d00002e2a0000013d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000000000100001900002ee00001043000000c6b01000041000000000010043f0000002201000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee000010430000000000001004b00002eb10000c13d00000c8901000041000000000010043f00000c1f0100004100002ee0000104300000001f0530018f00000c0006300198000000400200043d000000000462001900002e9e0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00002e9a0000c13d000000000005004b00002eab0000613d000000000161034f0000000305500210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000600130021000000bb90020009c00000bb9020080410000004002200210000000000112019f00002ee00001043000000bb90030009c00000bb903008041000000400230021000000bb90010009c00000bb9010080410000006001100210000000000121019f00002ee000010430000000000001042f00000bb90010009c00000bb901008041000000400110021000000bb90020009c00000bb9020080410000006002200210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c1c011001c700008010020000392ede2ed40000040f000000010020019000002ecd0000613d000000000101043b000000000001042d000000000100001900002ee00001043000002ed2002104210000000102000039000000000001042d0000000002000019000000000001042d00002ed7002104230000000102000039000000000001042d0000000002000019000000000001042d00002edc002104250000000102000039000000000001042d0000000002000019000000000001042d00002ede0000043200002edf0001042e00002ee00001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff08c379a000000000000000000000000000000000000000000000000000000000496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000000a000000000000000000200000000000000000000000000000000000020000000a000000000000000007f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498000000020000000000000000000000000000008000000100000000000000000000000000000000000000000000000000000000000000000000000000761f8aca00000000000000000000000000000000000000000000000000000000ce1b815e00000000000000000000000000000000000000000000000000000000ea65ab8100000000000000000000000000000000000000000000000000000000fd8d2d3500000000000000000000000000000000000000000000000000000000fd8d2d3600000000000000000000000000000000000000000000000000000000fdbd7eb300000000000000000000000000000000000000000000000000000000fe0d94c100000000000000000000000000000000000000000000000000000000ea65ab8200000000000000000000000000000000000000000000000000000000ee57e36f00000000000000000000000000000000000000000000000000000000ef8cccb000000000000000000000000000000000000000000000000000000000da74222700000000000000000000000000000000000000000000000000000000da74222800000000000000000000000000000000000000000000000000000000dd63c06f00000000000000000000000000000000000000000000000000000000e306bee700000000000000000000000000000000000000000000000000000000ce1b815f00000000000000000000000000000000000000000000000000000000da35c66400000000000000000000000000000000000000000000000000000000bfde57c200000000000000000000000000000000000000000000000000000000c98425ed00000000000000000000000000000000000000000000000000000000c98425ee00000000000000000000000000000000000000000000000000000000c9c4bfca00000000000000000000000000000000000000000000000000000000cc63604a00000000000000000000000000000000000000000000000000000000bfde57c300000000000000000000000000000000000000000000000000000000c218c13200000000000000000000000000000000000000000000000000000000c7f758a8000000000000000000000000000000000000000000000000000000007e3f1352000000000000000000000000000000000000000000000000000000007e3f1353000000000000000000000000000000000000000000000000000000008cb7505900000000000000000000000000000000000000000000000000000000bb225da200000000000000000000000000000000000000000000000000000000761f8acb000000000000000000000000000000000000000000000000000000007a5b4f59000000000000000000000000000000000000000000000000000000003e4f49e5000000000000000000000000000000000000000000000000000000004f1ef28500000000000000000000000000000000000000000000000000000000572b6c0400000000000000000000000000000000000000000000000000000000572b6c05000000000000000000000000000000000000000000000000000000005c23bfb7000000000000000000000000000000000000000000000000000000005c60da1b000000000000000000000000000000000000000000000000000000004f1ef28600000000000000000000000000000000000000000000000000000000523039620000000000000000000000000000000000000000000000000000000052d1902d000000000000000000000000000000000000000000000000000000004162169e000000000000000000000000000000000000000000000000000000004162169f0000000000000000000000000000000000000000000000000000000041de6830000000000000000000000000000000000000000000000000000000004e3ed5e9000000000000000000000000000000000000000000000000000000003e4f49e60000000000000000000000000000000000000000000000000000000040e58ee5000000000000000000000000000000000000000000000000000000002ae9c5ff0000000000000000000000000000000000000000000000000000000035ade0480000000000000000000000000000000000000000000000000000000035ade049000000000000000000000000000000000000000000000000000000003659cfe6000000000000000000000000000000000000000000000000000000003d3f4b1b000000000000000000000000000000000000000000000000000000002ae9c6000000000000000000000000000000000000000000000000000000000030196ab9000000000000000000000000000000000000000000000000000000001abf3f10000000000000000000000000000000000000000000000000000000001abf3f11000000000000000000000000000000000000000000000000000000001c622dea000000000000000000000000000000000000000000000000000000001f3cb5b40000000000000000000000000000000000000000000000000000000001ffc9a7000000000000000000000000000000000000000000000000000000000b47808d000000000000000000000000fffffffffffffffffffffffffffffffffffffffffdef910600000000000000000000000000000000000000000000000000000000f281525e53675515a6ba7cc7bea8a81e649b3608423ee2d73be1752cea88788900000000000000000000000000000000000000000000000000000000ffffff5bffffffffffffffffffffffffffffffffffffff5bffffff80000000000000000000000000000000000000000000000000000000000000000000000000ffffffe002000000000000000000000000000000000000400000000000000000000000009fefd0f100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000032dbe3b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000000000000000000000000585ddcca000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000b014ce248804cab6a144581acce1eeb70ce5d54f08433b989d73bb0ccee3d3f9000000000000000000000000000000000000000000000000ffffffffffffffffe2e2527200000000000000000000000000000000000000000000000000000000ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffff000000000000000000000000000000000000000000000000796b89b91644bc98cd93958e4c9038275d622183e25ac5af08cc6b5d955391320200000200000000000000000000000000000004000000000000000000000000ffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff02000000000000000000000000000000000000200000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00000000000000000000000ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffbf000000000000000000000000000000000000000000000000ffffffffffffff9f523039620000000000000000000000000000000000000000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff3f000000000000000000000000000000000000000000000000ffffffffffffff7f000000000000000000000000000000000000000000000000ffffffffffffffdfea65ab8200000000000000000000000000000000000000000000000000000000dc04d6b37a483003e6bdc5660d9d9bb22854fffba622b62f658a398efc88ca440200000000000000000000000000000000000000000000000000000000000000e03b818c74400ef42fafb3f6cfa61d8a38950d4f403eee88ec39bc0cafe54d241c26714c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000a21690322ce39bce6ee8416aefbe1e66cf767ff37e9db8f708a3c6cbbf17db9b0000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffeff0000ff0000000000000000000000000000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000004707e94b25cfce1a7c363508fbb838c35864388ad77284b248282b9746982b9b47ff9796f72d439c6e5c30a24b9fad985a00c85a9f2258074c400a94f8746b00dfedf2d9c8652ca4f3971a75df0edae0db530c511782c57278a63b798e37353220120d26379ad35b0c68e58a20f1251f24acf3aee87d3a8d8759c48671c8cacedfedf2d9c8652ca4f3971a75df0edae0db530c511782c57278a63b798e373531bb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8c433a4cd6b51969eca37f974940894297b9fcf4b282a213fea5cd8f85289c90ffffffffffffffffffffffffffffffffffffff5c0000000000000000000000009a8a0592ac89c5ad3bc6df8224c17b485976f597df104ee20d0df415241f670b42cbb15ccdc3cad6266b0e7a08c0454b23bf29dc2df74b6f3c209e9336465bd1000000000000000000000000000000000000000000000000ffffffffffffff5f0000000000000000ffffffffffffffff0000000000000000000000000000000012dba68f00000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff00000000000000000000000000000000ffffffffffffffffffffff000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000ffffffff0000ffffffffffffffffffff00000000000000000000000000000000ded416ca00000000000000000000000000000000000000000000000000000000a6c1f8f4276dc3f243459e13b557c84e8f4e90b2e09070bad5f6909cee687c92000000000000000000000000000000000000002000000080000000000000000000000000000000000000000000000000000000400000000000000000000000001bebc11500000000000000000000000000000000000000000000000000000000821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f5000000000000000000000000000000000000000000000000fffffffffffffedf00000000000000000000000000000000ffffffffffffffffffffffffffffffff1806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000647920696e697469616c697a6564000000000000000000000000000000000000496e697469616c697a61626c653a20636f6e747261637420697320616c726561568cc693d84eb1901f8bcecba154cbdef23ca3cf67efc0a0b698528a06c660f701ffc9a7000000000000000000000000000000000000000000000000000000000000000000007530000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000549ea75a00000000000000000000000000000000000000000000000000000000266d0fb900000000000000000000000000000000000000000000000000000000ffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff88e879ae0d71faf3aa708f2978daccb99b95243615dc104835b8c5a21c884ae6360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc310ab089e4439a4c15d089f94afb7896ff553aecb10793d0ab882de59d99a32e02000002000000000000000000000000000000440000000000000000000000006c6564207468726f7567682064656c656761746563616c6c0000000000000000555550535570677261646561626c653a206d757374206e6f742062652063616c4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914352d1902d000000000000000000000000000000000000000000000000000000006961626c6555554944000000000000000000000000000000000000000000000045524331393637557067726164653a20756e737570706f727465642070726f78bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b206661696c656400000000000000000000000000000000000000000000000000416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c0000000000000000000000000000000000000000000000a00000000000000000853c2a3000000000000000000000000000000000000000000000000000000000bdfef02014e2b7a6c80226083f80d72d22fcf656d917f92d242c5b61e108bcd3ffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000010000000000000000000000000000000000000000000000000000000000578c7050405154b6a8167f305908011ff85e3231eff1fbce2bbe95500b92f2038b9b77af0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000440000000000000000000000002862797465735b5d5b5d20737562426f64696573437573746f6d50726f706f73616c506172616d734142492900000000000000000000000000000000000000000000000000000000000000000000000000000000000000e000000000000000006163746976652070726f7879000000000000000000000000000000000000000046756e6374696f6e206d7573742062652063616c6c6564207468726f75676820416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006f74206120636f6e747261637400000000000000000000000000000000000000455243313936373a206e657720696d706c656d656e746174696f6e206973206e64656c656761746563616c6c0000000000000000000000000000000000000000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffff8d48ed33000000000000000000000000000000000000000000000000000000004e487b7100000000000000000000000000000000000000000000000000000000d345a56b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000001400000000000000000a73a22e0fc9b71a5463a75c9711d02d08dae26e85aa1033f4416b719a0239107c1d7dc1770290440bd536be5eca85bc1e54960c21ef0f9a838033941a7392d8d8b3233350000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff940cac35ffffffffffffffffffffffffffffffffffffffffffffffffffffffffda35c663fffffffffffffffffffffffffffffffffffffffffffffffffffffffffd19134400000000000000000000000000000000000000000000000000000000da35c66400000000000000000000000000000000000000000000000000000000940cac3600000000000000000000000000000000000000000000000000000000afc5b8230000000000000000000000000000000000000000000000000000000041de682fffffffffffffffffffffffffffffffffffffffffffffffffffffffff41de6830000000000000000000000000000000000000000000000000000000002ae9c60000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000010000000000000000c218c13200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffa0000000000000000000000000000000000000000000000000ffffffffffffffc06f6e206973206e6f74205555505300000000000000000000000000000000000045524331393637557067726164653a206e657720696d706c656d656e74617469ffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000100000000000000000000000000000000000000000000000000000000c71bf32400000000000000000000000000000000000000000000000000000000712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f18cecad50000000000000000000000000000000000000000000000000000000062e2ff03073692fe5f9a259c16ca30f8b348f311104bd302a0619d516c9347c0"},"evm":{"bytecode":{"object":"00040000000000020017000000000002000000600310027000000bb90030019d00000bb903300197000300000031035500020000000103550000000100200190000000e60000c13d0000008006000039000000400060043f000000040030008c000014310000413d000000000201043b000000e00220027000000bc10020009c000001170000a13d00000bc20020009c000001420000213d00000bd10020009c000002150000a13d00000bd20020009c0000027b0000213d00000bd60020009c0000059a0000613d00000bd70020009c000006280000613d00000bd80020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b000000800000043f000000a00000043f000000c00000043f000000e00000043f000001000000043f000001200000043f000001400000043f0000006002000039000001600020043f000001e002000039000000400020043f000001a00000043f000001c00000043f000001a002000039000001800020043f000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000800000001001d000000400100043d000900000001001d00000c3e0010009c000006000000213d00000009040000290000012001400039000000400010043f0000000806000029000000000106041a00000c3f02100197000000000524043600000c23001001980000000002000039000000010200c039000000a003400039000700000003001d000000000023043500000c24001001980000000002000039000000010200c0390000008003400039000600000003001d0000000000230435000000d0021002700000ffff0220018f0000006003400039000300000003001d0000000000230435000000c0021002700000ffff0220018f0000004003400039000200000003001d0000000000230435000000800110027000000c0901100197000400000005001d0000000000150435000000c0024000390000000101600039000000000101041a00000bfb01100197000500000002001d00000000001204350000000201600039000000000401041a00000c090040009c000006000000213d00000005024002100000003f0220003900000c1102200197000000400300043d0000000002230019000100000003001d000000000032004b0000000003000039000000010300403900000c090020009c000006000000213d0000000100300190000006000000c13d000000400020043f000a00000004001d00000001020000290000000000420435000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000a05000029000000000005004b00000c700000c13d0000000901000029000000e00310003900000001010000290000000000130435000000400100043d00000c130010009c000006000000213d0000004002100039000000400020043f00000008020000290000000302200039000000000402041a00000bfb024001970000000002210436000000a004400270000000ff0440018f000000010040008c0000048b0000213d000000000042043500000009020000290000010004200039001100000004001d00000000001404350000002004000039000000400100043d0000000004410436000000000502043300000c3f0550019700000000005404350000000402000029000000000402043300000c090440019700000040051000390000000000450435000000020200002900000000040204330000ffff0440018f00000060051000390000000000450435000000030200002900000000040204330000ffff0440018f0000008005100039000000000045043500000006020000290000000004020433000000000004004b0000000004000039000000010400c039000000a005100039000000000045043500000007020000290000000004020433000000000004004b0000000004000039000000010400c039000000c00510003900000000004504350000000502000029000000000402043300000bfb04400197000000e00510003900000000004504350000000003030433000001000410003900000140050000390000000000540435000000000403043300000005054002100000000006510019000001600510003900000000004504350000018009600039000000000004004b000010160000c13d000001200210003900000011030000290000000003030433000000004303043400000bfb0330019700000000003204350000000002040433000000010020008c0000048b0000213d000001400310003900000000002304350000000002190049000001950000013d000000a001000039000000400010043f0000000001000416000000000001004b000014310000c13d0000000001000410000000800010043f000000000200041a0000ff00002001900000010b0000c13d000000ff0320018f000000ff0030008c000001030000613d000000ff012001bf000000000010041b000000ff01000039000000a00010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000bbe011001c70000800d02000039000000010300003900000bbf040000412ede2ecf0000040f0000000100200190000014310000613d000000800100043d00000001020000390000014000000443000001600010044300000020010000390000010000100443000001200020044300000bc00100004100002edf0001042e00000bba01000041000000a00010043f0000002001000039000000a40010043f0000002701000039000000c40010043f00000bbb01000041000000e40010043f00000bbc01000041000001040010043f00000bbd0100004100002ee00001043000000bdf0020009c0000019d0000a13d00000be00020009c000001e90000a13d00000be10020009c000002700000213d00000be50020009c000004bd0000613d00000be60020009c000005790000613d00000be70020009c000014310000c13d0000000001000416000000000001004b000014310000c13d00000c4d010000410000000000100443000000000100041200000004001004430000002400000443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c4e011001c700008005020000392ede2ed40000040f00000001002001900000201a0000613d000000400300043d00000bb90030009c00000bb90200004100000000020340190000004002200210000000000101043b00000bfb011001970000000004000410000000000014004b000008860000c13d00000c4c01000041000000000013043500000c21012001c700002edf0001042e00000bc30020009c000002610000a13d00000bc40020009c0000028a0000213d00000bc80020009c000005e90000613d00000bc90020009c000006620000613d00000bca0020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000016402000039000000000202041a0000ffff0220018f0000000401100370000000000101043b000000010310008a000000000023004b000018cd0000813d000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000201041a000a00000002001d00000c090020009c000006000000213d0000000a0200002900000005022002100000003f0220003900000c1102200197000000400300043d0000000002230019001100000003001d000000000032004b0000000003000039000000010300403900000c090020009c000006000000213d0000000100300190000006000000c13d000000400020043f00000011020000290000000a030000290000000000320435000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000a0000006b00000cd30000c13d000000400100043d00000020020000390000000003210436000000110200002900000000020204330000000000230435000000400310003900000005042002100000000006340019000000000002004b00000d9a0000c13d0000000007060019000000000217004900000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb9010080410000004001100210000000000112019f00002edf0001042e00000bee0020009c000001cb0000213d00000bf50020009c000002a60000a13d00000bf60020009c0000036d0000613d00000bf70020009c0000041b0000613d00000bf80020009c000014310000c13d000000640030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000002402100370000000000202043b001100000002001d0000ffff0020008c000014310000213d0000004402100370000000000202043b001000000002001d0000000401100370000000000101043b000000000010043f0000016101000039000000200010043f000000400200003900000000010000192ede2eba0000040f00000011020000292ede230d0000040f0000001002000029000000000020043f000000200010043f000000000100001900000040020000392ede2eba0000040f2ede232d0000040f0000002002000039000000400300043d001100000003001d00000000022304362ede22770000040f000008730000013d00000bef0020009c000002ec0000a13d00000bf00020009c000003760000613d00000bf10020009c0000042e0000613d00000bf20020009c000014310000c13d0000000001000416000000000001004b000014310000c13d000000e001000039000000400010043f0000002c01000039000000800010043f00000c6001000041000000a00010043f00000c6101000041000000c00010043f0000002001000039000000e00010043f000000800100003900000100020000392ede22770000040f000000e00110008a00000bb90010009c00000bb901008041000000600110021000000c62011001c700002edf0001042e00000be80020009c000002fe0000a13d00000be90020009c000004980000613d00000bea0020009c000004a10000613d00000beb0020009c000014310000c13d000000440030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000202043b001100000002001d0000002401100370000000000101043b001000000001001d0000ffff0010008c000014310000213d0000001101000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000101041a00000c32001001980000091c0000c13d00000c5901000041000000000010043f0000001101000029000000040010043f00000c030100004100002ee00001043000000bd90020009c000003190000a13d00000bda0020009c000004a70000613d00000bdb0020009c0000056d0000613d00000bdc0020009c000014310000c13d000000440030008c000014310000413d0000000002000416000000000002004b000014310000c13d000000fb02000039000000000202041a0000016404000039000000000404041a000000100440027000000bfb054001970000000004000411000000000054004b0000022f0000c13d000000140330008a000000000431034f000000000404043b000000600440027000000bfc05000041000000800050043f000000000500041000000bfb0b5001970000008400b0043f00000bfb0c400197000000a400c0043f00000c4404000041000000c40040043f0000008004000039000000e40040043f000001040030043f000000200400008a00000000064301700000001f0730018f0000012405600039000002460000613d0000012408000039000000000901034f000000009a09043c0000000008a80436000000000058004b000002420000c13d00000bfb02200197000000000007004b000002540000613d000000000161034f0000000307700210000000000605043300000000067601cf000000000676022f000000000101043b0000010007700089000000000171022f00000000017101cf000000000161019f0000000000150435000001240130003900000000000104350000000001000414000000040020008c00110000000b001d00100000000c001d000f00000002001d0000078e0000c13d0000000103000031000000200030008c00000020040000390000000004034019000007b90000013d00000bcb0020009c000003310000a13d00000bcc0020009c000004b20000613d00000bcd0020009c000005740000613d00000bce0020009c000014310000c13d0000000001000416000000000001004b000014310000c13d00000c2501000041000000800010043f00000c3a0100004100002edf0001042e00000be20020009c0000055a0000613d00000be30020009c0000058e0000613d00000be40020009c000014310000c13d0000000001000416000000000001004b000014310000c13d00000c4c010000410000049c0000013d00000bd30020009c000006060000613d00000bd40020009c000006b70000613d00000bd50020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b2ede26230000040f0000061e0000013d00000bc50020009c000006140000613d00000bc60020009c000006be0000613d00000bc70020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d000000fb02000039000000000202041a0000000404100370000000000404043b001100000004001d0000016404000039000000000404041a000000100440027000000bfb054001970000000004000411000000000054004b000007da0000c13d000000140330008a000000000431034f000000000404043b000000600b400270000007db0000013d00000bf90020009c0000033c0000613d00000bfa0020009c000014310000c13d000000640030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000202043b000f00000002001d0000002402100370000000000202043b00000c090020009c000014310000213d0000002304200039000000000034004b000014310000813d0000000404200039000000000441034f000000000404043b000d00000004001d00000c090040009c000014310000213d0000002404200039000600000004001d0000000d02400029000000000032004b000014310000213d0000004402100370000000000202043b000800000002001d00000c090020009c000014310000213d00000008020000290000002302200039000000000032004b000014310000813d00000008020000290000000402200039000000000221034f000000000202043b000e00000002001d00000c090020009c000014310000213d000000080200002900000024042000390000000e020000290000000502200210001000000004001d000500000002001d0000000002420019000000000032004b000014310000213d000000fb02000039000000000202041a0000016404000039000000000404041a000000100440027000000bfb044001970000000005000411000400000005001d000000000045004b00000df20000c13d000000140330008a000000000431034f000000000404043b000000600440027000000df30000013d00000bf30020009c0000034f0000613d00000bf40020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b00000c090010009c000014310000213d000000040110003900000000020300192ede224b0000040f000000000100001900002edf0001042e00000bec0020009c000003640000613d00000bed0020009c000014310000c13d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d000000fb02000039000000000202041a0000000404100370000000000404043b001100000004001d0000016404000039000000000404041a000000100440027000000bfb044001970000000005000411000000000045004b000d00000005001d000007030000c13d000000140330008a000000000431034f000000000404043b000000600b400270000007040000013d00000bdd0020009c0000044f0000613d00000bde0020009c000014310000c13d0000000001000416000000000001004b000014310000c13d00000c2601000041000000000201041a000000010320019000000001012002700000007f0110618f0000001f0010008c00000000040000390000000104002039000000000442013f00000001004001900000077c0000613d00000c6b01000041000000000010043f0000002201000039000000040010043f00000c030100004100002ee00001043000000bcf0020009c000004910000613d00000bd00020009c000014310000c13d0000000001000416000000000001004b000014310000c13d00000c3c01000041000000000010043f00000c1f0100004100002ee000010430000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000201043b00000c7100200198000014310000c13d000000010100003900000c720020009c000008540000213d00000c780020009c000008c00000213d00000c450020009c000006bb0000613d00000c7a0020009c000006bb0000613d000008c90000013d0000000002000416000000000002004b000014310000c13d000000000131034f0000008002000039000000001301043c0000000002320436000000e00020008c000003540000c13d0000014001000039000000400010043f0000000101000039000000e00010043f0000000402000039000001000020043f000001200000043f000001400010043f000001600020043f000001800000043f00000c6d0100004100002edf0001042e000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b2ede237a0000040f000006210000013d0000000001000416000000000001004b000014310000c13d0000016401000039000000000101041a0000ffff0110018f000000800010043f00000c3a0100004100002edf0001042e000000a40030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000402043b00000c090040009c000014310000213d0000002302400039000000000032004b000014310000813d0000000405400039000000000251034f000000000202043b00000c090020009c000006000000213d0000001f0620003900000c7b066001970000003f0660003900000c7b0660019700000c180060009c000006000000213d00000024044000390000008006600039000000400060043f000000800020043f0000000004420019000000000034004b000014310000213d0000002004500039000000000541034f00000c7b062001980000001f0720018f000000a004600039000003a00000613d000000a008000039000000000905034f000000009a09043c0000000008a80436000000000048004b0000039c0000c13d000000000007004b000003ad0000613d000000000565034f0000000306700210000000000704043300000000076701cf000000000767022f000000000505043b0000010006600089000000000565022f00000000056501cf000000000575019f0000000000540435000000a00220003900000000000204350000002402100370000000000402043b00000c090040009c000014310000213d0000002302400039000000000032004b000014310000813d001100040040003d0000001102100360000000000602043b00000c090060009c000006000000213d00000005056002100000003f0250003900000c1102200197000000400700043d0000000002270019000a00000007001d000000000072004b0000000007000039000000010700403900000c090020009c000006000000213d0000000100700190000006000000c13d000000400020043f0000000a0200002900000000006204350000002404400039001000000045001d000000100030006b000014310000213d000000000006004b000011810000c13d0000004402100370000000000202043b000900000002001d00000c3f0020009c000014310000213d0000006402100370000000000202043b000800000002001d00000c090020009c000014310000213d0000008402100370000000000202043b00000c090020009c000014310000213d0000002304200039000000000034004b000000000500001900000c2b0500804100000c2b04400197000000000004004b000000000600001900000c2b0600404100000c2b0040009c000000000605c019000000000006004b000014310000c13d000e00040020003d0000000e04100360000000000504043b00000c090050009c000006000000213d00000005065002100000003f0460003900000c1104400197000000400700043d0000000004470019000700000007001d000000000074004b0000000007000039000000010700403900000c090040009c000006000000213d0000000100700190000006000000c13d000000400040043f00000007040000290000000004540436000600000004001d00000024042000390000000002040019000d00000046001d0000000d0030006b000014310000213d000000000005004b000015c20000c13d0000000002000411000d00000002001d000000fb02000039000000000202041a000000140530008c000017db0000413d0000016404000039000000000404041a000000100440027000000bfb044001970000000006000411000000000046004b0000000004060019000017dc0000c13d000000000351034f000000000303043b00000060043002700000000003050019000017dc0000013d0000000001000416000000000001004b000014310000c13d00000000010300192ede22650000040f001000000002001d001100000003001d000000000010043f0000015f01000039000000200010043f000000400200003900000000010000192ede2eba0000040f00000010020000292ede230d0000040f00000011020000292ede231d0000040f000000000101041a000006210000013d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b001100000001001d00000bfb0010009c000014310000213d00000c4d010000410000000000100443000000000100041200000004001004430000002400000443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c4e011001c700008005020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00000bfb011001970000000004000410000000000014004b000008cc0000c13d000000400100043d000000640210003900000c680300004100000a6f0000013d000000640030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000002402100370000000000202043b001100000002001d0000ffff0020008c000014310000213d0000004402100370000000000202043b001000000002001d00000bfb0020009c000014310000213d0000000401100370000000000101043b000000000010043f0000016001000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000001102000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000001002000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000101041a000000ff0110018f000000020010008c000006210000a13d00000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee0000104300000000001000416000000000001004b000014310000c13d0000016401000039000000000101041a00000010011002700000049d0000013d0000000001000416000000000001004b000014310000c13d000000fb01000039000000000101041a00000bfb01100197000000800010043f00000c3a0100004100002edf0001042e0000000001000416000000000001004b000014310000c13d000000800000043f00000c3a0100004100002edf0001042e000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b00000bfb0010009c000014310000213d2ede25470000040f0000061e0000013d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b00000bfb0010009c000014310000213d000000000100001900002edf0001042e000000440030008c000014310000413d0000000402100370000000000202043b001100000002001d00000bfb0020009c000014310000213d0000002402100370000000000402043b00000c090040009c000014310000213d0000002302400039000000000032004b000014310000813d0000000405400039000000000251034f000000000202043b00000c090020009c000006000000213d0000001f0620003900000c7b066001970000003f0660003900000c7b0660019700000c180060009c000006000000213d00000024044000390000008006600039000000400060043f000000800020043f0000000004420019000000000034004b000014310000213d0000002003500039000000000331034f00000c7b042001980000001f0520018f000000a001400039000004e90000613d000000a006000039000000000703034f000000007807043c0000000006860436000000000016004b000004e50000c13d000000000005004b000004f60000613d000000000343034f0000000304500210000000000501043300000000054501cf000000000545022f000000000303043b0000010004400089000000000343022f00000000034301cf000000000353019f0000000000310435000000a001200039000000000001043500000c4d010000410000000000100443000000000100041200000004001004430000002400000443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c4e011001c700008005020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00000bfb011001970000000004000410000000000014004b0000044b0000613d00000c4c02000041000000000202041a00000bfb02200197000000000012004b00000a6c0000c13d00000002020003670000000001000031000000fb03000039000000000303041a0000016405000039000000000505041a000000100550027000000bfb065001970000000005000411000000000065004b000005210000c13d000000140610008c000005210000413d000000000162034f000000000101043b00000060051002700000000001060019000000400800043d00000064068000390000008007000039000b00000007001d0000000000760435000000440680003900000c3d07000041000000000076043500000bfc0600004100000000006804350000008406800039000000000016043500000bfb065001970000002405800039000d00000006001d000000000065043500000bfb054001970000000404800039000c00000005001d000000000054043500000c7b061001980000001f0710018f001000000008001d000000a4048000390000000005640019000005410000613d000000000802034f0000000009040019000000008a08043c0000000009a90436000000000059004b0000053d0000c13d000f0bfb0030019b000000000007004b0000054f0000613d000000000262034f0000000303700210000000000605043300000000063601cf000000000636022f000000000202043b0000010003300089000000000232022f00000000023201cf000000000262019f00000000002504350000000002140019000000000002043500000000020004140000000f03000029000000040030008c0000105f0000c13d0000000103000031000000200030008c00000020040000390000000004034019000010900000013d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b00000bfb0010009c000014310000213d0000016402000039000000000202041a0000001002200270000000000112013f00000bfb0010019800000000010000390000000101006039000000800010043f00000c3a0100004100002edf0001042e0000000001000416000000000001004b000014310000c13d00000c4401000041000000800010043f00000c3a0100004100002edf0001042e0000000001000416000000000001004b000014310000c13d2ede265e0000040f0000060b0000013d000000840030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000002402100370000000000202043b0000ffff0020008c000014310000213d0000004402100370000000000202043b000000020020008c000014310000213d0000006401100370000000000101043b000000000001004b0000000002000039000000010200c039000000000021004b000004bb0000613d000014310000013d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b2ede237a0000040f000000030010008c00000000010000390000000101006039000006210000013d000000c40030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000202043b00000bfb0020009c000014310000213d0000002402100370000000000202043b00000bfb0020009c000014310000213d0000004402100370000000000202043b00000c090020009c000014310000213d0000002304200039000000000034004b000014310000813d0000000404200039000000000441034f000000000404043b00000c090040009c000014310000213d000000050440021000000000024200190000002402200039000000000032004b000014310000213d0000006402100370000000000202043b00000c090020009c000014310000213d0000002304200039000000000034004b000014310000813d0000000404200039000000000141034f000000000101043b00000c090010009c000014310000213d00000000011200190000002401100039000000000031004b000014310000213d0000000001000415000000130110008a0010000500100218000000000100041a001100000001001d000fff000010019400000fb40000c13d0000000001000415000000120110008a00100005001002180000001101000029000000ff0010019000000fb40000c13d000001000100008a000000110210017f000000800100003900000001022001bf00000c7c02200197000000000020041b0000000103000039000000000031043500000bb90010009c00000bb9010080410000004001100210000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c10011001c70000800d0200003900000bbf040000410000142e0000013d000000a40030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000402043b00000c090040009c000014310000213d0000002302400039000000000032004b000014310000813d0000000405400039000000000251034f000000000202043b00000c090020009c000006000000213d0000001f0620003900000c7b066001970000003f0660003900000c7b0660019700000c180060009c000009280000a13d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee0000104300000000001000416000000000001004b000014310000c13d2ede25f90000040f2ede26080000040f000000400200043d001100000002001d2ede22f00000040f000000110100002900000bb90010009c00000bb901008041000000400110021000000c3b011001c700002edf0001042e000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b00000bfb0010009c000014310000213d2ede268e0000040f000000000001004b0000000001000039000000010100c039000000400200043d000000000012043500000bb90020009c00000bb902008041000000400120021000000c21011001c700002edf0001042e000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b001100000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b001000000001001d00000011010000292ede237a0000040f0000001002000029000000000202041a001100000002001d000000d0022002700000ffff0220018f000000000020043f0000016302000039000000200020043f001000000001001d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000101041a000000000001004b000006fd0000613d000000010110008a0000001102000029000000c0022002700000ffff0220018f000000000112013f0000001002000029000000060220018f000000020220015f00000000002101a000000000010000390000000101006039000006210000013d000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000402100370000000000202043b00000c090020009c000014310000213d0000002304200039000000000034004b000014310000813d001000040020003d0000001004100360000000000404043b001100000004001d00000c090040009c000014310000213d0000001102200029000f00240020003d0000000f0030006b000014310000213d000000fb02000039000000000202041a0000016404000039000000000404041a000000100440027000000bfb054001970000000004000411000000000054004b000006850000c13d000000140330008a000000000431034f000000000404043b000000600440027000000bfc05000041000000800050043f000000000500041000000bfb0b5001970000008400b0043f00000bfb0c400197000000a400c0043f00000c2504000041000000c40040043f0000008004000039000000e40040043f000001040030043f000000200a00008a0000000005a301700000001f0630018f00000124045000390000069c0000613d0000012407000039000000000801034f000000008908043c0000000007970436000000000047004b000006980000c13d00000bfb02200197000000000006004b000006aa0000613d000000000151034f0000000306600210000000000504043300000000056501cf000000000565022f000000000101043b0000010006600089000000000161022f00000000016101cf000000000151019f0000000000140435000001240130003900000000000104350000000001000414000000040020008c000e0000000b001d000d0000000c001d000c00000002001d00000ace0000c13d0000000103000031000000200030008c0000002004000039000000000403401900000af90000013d0000000001000416000000000001004b000014310000c13d00000c3d01000041000000800010043f00000c3a0100004100002edf0001042e000000240030008c000014310000413d0000000002000416000000000002004b000014310000c13d0000000401100370000000000101043b001100000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b001000000001001d00000011010000292ede237a0000040f000000030010008c0000087d0000c13d0000016401000039000000000101041a000000100110027000000bfb011001970000000003000411000000000013004b0000000002030019000006e70000c13d0000000001000031000000140110008c0000000002030019000006e70000413d0000000201100367000000000101043b0000006002100270000f00000002001d0000001001000029000000000101041a001000000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000401041a000000000004004b00000a800000c13d00000c6b01000041000000000010043f0000001101000039000000040010043f00000c030100004100002ee00001043000000bfb0b50019700000bfc04000041000000800040043f000000000400041000000bfb0c4001970000008400c0043f000000a400b0043f00000c5a04000041000000c40040043f0000008004000039000000e40040043f000001040030043f000000200400008a00000000064301700000001f0730018f00000124056000390000071a0000613d0000012408000039000000000901034f000000009a09043c0000000008a80436000000000058004b000007160000c13d00000bfb02200197000000000007004b000007280000613d000000000161034f0000000307700210000000000605043300000000067601cf000000000676022f000000000101043b0000010007700089000000000171022f00000000017101cf000000000161019f0000000000150435000001240130003900000000000104350000000001000414000000040020008c00100000000b001d000f0000000c001d000e00000002001d000007350000c13d0000000103000031000000200030008c00000020040000390000000004034019000007600000013d0000001f03300039000000000343016f00000bfe0030009c00000bfe03008041000000600330021000000bb90010009c00000bb901008041000000c001100210000000000113019f00000bff0110009a2ede2ed40000040f000000800a000039000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000080057001bf0000074f0000613d000000000801034f000000008908043c000000000a9a043600000000005a004b0000074b0000c13d000000000006004b0000075c0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f000300000001035500000001002001900000085b0000613d0000001f01400039000000600210018f00000080012001bf000000400010043f000000200030008c000014310000413d000000800300043d000000000003004b0000000004000039000000010400c039000000000043004b000014310000c13d000000000003004b000009f30000c13d00000c0403000041000000000031043500000084032001bf0000000e040000290000000000430435000000e40320003900000c5a040000410000000000430435000000c40320003900000010040000290000000000430435000000a4022000390000000f03000029000008500000013d000000800010043f000000000003004b000008670000613d00000c2602000041000000000020043f000000000001004b00000000020000190000086c0000613d00000c28030000410000000002000019000000000403041a000000a005200039000000000045043500000001033000390000002002200039000000000012004b000007860000413d0000086c0000013d0000001f03300039000000000343016f00000bfe0030009c00000bfe03008041000000600330021000000bb90010009c00000bb901008041000000c001100210000000000113019f00000bff0110009a2ede2ed40000040f000000800a000039000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000080057001bf000007a80000613d000000000801034f000000008908043c000000000a9a043600000000005a004b000007a40000c13d000000000006004b000007b50000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000100200190000008960000613d0000001f01400039000000600110018f00000080021001bf000e00000002001d000000400020043f000000200030008c000014310000413d000000800200043d000000000002004b0000000004000039000000010400c039000000000042004b000014310000c13d000000000002004b00000a100000c13d00000c04020000410000000e04000029000000000024043500000084021001bf0000000f030000290000000000320435000000e40210003900000c44030000410000000000320435000000c40210003900000010030000290000000000320435000000a40110003900000011020000290000000000210435000000400140021000000c05011001c700002ee00001043000000bfb0b40019700000bfc04000041000000800040043f000000000400041000000bfb04400197000000840040043f000000a400b0043f00000bfd04000041000000c40040043f000000e40060043f000001040030043f000000200400008a00000000064301700000001f0730018f0000012405600039000007f00000613d0000012408000039000000000901034f000000009a09043c0000000008a80436000000000058004b000007ec0000c13d00000bfb02200197000000000007004b000007fe0000613d000000000161034f0000000307700210000000000605043300000000067601cf000000000676022f000000000101043b0000010007700089000000000171022f00000000017101cf000000000161019f0000000000150435000001240130003900000000000104350000000001000414000000040020008c00100000000b001d000f00000002001d0000080a0000c13d0000000103000031000000200030008c00000020040000390000000004034019000008350000013d0000001f03300039000000000343016f00000bfe0030009c00000bfe03008041000000600330021000000bb90010009c00000bb901008041000000c001100210000000000113019f00000bff0110009a2ede2ed40000040f000000800a000039000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000080057001bf000008240000613d000000000801034f000000008908043c000000000a9a043600000000005a004b000008200000c13d000000000006004b000008310000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000100200190000008a20000613d0000001f01400039000000600210018f00000080012001bf000000400010043f000000200030008c000014310000413d000000800300043d000000000003004b0000000004000039000000010400c039000000000043004b000014310000c13d000000000003004b00000a3a0000c13d00000c0403000041000000000031043500000084032001bf0000000f040000290000000000430435000000e40320003900000bfd040000410000000000430435000000c40320003900000010040000290000000000430435000000a40220003900000000030004100000000000320435000000400110021000000c05011001c700002ee00001043000000c730020009c000008c50000213d00000c760020009c000006bb0000613d00000c770020009c000006bb0000613d000008c90000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000008620000c13d000008ad0000013d00000c7d02200197000000a00020043f000000000001004b00000020020000390000000002006039000000200220003900000080010000392ede22de0000040f000000400100043d001100000001001d00000080020000392ede22a90000040f0000001102000029000000000121004900000bb90010009c00000bb901008041000000600110021000000bb90020009c00000bb9020080410000004002200210000000000121019f00002edf0001042e00000c0602000041000000000020043f0000001102000029000000040020043f000000240010043f0000000801000039000000440010043f00000c070100004100002ee000010430000000640130003900000c4f040000410000000000410435000000440130003900000c5004000041000000000041043500000024013000390000003804000039000000000041043500000bba01000041000000000013043500000004013000390000002003000039000000000031043500000c05012001c700002ee0000104300000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b0000089d0000c13d000008ad0000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000008a90000c13d000000000005004b000008ba0000613d000000000161034f0000000305500210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000600130021000000bb90020009c00000bb9020080410000004002200210000000000112019f00002ee00001043000000c790020009c000006bb0000613d00000c520020009c000006bb0000613d000008c90000013d00000c740020009c000006bb0000613d00000c750020009c000006bb0000613d000000800000043f00000c3a0100004100002edf0001042e00000c4c02000041000000000202041a00000bfb02200197000000000012004b00000a6c0000c13d000000020c0003670000000001000031000000fb03000039000000000303041a0000016405000039000000000505041a000000100550027000000bfb065001970000000005000411000000000065004b000008e20000c13d000000140610008c000008e20000413d00000000016c034f000000000101043b00000060051002700000000001060019000000400800043d00000064068000390000008007000039000b00000007001d0000000000760435000000440680003900000c3d07000041000000000076043500000bfc0600004100000000006804350000008406800039000000000016043500000bfb065001970000002405800039000e00000006001d000000000065043500000bfb054001970000000404800039000d00000005001d0000000000540435000000200b00008a0000000006b101700000001f0710018f001000000008001d000000a4048000390000000005640019000009030000613d00000000080c034f0000000009040019000000008a08043c0000000009a90436000000000059004b000008ff0000c13d00000bfb02300197000000000007004b000009110000613d00000000086c034f0000000303700210000000000605043300000000063601cf000000000636022f000000000708043b0000010003300089000000000737022f00000000033701cf000000000363019f0000000000350435000000000314001900000000000304350000000004000414000000040020008c000c00000002001d00000b180000c13d0000000103000031000000200030008c0000002004000039000000000403401900000b480000013d000000110100002900000010020000292ede2a0e0000040f000000400300043d00000020043000390000000000240435000000000013043500000bb90030009c00000bb903008041000000400130021000000c3b011001c700002edf0001042e00000024044000390000008006600039000000400060043f000000800020043f0000000004420019000000000034004b000014310000213d0000002004500039000000000541034f00000c7b062001980000001f0720018f000000a0046000390000093b0000613d000000a008000039000000000905034f000000009a09043c0000000008a80436000000000048004b000009370000c13d000000000007004b000009480000613d000000000565034f0000000306700210000000000704043300000000076701cf000000000767022f000000000505043b0000010006600089000000000565022f00000000056501cf000000000575019f0000000000540435000000a00220003900000000000204350000002402100370000000000402043b00000c090040009c000014310000213d0000002302400039000000000032004b000014310000813d001100040040003d0000001102100360000000000602043b00000c090060009c000006000000213d00000005056002100000003f0250003900000c1102200197000000400700043d0000000002270019000e00000007001d000000000072004b0000000007000039000000010700403900000c090020009c000006000000213d0000000100700190000006000000c13d000000400020043f0000000e0200002900000000006204350000002404400039001000000045001d000000100030006b000014310000213d000000000006004b000011fe0000c13d0000004402100370000000000202043b000800000002001d00000c090020009c000014310000213d0000006402100370000000000202043b00000c090020009c000014310000213d0000008402100370000000000502043b00000c090050009c000014310000213d0000002302500039000000000032004b000000000400001900000c2b0400804100000c2b02200197000000000002004b000000000600001900000c2b0600404100000c2b0020009c000000000604c019000000000006004b000014310000c13d0000000406500039000000000261034f000000000202043b00000c090020009c000006000000213d0000001f0420003900000c7b044001970000003f0440003900000c7b07400197000000400400043d0000000007740019000000000047004b0000000008000039000000010800403900000c090070009c000006000000213d0000000100800190000006000000c13d0000002408500039000000400070043f00000000052404360000000007820019000000000037004b000014310000213d0000002006600039000000000761034f00000c7b082001980000001f0920018f0000000006850019000009a90000613d000000000a07034f000000000b05001900000000ac0a043c000000000bcb043600000000006b004b000009a50000c13d000000000009004b000009b60000613d000000000787034f0000000308900210000000000906043300000000098901cf000000000989022f000000000707043b0000010008800089000000000787022f00000000078701cf000000000797019f000000000076043500000000022500190000000000020435000000000204043300000c2c0020009c000014310000213d000000200020008c000014310000413d000000000605043300000c090060009c000014310000213d00000000025200190000000004460019000a00000004001d0000003f04400039000000000024004b000000000600001900000c2b0600804100000c2b04400197000000000502001900100c2b0020019b000000100740014f000000100040006c000000000400001900000c2b0400404100000c2b0070009c000000000406c019000000000004004b000014310000c13d0000000a020000290000002004200039000000000404043300000c090040009c000006000000213d00000005064002100000003f0760003900000c1107700197000000400200043d0000000007720019000700000002001d000000000027004b0000000008000039000000010800403900000c090070009c000006000000213d0000000100800190000006000000c13d000000400070043f00000007020000290000000002420436000600000002001d0000000a02000029000c00400020003d0000000c02600029000900000002001d000000000052004b000014310000213d00000009040000290000000c0040006b0000192f0000813d000b00060000002d000010be0000013d0000001101000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b001000000001001d00000011010000292ede237a0000040f000000010210020f000000090020019000000ba20000c13d00000c0602000041000000000020043f0000001102000029000000040020043f000000240010043f0000000901000039000000440010043f00000c070100004100002ee000010430000000040200008a000000000220003100000c2c0020009c000014310000213d000000400020008c000014310000413d000000c002100039000000400020043f00000002020003670000000404200370000000000404043b001100000004001d00000bfb0040009c000014310000213d0000000e04000029000000110500002900000000005404350000002402200370000000000202043b000000010020008c000014310000213d000000a001100039001000000001001d0000000000210435000000400100043d000000200210003900000c45040000410000000000420435000000240510003900000000004504350000002404000039000000000041043500000c140010009c000006000000213d0000006004100039000000400040043f0000001104000029000000040040008c00000fd40000c13d0000000001020433000000000010043f00000fff0000013d0000001101000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b001000000001001d00000011010000292ede237a0000040f000000030010008c00000c260000c13d0000001001000029000000000101041a001000000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000101041a000000000001004b000006fd0000613d000000010110008a0000001002000029000000c0022002700000ffff0220018f000000000012004b00000c260000c13d00000011010000292ede2b600000040f000000000100001900002edf0001042e000000400100043d000000640210003900000c63030000410000000000320435000000440210003900000c6403000041000000000032043500000024021000390000002c03000039000000000032043500000bba02000041000000000021043500000004021000390000002003000039000000000032043500000bb90010009c00000bb901008041000000400110021000000c05011001c700002ee0000104300000016401000039000000000101041a000000100110027000000bfb011001970000000002000411000000000012004b000000000200003900000001020060390000000003000031000000140130008c0000000005000039000000010500803900000000002501700000000001036019000000fb02000039000000000202041a000000400700043d00000bfc0300004100000000003704350000000f0300002900000bfb053001970000002403700039000600000005001d00000000005304350000000403700039000000000500041000000000005304350000008409700039000000640a700039000000440b70003900000bfb02200197000000020500036700000c7b06100197000e00000007001d000000a40870003900000000038100190000001f0710018f000000010440008a000000100c000029000000c00cc002700000ffff0cc0018f00000000004c004b000000000468001900000b740000c13d00000bfd0c0000410000000000cb0435000000800b0000390000000000ba04350000000000190435000000000006004b00000ab80000613d000000000905034f000000009a09043c0000000008a80436000000000048004b00000ab40000c13d000000000007004b00000ac50000613d000000000565034f0000000306700210000000000704043300000000076701cf000000000767022f000000000505043b0000010006600089000000000565022f00000000056501cf000000000575019f000000000054043500000000000304350000000003000414000000040020008c00000be00000c13d0000000103000031000000200030008c0000002004000039000000000403401900000c100000013d0000001f033000390000000003a3016f00000bfe0030009c00000bfe03008041000000600330021000000bb90010009c00000bb901008041000000c001100210000000000113019f00000bff0110009a2ede2ed40000040f000000800a000039000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000080057001bf00000ae80000613d000000000801034f000000008908043c000000000a9a043600000000005a004b00000ae40000c13d000000000006004b00000af50000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000000b960000613d0000001f01400039000000600110018f00000080021001bf000000400020043f000000200030008c000014310000413d000000800300043d000000000003004b0000000004000039000000010400c039000000000043004b000014310000c13d000000000003004b00000d440000c13d00000c0403000041000000000032043500000084031001bf0000000c040000290000000000430435000000e40310003900000c25040000410000000000430435000000c4031000390000000d040000290000000000430435000000a4011000390000000e030000290000000000310435000000400120021000000c05011001c700002ee0000104300000001f011000390000000001b1016f000000a40110003900000bb90010009c00000bb9010080410000006001100210000000100300002900000bb90030009c00000bb9030080410000004003300210000000000131019f00000bb90040009c00000bb904008041000000c003400210000000000113019f2ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f0000002007400190000000100570002900000b370000613d000000000801034f0000001009000029000000008a08043c0000000009a90436000000000059004b00000b330000c13d000000000006004b00000b440000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000000bd40000613d0000001f01400039000000600110018f0000001002100029000000000012004b00000000010000390000000101004039000f00000002001d00000c090020009c000006000000213d0000000100100190000006000000c13d0000000f01000029000000400010043f000000200030008c000014310000413d00000010010000290000000001010433000000000001004b0000000002000039000000010200c039000000000021004b000014310000c13d000000000001004b00000e900000c13d0000000f03000029000000640130003900000c3d02000041000000000021043500000044013000390000000e02000029000000000021043500000024013000390000000d02000029000000000021043500000c0401000041000000000013043500000004013000390000000c02000029000000000021043500000bb90030009c00000bb903008041000000400130021000000c05011001c700002ee00001043000000c080c0000410000000000cb0435000000800b0000390000000000ba04350000000000190435000000000006004b00000b800000613d000000000905034f000000009a09043c0000000008a80436000000000048004b00000b7c0000c13d000000000007004b00000b8d0000613d000000000565034f0000000306700210000000000704043300000000076701cf000000000767022f000000000505043b0000010006600089000000000565022f00000000056501cf000000000575019f000000000054043500000000000304350000000003000414000000040020008c00000c280000c13d0000000103000031000000200030008c0000002004000039000000000403401900000c580000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00000b9d0000c13d000008ad0000013d0000001001000029000000000101041a000f00000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000f02000029000000c002200270000fffff00200193000000000101043b000000000201041a0000000f0020006c000020d70000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000f020000290000000102200210000000000101043b00000000012100190000000101100039000000000101041a00000c2400100198000011620000c13d00000c5e01000041000000000010043f0000001101000029000000040010043f0000000f01000029000000240010043f00000c5f0100004100002ee0000104300000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00000bdb0000c13d000008ad0000013d0000001f0110003900000c7b01100197000000a40110003900000bb90010009c00000bb90100804100000060011002100000000e0400002900000bb90040009c00000bb9040080410000004004400210000000000141019f00000bb90030009c00000bb903008041000000c003300210000000000113019f2ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f00000020074001900000000e0570002900000bff0000613d000000000801034f0000000e09000029000000008a08043c0000000009a90436000000000059004b00000bfb0000c13d000000000006004b00000c0c0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000000e6c0000613d0000001f01400039000000600210018f0000000e01200029000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f000000200030008c000014310000413d0000000e010000290000000001010433000000000001004b0000000002000039000000010200c039000000000021004b000014310000c13d000000000001004b00000ea90000c13d00000c0201000041000002100000013d0000001f0110003900000c7b01100197000000a40110003900000bb90010009c00000bb90100804100000060011002100000000e0400002900000bb90040009c00000bb9040080410000004004400210000000000141019f00000bb90030009c00000bb903008041000000c003300210000000000113019f2ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f00000020074001900000000e0570002900000c470000613d000000000801034f0000000e09000029000000008a08043c0000000009a90436000000000059004b00000c430000c13d000000000006004b00000c540000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000000e780000613d0000001f01400039000000600210018f0000000e01200029000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f000000200030008c000014310000413d0000000e010000290000000001010433000000000001004b0000000002000039000000010200c039000000000021004b000014310000c13d000000000001004b00000ea90000c13d00000c0a01000041000002100000013d000000000601043b000000200700008a00000000080000190000000109000029000000400a00043d00000c1400a0009c000006000000213d0000006001a00039000000400010043f000000000106041a00000bfb0110019700000000011a04360000000102600039000000000202041a00000000002104350000000201600039000000000201041a0000000103200190000000010c2002700000007f0cc0618f0000001f00c0008c00000000040000390000000104002039000000000442013f00000001004001900000032b0000c13d000000400b00043d0000000004cb0436000000000003004b00000cb40000613d000b00000004001d000c0000000c001d000d0000000b001d000e0000000a001d000f00000009001d001000000008001d001100000006001d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000c0c00002900000000000c004b000000200700008a00000010080000290000000f0900002900000cba0000613d000000000201043b00000000010000190000000a0500002900000011060000290000000e0a0000290000000d0b0000290000000b0d00002900000000031d0019000000000402041a0000000000430435000000010220003900000020011000390000000000c1004b00000cac0000413d00000cbf0000013d00000c7d01200197000000000014043500000000000c004b0000002001000039000000000100603900000cbf0000013d00000000010000190000000a0500002900000011060000290000000e0a0000290000000d0b0000290000003f01100039000000000271016f0000000001b20019000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d0000002009900039000000400010043f0000004001a000390000000000b104350000000000a9043500000003066000390000000108800039000000000058004b00000c740000413d0000008e0000013d000000000801043b000c00000000001d000b00110000002d00000d000000013d0000000b0400002900000020044000390000000001a904360000000102800039000000000202041a00000c0903200197000000000031043500000c23002001980000000001000039000000010100c039000000e003900039000000000013043500000c24002001980000000001000039000000010100c039000000c0039000390000000000130435000000d0012002700000ffff0110018f000000a0039000390000000000130435000000c0012002700000ffff0110018f00000080039000390000000000130435000000800120027000000c090110019700000060039000390000000000130435000000400120027000000c090110019700000040029000390000000000120435000b00000004001d000000000094043500000002088000390000000c020000290000000102200039000c00000002001d0000000a0020006c000001880000813d000000400200043d00000c220020009c000006000000213d0000010003200039000000400030043f000000000408041a00000c090040009c000006000000213d00000005014002100000003f0110003900000c1101100197000000000131001900000c090010009c000006000000213d000f00000002001d000000400010043f000e00000003001d0000000000430435001000000008001d000000000080043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c70000801002000039000d00000004001d2ede2ed40000040f0000000100200190000014310000613d0000000d0b00002900000000000b004b00000010080000290000000f090000290000000e0a00002900000cd70000613d0000012002900039000000000101043b0000000003000019000000400400043d00000c180040009c000006000000213d0000008005400039000000400050043f000000000501041a00000c16005001980000000006000039000000010600c0390000004007400039000000000067043500000bfb06500197000000000664043600000c12005001980000000007000039000000010700c0390000000000760435000000b005500270000000ff0550018f000000020050008c0000048b0000213d000000600640003900000000005604350000000002420436000000010110003900000001033000390000000000b3004b00000d270000413d00000cd70000013d00000011030000290000001f0330003900000c7b033001970000003f0330003900000c7b03300197000000000332001900000c090030009c000006000000213d00000c7b0b000041000000400030043f000000110300002900000000003204350000000f03000029000000000030007c000014310000213d00000011030000290000000004b301700000001f0530018f000000a001100039000000000341001900000010060000290000002006600039000000020660036700000d620000613d000000000706034f0000000008010019000000007907043c0000000008980436000000000038004b00000d5e0000c13d000000000005004b00000d6f0000613d000000000446034f0000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000011031000290000000000030435000000000302043300000c090030009c000006000000213d00000c2604000041000000000504041a000000010050019000000001045002700000007f0440618f0000001f0040008c00000000060000390000000106002039000000000565013f00000001005001900000032b0000c13d000000200040008c00000d910000413d00000c2605000041000000000050043f0000001f05300039000000050550027000000c270550009a000000200030008c00000c28050040410000001f04400039000000050440027000000c270440009a000000000045004b00000d910000813d000000000005041b0000000105500039000000000045004b00000d8d0000413d0000001f0030008c000013ad0000a13d00000c2604000041000000000040043f0000000006b30170000013cf0000c13d000000200500003900000c2804000041000013db0000013d000000000500001900000dc50000013d00000000040a043300000c090440019700000000004904350000004004800039000000000404043300000c0904400197000000400960003900000000004904350000006004800039000000000404043300000c090440019700000060096000390000000000490435000000800480003900000000040404330000ffff0440018f00000080096000390000000000490435000000a00480003900000000040404330000ffff0440018f000000a0096000390000000000490435000000c0048000390000000004040433000000000004004b0000000004000039000000010400c039000000c0096000390000000000490435000000e004600039000000e0068000390000000006060433000000000006004b0000000006000039000000010600c03900000000006404350000000105500039000000000025004b0000000006070019000001940000813d0000000007160049000000400770008a000000000373043600000011040000290000002004400039001100000004001d000000000804043300000000ab080434000001000400003900000000094604360000010007600039000000000c0b04330000000000c70435000001200760003900000000000c004b00000d9c0000613d000000000d000019000000200bb00039000000000e0b0433000000004f0e043400000bfb0ff00197000000000ff704360000000004040433000000000004004b0000000004000039000000010400c03900000000004f04350000004004700039000000400fe00039000000000f0f043300000000000f004b000000000f000039000000010f00c0390000000000f404350000006004e00039000000000e0404330000000200e0008c0000048b0000213d00000060047000390000000000e404350000008007700039000000010dd000390000000000cd004b00000dd60000413d00000d9c0000013d000000000400041100000bfc05000041000000800050043f000000000500041000000bfb05500197000c00000005001d000000840050043f00000bfb04400197000b00000004001d000000a40040043f00000c6e04000041000000c40040043f0000008004000039000000e40040043f000001040030043f00000c7b053001980000001f0630018f000001240450003900000e0b0000613d0000012407000039000000000801034f000000008908043c0000000007970436000000000047004b00000e070000c13d00110bfb0020019b000000000006004b00000e190000613d000000000151034f0000000302600210000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f00000000001404350000012401300039000000000001043500000000010004140000001102000029000000040020008c00000e240000c13d0000000103000031000000200030008c0000002004000039000000000403401900000e500000013d0000001f0230003900000c7b0220019700000bfe0020009c00000bfe02008041000000600220021000000bb90010009c00000bb901008041000000c001100210000000000112019f00000bff0110009a00000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000080057001bf000000800a00003900000e3f0000613d000000000801034f000000008908043c000000000a9a043600000000005a004b00000e3b0000c13d000000000006004b00000e4c0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000000e840000613d0000001f01400039000000600210018f00000080012001bf000000400010043f000000200030008c000014310000413d000000800300043d000000000003004b0000000004000039000000010400c039000000000043004b000014310000c13d000000000003004b000011470000c13d00000c0403000041000000000031043500000084032001bf00000011040000290000000000430435000000e40320003900000c6e040000410000000000430435000000c4032000390000000b040000290000000000430435000000a4022000390000000c03000029000008500000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00000e730000c13d000008ad0000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00000e7f0000c13d000008ad0000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00000e8b0000c13d000008ad0000013d0000000f0100002900000c190010009c000006000000213d0000000f010000290000002002100039000e00000002001d000000400020043f000000000001043500000c5101000041000000000101041a000000ff001001900000126f0000c13d000000400200043d00000c5201000041001000000002001d00000000001204350000000005000415000000170550008a000000050550021000000000010004140000001102000029000000040020008c000012fd0000c13d00000020040000390000132b0000013d0000001101000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000e00000001001d000000000101041a001000000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000f00000001001d000000000101041a000000000001004b000006fd0000613d000000010110008a0000001002000029000000c0022002700000ffff0220018f000000000012004b00000a680000813d0000000e01000029000000000101041a000000c0021002700000ffff0220018f0000ffff0020008c000006fd0000613d00000c0b011001970000000102200039000c00000002001d000000c00220021000000c0c02200197000000000112019f0000000e02000029000000000012041b00000c0d010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d0000000e03000029000000000203041a00000c0f02200197000000000101043b00000c0901100197000500000001001d0000008001100210000000000112019f000000000013041b0000000f01000029000000000101041a0000000c0010006c000020d70000a13d0000000f01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000c02000029000a000100200218000000000101043b0000000a01100029000000000201041a00000c090020009c000006000000213d00000005012002100000003f0310003900000c1103300197000000400400043d0000000003340019000e00000004001d000000000043004b0000000004000039000000010400403900000c090030009c000006000000213d0000000100400190000006000000c13d000000400030043f0000000e030000290000000005230436000000000002004b00000f240000613d00000060020000390000000003000019000000000435001900000000002404350000002003300039000000000013004b00000f1f0000413d000b00000005001d0000000f01000029000000000101041a0000000c0010006c000020d70000a13d0000000c01000029000dffff001001930000000003000019001000000003001d0000000f01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000a01100029000000000101041a0000001102000029000000000020043f000000100010006b000018f40000813d0000016101000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000d02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000001002000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000201041a000000010320019000000001062002700000007f0660618f0000001f0060008c00000000040000390000000104002039000000000442013f00000001004001900000032b0000c13d000000400500043d0000000004650436000000000003004b00000f8f0000613d000700000004001d000800000006001d000900000005001d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000806000029000000000006004b00000f950000613d000000000201043b0000000001000019000000090500002900000007070000290000000003170019000000000402041a000000000043043500000001022000390000002001100039000000000061004b00000f870000413d00000f970000013d00000c7d012001970000000000140435000000000006004b0000002001000039000000000100603900000f970000013d000000000100001900000009050000290000003f0110003900000c7b021001970000000001520019000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f0000000e0100002900000000010104330000001003000029000000000031004b000020d70000a13d00000005013002100000000b0110002900000000005104350000000e010000290000000001010433000000000031004b000020d70000a13d00000001033000390000000f01000029000000000101041a0000000c0010006c00000f2c0000213d000020d70000013d00000c4001000041000000000010044300000000010004100000000400100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c41011001c700008002020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000000001004b000012890000c13d0000001101000029000000ff0110018f000000010010008c00000010010000290000000501100270000000000100003f000000010100603f0000128c0000c13d000000000200041a00000c7d0120019700000001021001bf000000000020041b0000000f0000006b000004bb0000c13d000000400100043d000005d90000013d00000bb90020009c00000bb9020080410000004002200210000000000101043300000bb90010009c00000bb9010080410000006001100210000000000121019f00000c46011001c700000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0540018f000000200440019000000fed0000613d000000000601034f0000000007000019000000006806043c0000000007870436000000000047004b00000fe90000c13d000000000005004b00000ffa0000613d000000000641034f0000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000100000003001f00030000000103550000000100200190000012c50000613d000000000100043d000000200030008c000012c50000413d000000000001004b000012c50000613d000000400100043d000000200210003900000c45040000410000000000420435000000240410003900000c470500004100000000005404350000002404000039000000000041043500000c140010009c000006000000213d0000006004100039000000400040043f0000001104000029000000040040008c000012960000c13d0000000001020433000000000010043f000012c10000013d00000000070000190000102a0000013d0000000302b00210000000000b0d0433000000000b2b01cf000000000b2b022f000000000a0a04330000010002200089000000000a2a022f00000000022a01cf0000000002b2019f00000000002d0435000000000298001900000000000204350000001f0280003900000c7b0220019700000000099200190000000107700039000000000047004b000000d90000813d0000000008190049000001800880008a000000200550003900000000008504350000002003300039000000000803043300000000ba08043400000bfb0aa00197000000000aa90436000000000b0b04330000000000ba043500000040088000390000000008080433000000400a900039000000600200003900000000002a0435000000600b90003900000000a808043400000000008b043500000c7b0c8001970000001f0b80018f000000800990003900000000009a004b000010520000813d00000000000c004b0000104e0000613d000000000eba0019000000000db90019000000200dd0008a000000200ee0008a000000000fcd00190000000002ce0019000000000202043300000000002f0435000000200cc0008c000010480000c13d00000000000b004b000010220000613d000000000d090019000010180000013d000000000dc9001900000000000c004b0000105b0000613d000000000e0a0019000000000f09001900000000e20e0434000000000f2f04360000000000df004b000010570000c13d00000000000b004b000010220000613d000000000aca0019000010180000013d0000001f0110003900000c7b01100197000000a40110003900000bb90010009c00000bb9010080410000006001100210000000100300002900000bb90030009c00000bb9030080410000004003300210000000000131019f00000bb90020009c00000bb902008041000000c002200210000000000112019f0000000f020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000010057000290000107f0000613d000000000801034f0000001009000029000000008a08043c0000000009a90436000000000059004b0000107b0000c13d000000000006004b0000108c0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000100200190000011f20000613d0000001f01400039000000600110018f0000001002100029000000000012004b00000000010000390000000101004039000e00000002001d00000c090020009c000006000000213d0000000100100190000006000000c13d0000000e01000029000000400010043f000000200030008c000014310000413d00000010010000290000000001010433000000000001004b0000000002000039000000010200c039000000000021004b000014310000c13d000000000001004b000013bf0000c13d0000000e03000029000000640130003900000c3d02000041000000000021043500000044013000390000000d02000029000000000021043500000024013000390000000c02000029000000000021043500000c0401000041000000000013043500000004013000390000000f0200002900000b6e0000013d0000000b020000290000000d040000290000000002420436000b00000002001d00000009040000290000000c0040006b0000192f0000813d0000000c020000290000000024020434000c00000002001d00000c090040009c000014310000213d0000000a044000290000005f06400039000000000056004b000000000700001900000c2b0700804100000c2b06600197000000100860014f000000100060006c000000000600001900000c2b0600404100000c2b0080009c000000000607c019000000000006004b000014310000c13d0000004002400039000f00000002001d000000000602043300000c090060009c000006000000213d00000005076002100000003f0870003900000c1108800197000000400200043d0000000008820019000d00000002001d000000000028004b0000000009000039000000010900403900000c090080009c000006000000213d0000000100900190000006000000c13d000000400080043f0000000d020000290000000000620435000000600b4000390011000000b7001d000000110050006b000014310000213d0000001100b0006c000010b70000813d0000000d0d000029000010ff0000013d00000000076700190000000302800210000000000604043300000000062601cf000000000626022f00000000070704330000010002200089000000000727022f00000000022701cf000000000262019f0000000000240435000000200dd000390000000002ec001900000000000204350000000000fd04350000001100b0006c000010b70000813d00000000b40b043400000c090040009c000014310000213d0000000f044000290000003f06400039000000000056004b000000000700001900000c2b0700804100000c2b06600197000000100860014f000000100060006c000000000600001900000c2b0600404100000c2b0080009c000000000607c019000000000006004b000014310000c13d0000002006400039000000000e06043300000c0900e0009c000006000000213d0000001f06e0003900000c7b066001970000003f0660003900000c7b06600197000000400f00043d00000000066f00190000000000f6004b0000000007000039000000010700403900000c090060009c000006000000213d0000000100700190000006000000c13d000000400060043f000000000cef0436000000400740003900000000047e0019000000000054004b000014310000213d00000c7b06e001970000001f08e0018f0000000000c7004b0000113b0000813d000000000006004b000011370000613d000000000987001900000000048c0019000000200440008a000000200990008a000000000a6400190000000002690019000000000202043300000000002a0435000000200660008c000011310000c13d000000000008004b000010f90000613d00000000040c0019000010ef0000013d00000000046c0019000000000006004b000011440000613d0000000009070019000000000a0c00190000000092090434000000000a2a043600000000004a004b000011400000c13d000000000008004b000010ee0000c13d000010f90000013d0000000f01000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000c00000001001d0000000f010000292ede237a0000040f001100000001001d000000010110020f00000009001001900000137b0000c13d00000c0601000041000000000010043f0000000f01000029000000040010043f000000110100002900000a0b0000013d0000001002000029000000000102041a00000c5b0110019700000c5c011001c7000000000012041b0000016401000039000000000101041a000000100110027000000bfb011001970000000002000411000000000012004b000011740000c13d0000000001000031000000140110008c000011740000413d0000000201100367000000000101043b000d006000100278000000000100041400000bb90010009c00000bb901008041000000c0011002100000000d0200002900000bfb0720019700000c1c011001c70000800d02000039000000040300003900000c5d0400004100000011050000290000000f060000290000142e0000013d000000800230008a000f00000002001d00000c2b072001970000000a080000290000118f0000013d00000020088000390000000002a50019000000000002043500000040029000390000000000b2043500000000009804350000002004400039000000100040006c000003d10000813d000000000241034f000000000202043b00000c090020009c000014310000213d000000110a20002900000c2b02a00197000000000572013f000000000072004b000000000200001900000c2b020040410000000f00a0006c000000000900001900000c2b0900204100000c2b0050009c000000000209c019000000000002004b000014310000c13d000000400900043d00000c140090009c000006000000213d0000006002900039000000400020043f000000200ba000390000000002b1034f000000000202043b00000bfb0020009c000014310000213d00000000022904360000002005b00039000000000551034f000000000505043b00000000005204350000004002b00039000000000221034f000000000202043b00000c090020009c000014310000213d000000000ca200190000003f02c00039000000000032004b000000000500001900000c2b0500804100000c2b02200197000000000002004b000000000a00001900000c2b0a00404100000c2b0020009c000000000a05c01900000000000a004b000014310000c13d000000200dc000390000000002d1034f000000000a02043b00000c0900a0009c000006000000213d0000001f02a0003900000c7b022001970000003f0220003900000c7b02200197000000400b00043d000000000e2b00190000000000be004b0000000002000039000000010200403900000c0900e0009c000006000000213d0000000100200190000006000000c13d0000004002c000390000004000e0043f0000000005ab043600000000022a0019000000000032004b000014310000213d0000002002d00039000000000221034f00000c7b0fa00198000000000df50019000011e40000613d000000000e02034f000000000c05001900000000e60e043c000000000c6c04360000000000dc004b000011e00000c13d0000001f0ca00190000011860000613d0000000002f2034f0000000306c00210000000000c0d0433000000000c6c01cf000000000c6c022f000000000202043b0000010006600089000000000262022f00000000026201cf0000000002c2019f00000000002d0435000011860000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000011f90000c13d000008ad0000013d000000800230008a000f00000002001d00000c2b072001970000000e080000290000120c0000013d00000020088000390000000002a50019000000000002043500000040029000390000000000b2043500000000009804350000002004400039000000100040006c0000096c0000813d000000000241034f000000000202043b00000c090020009c000014310000213d000000110a20002900000c2b02a00197000000000572013f000000000072004b000000000200001900000c2b020040410000000f00a0006c000000000900001900000c2b0900204100000c2b0050009c000000000209c019000000000002004b000014310000c13d000000400900043d00000c140090009c000006000000213d0000006002900039000000400020043f000000200ba000390000000002b1034f000000000202043b00000bfb0020009c000014310000213d00000000022904360000002005b00039000000000551034f000000000505043b00000000005204350000004002b00039000000000221034f000000000202043b00000c090020009c000014310000213d000000000ca200190000003f02c00039000000000032004b000000000500001900000c2b0500804100000c2b02200197000000000002004b000000000a00001900000c2b0a00404100000c2b0020009c000000000a05c01900000000000a004b000014310000c13d000000200dc000390000000002d1034f000000000a02043b00000c0900a0009c000006000000213d0000001f02a0003900000c7b022001970000003f0220003900000c7b02200197000000400b00043d000000000e2b00190000000000be004b0000000002000039000000010200403900000c0900e0009c000006000000213d0000000100200190000006000000c13d0000004002c000390000004000e0043f0000000005ab043600000000022a0019000000000032004b000014310000213d0000002002d00039000000000221034f00000c7b0fa00198000000000df50019000012610000613d000000000e02034f000000000c05001900000000e60e043c000000000c6c04360000000000dc004b0000125d0000c13d0000001f0ca00190000012030000613d0000000002f2034f0000000306c00210000000000c0d0433000000000c6c01cf000000000c6c022f000000000202043b0000010006600089000000000262022f00000000026201cf0000000002c2019f00000000002d0435000012030000013d00000c4001000041000000000010044300000011010000290000000400100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c41011001c700008002020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000000001004b000013b80000c13d000000400100043d000000640210003900000c66030000410000000000320435000000440210003900000c6703000041000000000032043500000024021000390000002d0300003900000a750000013d00000010010000290000000501100270000000000100003f000000400100043d000000640210003900000c42030000410000000000320435000000440210003900000c4303000041000000000032043500000024021000390000002e0300003900000a750000013d00000bb90020009c00000bb9020080410000004002200210000000000101043300000bb90010009c00000bb9010080410000006001100210000000000121019f00000c46011001c700000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0540018f0000002004400190000012af0000613d000000000601034f0000000007000019000000006806043c0000000007870436000000000047004b000012ab0000c13d000000000005004b000012bc0000613d000000000641034f0000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000100000003001f00030000000103550000000100200190000012ea0000613d000000000100043d000000200030008c000012ea0000413d000000000001004b000012ea0000613d000000100100002900000000010104330000000e02000029000000000202043300000bfb022001970000012d03000039000000000403041a00000c3604400197000000000424019f000000000043041b000000010010008c0000048b0000213d00000c4a04400197000000a00110021000000c1201100197000000000114019f000000000013041b000000400100043d000000000221043600000010030000290000000003030433000000010030008c0000048b0000213d000000000032043500000bb90010009c00000bb9010080410000004001100210000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c01011001c70000800d02000039000000010300003900000c4b040000410000142e0000013d000000400100043d000000200210003900000c45040000410000000000420435000000240410003900000c480500004100000000005404350000002404000039000000000041043500000c140010009c000006000000213d0000006004100039000000400040043f0000001104000029000000040040008c000014330000c13d0000000001020433000000000010043f0000145e0000013d000000100200002900000bb90020009c00000bb902008041000000400220021000000bb90010009c00000bb901008041000000c001100210000000000121019f00000c1f011001c700000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f00000020074001900000001005700029000013170000613d000000000801034f0000001009000029000000008a08043c0000000009a90436000000000059004b000013130000c13d000000000006004b000013240000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000005000415000000160550008a00000005055002100000000100200190000014ea0000613d0000001f01400039000000600210018f0000001001200029000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f000000200030008c000014310000413d000000100200002900000000020204330000000503500270000000000302001f00000c4c0020009c000014fa0000c13d00000c4001000041000000000010044300000011010000290000000400100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c41011001c700008002020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000000001004b0000127f0000613d00000c4c01000041000000000201041a00000c36022001970000001105000029000000000252019f000000000021041b000000000100041400000bb90010009c00000bb901008041000000c00110021000000c1c011001c70000800d02000039000000020300003900000c55040000412ede2ecf0000040f0000000100200190000014310000613d0000000f010000290000000001010433000000000001004b000004bb0000613d000000400100043d001000000001001d00000c140010009c000006000000213d00000010030000290000006001300039000000400010043f000000400130003900000c56020000410000000000210435000000200130003900000c57020000410000000000210435000000270100003900000000001304350000000f01000029000000000201043300000000010004140000001103000029000000040030008c0000178e0000c13d00000001020000390000000103000031000017a10000013d0000000c01000029000000000101041a000b00000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000b02000029000000c0022002700003ffff00200193000000000101043b000000000201041a000000030020006c000020d70000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d00000003020000290000000102200210000000000101043b00000000012100190000001102000029000000030020008c000015030000613d000000000201041a000000000002004b000015030000613d00000c0601000041000000000010043f0000000f01000029000000040010043f0000001101000029000008810000013d000000000003004b0000000004000019000013b10000613d0000000004010433000000030530021000000c7e0550027f00000c7e05500167000000000454016f0000000103300210000000000334019f000013e70000013d00000c4c01000041000000000201041a00000c360220019700000011022001af000000000021041b000000000100001900002edf0001042e00000c5101000041000000000101041a000000ff00100190000014700000c13d00000c52010000410000000e0200002900000000001204350000000005000415000000150550008a000000050550021000000000010004140000001102000029000000040020008c000014760000c13d0000002004000039000014a40000013d00000c28040000410000002005000039000000010760008a000000050770027000000c290770009a00000000082500190000000008080433000000000084041b00000020055000390000000104400039000000000074004b000013d40000c13d000000000036004b000013e50000813d0000000306300210000000f80660018f00000c7e0660027f00000c7e0660016700000000052500190000000005050433000000000565016f000000000054041b000000010330021000000001033001bf00000c2604000041000000000034041b0000002004000039000000400300043d0000000004430436000000000202043300000000002404350000000006b2016f0000001f0520018f0000004004300039000000000041004b000014030000813d000000000006004b000013ff0000613d00000000085100190000000007540019000000200770008a000000200880008a0000000009670019000000000a680019000000000a0a04330000000000a90435000000200660008c000013f90000c13d000000000005004b000014190000613d00000000070400190000140f0000013d0000000007640019000000000006004b0000140c0000613d00000000080100190000000009040019000000008a0804340000000009a90436000000000079004b000014080000c13d000000000005004b000014190000613d00000000016100190000000305500210000000000607043300000000065601cf000000000656022f00000000010104330000010005500089000000000151022f00000000015101cf000000000161019f00000000001704350000001f012000390000000001b1016f00000000024200190000000000020435000000400110003900000bb90010009c00000bb901008041000000600110021000000bb90030009c00000bb9030080410000004002300210000000000121019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000121019f00000c1c011001c70000800d02000039000000010300003900000c2a040000412ede2ecf0000040f0000000100200190000004bb0000c13d000000000100001900002ee00001043000000bb90020009c00000bb9020080410000004002200210000000000101043300000bb90010009c00000bb9010080410000006001100210000000000121019f00000c46011001c700000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0540018f00000020044001900000144c0000613d000000000601034f0000000007000019000000006806043c0000000007870436000000000047004b000014480000c13d000000000005004b000014590000613d000000000641034f0000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000100000003001f00030000000103550000000100200190000012c50000613d000000000100043d000000200030008c000012c50000413d000000000001004b000012c50000613d00000010010000290000000001010433000000010010008c0000048b0000213d0000000001000019000012c70000c13d000000400200043d001100000002001d00000c4901000041000000000012043500000004012000390000000e020000292ede22fe0000040f000014f00000013d00000c40010000410000000000100443000000110100002900000004001004430000000001000414000012740000013d0000000e0200002900000bb90020009c00000bb902008041000000400220021000000bb90010009c00000bb901008041000000c001100210000000000121019f00000c1f011001c700000011020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f00000020074001900000000e05700029000014900000613d000000000801034f0000000e09000029000000008a08043c0000000009a90436000000000059004b0000148c0000c13d000000000006004b0000149d0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000005000415000000140550008a00000005055002100000000100200190000014ea0000613d0000001f01400039000000600110018f0000000e0110002900000c090010009c000006000000213d000000400010043f000000200030008c000014310000413d0000000e0200002900000000020204330000000503500270000000000302001f00000c4c0020009c000014fa0000c13d00000c4001000041000000000010044300000011010000290000000400100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c41011001c700008002020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000000001004b0000127f0000613d00000c4c01000041000000000201041a00000c36022001970000001105000029000000000252019f000000000021041b000000000100041400000bb90010009c00000bb901008041000000c00110021000000c1c011001c70000800d02000039000000020300003900000c55040000412ede2ecf0000040f0000000100200190000014310000613d000000400100043d001000000001001d00000c140010009c000006000000213d00000010030000290000006001300039000000400010043f000000400130003900000c56020000410000000000210435000000200130003900000c5702000041000000000021043500000027010000390000000000130435000000800200043d00000000010004140000001103000029000000040030008c000018760000c13d00000001020000390000000103000031000018850000013d000000400200043d001100000002001d00000bba01000041000000000012043500000004012000392ede2a010000040f0000001102000029000000000121004900000bb90010009c00000bb901008041000000600110021000000bb90020009c00000bb9020080410000004002200210000000000121019f00002ee000010430000000640210003900000c53030000410000000000320435000000440210003900000c540300004100000000003204350000002402100039000000290300003900000a750000013d0000000101100039000000000101041a00000c23001001980000150f0000c13d00000c7001000041000000000010043f0000000f01000029000000040010043f0000000301000029000000240010043f00000c5f0100004100002ee0000104300000000c010000290000000202100039000000000102041a000c00000002001d000000000002041b000000000001004b0000156d0000c13d0000000e0000006b000016480000c13d000000020100036700110000000000350000016402000039000000000202041a000000100220027000000bfb022001970000000003000411000000000023004b000015270000c13d0000001102000029000000140220008c000015270000413d000000000221034f000000000202043b00040060002002780000000607100360000000400400043d0000004002000039000000000524043600000040024000390000000d03000029000000000032043500000c7b083001980000001f0930018f000c00000004001d000000600440003900000000068400190000153a0000613d000000000307034f000000000a040019000000003203043c000000000a2a043600000000006a004b000015360000c13d000000000009004b000015470000613d000000000287034f0000000303900210000000000706043300000000073701cf000000000737022f000000000202043b0000010003300089000000000232022f00000000023201cf000000000272019f00000000002604350000000d03000029000000000234001900000000000204350000001f0230003900000c7b0220019700000000042400190000000c0240006a00000000002504350000000e030000290000000000340435000d00000004001d0000000502400029000000200c200039000000000003004b0000171d0000c13d000000040100002900000bfb071001970000000c0200002900000000012c004900000bb90010009c00000bb901008041000000600110021000000bb90020009c00000bb9020080410000004002200210000000000121019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000121019f00000c1c011001c70000800d02000039000000040300003900000c6f040000410000000f0500002900000003060000290000142e0000013d00000003021000c9001100000002001d000000030220011a000000000021004b000006fd0000c13d0000000c01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000301043b0000001104300029000000000043004b000015160000813d000900000004001d000015970000013d0000001101000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000501043b0000001102000029000000000002041b0000000a030000290000000904000029000000000005041b0000000303300039000000000043004b000015160000813d000000000003041b0000000101300039000000000001041b0000000205300039000000000105041a000000010210019000000001061002700000007f0660618f0000001f0060008c00000000010000390000000101002039000000000012004b0000032b0000c13d000000000006004b000015940000613d0000001f0060008c000015930000a13d000b00000006001d000a00000003001d001100000005001d000000000050043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000201043b0000000b010000290000001f01100039000000050110027000000000011200190000000102200039000000000012004b000015830000813d000000000002041b0000000102200039000000000012004b000015bd0000413d000015830000013d0000003f0430008a000c00000004001d000b0c2b0040019b001000070000002d000015d00000013d00000010020000290000002002200039001000000002001d000000110400002900000000004204350000000f0200002900000020022000390000000d0020006c000004080000813d000f00000002001d000000000221034f000000000202043b00000c090020009c000014310000213d0000000e0920002900000c2b029001970000000b0420014f0000000b0020006c000000000200001900000c2b020040410000000c0090006c000000000500001900000c2b0500804100000c2b0040009c000000000205c019000000000002004b000014310000c13d0000002002900039000000000221034f000000000202043b00000c090020009c000006000000213d00000005052002100000003f0450003900000c1104400197000000400700043d0000000006470019001100000007001d000000000076004b0000000004000039000000010400403900000c090060009c000006000000213d0000000100400190000006000000c13d000000400060043f00000011040000290000000000240435000000400b900039000000000cb5001900000000003c004b000014310000213d0000000000cb004b000015c70000813d000000110d000029000016060000013d000000200dd000390000000002e4001900000000000204350000000000fd0435000000200bb000390000000000cb004b000015c70000813d0000000002b1034f000000000202043b00000c090020009c000014310000213d00000000029200190000005f04200039000000000034004b000000000500001900000c2b0500804100000c2b04400197000000000004004b000000000600001900000c2b0600404100000c2b0040009c000000000605c019000000000006004b000014310000c13d0000004005200039000000000451034f000000000e04043b00000c0900e0009c000006000000213d0000001f04e0003900000c7b044001970000003f0440003900000c7b04400197000000400f00043d00000000064f00190000000000f6004b0000000004000039000000010400403900000c090060009c000006000000213d0000000100400190000006000000c13d0000006002200039000000400060043f0000000004ef043600000000022e0019000000000032004b000014310000213d0000002002500039000000000821034f00000c7b07e0019800000000057400190000163a0000613d000000000608034f0000000002040019000000006a06043c0000000002a20436000000000052004b000016360000c13d0000001f02e00190000015ff0000613d000000000678034f0000000302200210000000000705043300000000072701cf000000000727022f000000000606043b0000010002200089000000000626022f00000000022601cf000000000272019f0000000000250435000015ff0000013d0000000003000019000016520000013d000000010160021000000001011001bf0000000a030000290000000905000029000000000015041b00000001033000390000000e0030006c000015180000813d000a00000003001d000000050130021000000010011000290000000201100367000000000501043b00000008010000290000000001100079000000830110008a00000c2b0250019700000c2b03100197000000000432013f000000000032004b000000000200001900000c2b02004041000b00000005001d000000000015004b000000000100001900000c2b0100804100000c2b0040009c000000000201c019000000000002004b000014310000c13d0000000c01000029000000000101041a001100000001001d00000c090010009c000006000000213d000000110100002900000001011000390000000c02000029000000000012041b000000000020043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d0000000b030000290000001002300029000000000101043b0000000203000367000000000423034f000000000404043b00000bfb0040009c000014310000213d000000110500002900000003055000c90000000001510019000000000501041a00000c3605500197000000000445019f000000000041041b0000002004200039000000000443034f000000000404043b0000000105100039000000000045041b0000004004200039000000000543034f000000000400003100000000062400490000001f0660008a000000000505043b00000c2b0750019700000c2b08600197000000000987013f000000000087004b000000000700001900000c2b07004041000000000065004b000000000600001900000c2b0600804100000c2b0090009c000000000706c019000000000007004b000014310000c13d0000000002250019000000000323034f000000000303043b001100000003001d00000c090030009c000014310000213d000000110340006a000000200620003900000c2b0230019700000c2b04600197000000000524013f000000000024004b000000000200001900000c2b02004041000b00000006001d000000000036004b000000000300001900000c2b0300204100000c2b0050009c000000000203c019000000000002004b000014310000c13d0000000205100039000000000105041a000000010010019000000001031002700000007f0330618f0000001f0030008c00000000020000390000000102002039000000000121013f00000001001001900000032b0000c13d000000200030008c0000001104000029000900000005001d000016e40000413d000700000003001d000000000050043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d00000011040000290000001f024000390000000502200270000000200040008c0000000002004019000000000301043b00000007010000290000001f01100039000000050110027000000000011300190000000002230019000000000012004b0000000905000029000016e40000813d000000000002041b0000000102200039000000000012004b000016e00000413d000000200040008c000017000000413d000000000050043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000110600002900000c7b02600198000000000101043b0000170f0000613d000000020400036700000000030000190000000b070000290000000005730019000000000554034f000000000505043b000000000051041b00000001011000390000002003300039000000000023004b000016f70000413d000017110000013d000000000004004b0000000a030000290000000b060000290000170d0000613d000000030140021000000c7e0110027f00000c7e011001670000000202600367000000000202043b000000000112016f0000000102400210000000000121019f0000164e0000013d00000000010000190000164e0000013d00000000030000190000000b07000029000000000062004b0000164a0000813d0000000302600210000000f80220018f00000c7e0220027f00000c7e0220016700000000037300190000000203300367000000000303043b000000000223016f000000000021041b0000164a0000013d0000001103000029000000080230006a000000830520008a0000001f0630008a00000c2b075001970000000d09000029000000000a000019000000100b0000290000172f0000013d0000001f03d0003900000c7b0330019700000000042d00190000000000040435000000000c230019000000200bb00039000000010aa000390000000e00a0006c000015560000813d0000000d02c0006a000000200220008a000000200990003900000000002904350000000002b1034f000000000302043b00000c2b02300197000000000872013f000000000072004b000000000200001900000c2b02004041000000000053004b000000000d00001900000c2b0d00804100000c2b0080009c00000000020dc019000000000002004b000014310000c13d000000100d3000290000000002d1034f000000000202043b00000bfb0020009c000014310000213d00000000022c04360000002003d00039000000000331034f000000000303043b00000000003204350000000002d600490000004003d00039000000000331034f000000000303043b00000c2b0820019700000c2b0e300197000000000f8e013f00000000008e004b000000000800001900000c2b08004041000000000023004b000000000200001900000c2b0200804100000c2b00f0009c000000000802c019000000000008004b000014310000c13d0000000002d30019000000000321034f000000000d03043b00000c0900d0009c000014310000213d00000020032000390000001102d00069000000000023004b000000000800001900000c2b0800204100000c2b0220019700000c2b0e300197000000000f2e013f00000000002e004b000000000200001900000c2b0200404100000c2b00f0009c000000000208c019000000000002004b000014310000c13d0000004002c00039000000600400003900000000004204350000006002c000390000000000d20435000000000831034f00000c7b03d001980000008002c00039000000000e320019000017800000613d000000000f08034f000000000c02001900000000f40f043c000000000c4c04360000000000ec004b0000177c0000c13d0000001f0cd00190000017260000613d000000000338034f0000000304c0021000000000080e043300000000084801cf000000000848022f000000000303043b0000010004400089000000000343022f00000000034301cf000000000383019f00000000003e0435000017260000013d0000000e0300002900000bb90030009c00000bb903008041000000400330021000000bb90020009c00000bb9020080410000006002200210000000000232019f00000bb90010009c00000bb901008041000000c001100210000000000112019f00000011020000292ede2ed90000040f000000010220018f0003000000010355000000600110027000010bb90010019d00000bb903100197000000000003004b000017af0000c13d00000060010000390000000001010433000000000002004b0000188b0000613d000000000001004b000004bb0000c13d00000c40010000410000000000100443000000110100002900000004001004430000000001000414000018d80000013d00000c090030009c000006000000213d0000001f0130003900000c7b011001970000003f0110003900000c7b0700004100000c7b04100197000000400100043d0000000004410019000000000014004b0000000005000039000000010500403900000c090040009c000006000000213d0000000100500190000006000000c13d000000400040043f000000000631043600000000047301700000001f0530018f000b00000006001d00000000034600190000000306000367000017cd0000613d000000000706034f0000000b08000029000000007907043c0000000008980436000000000038004b000017c90000c13d000000000005004b000017a40000613d000000000446034f0000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f0000000000430435000017a40000013d0000000004000411000000400800043d000000640580003900000080060000390000000000650435000000440580003900000c2d06000041000000000065043500000bfc0500004100000000005804350000008405800039000000000035043500000bfb054001970000002404800039000f00000005001d0000000000540435000000000400041000000bfb054001970000000404800039000e00000005001d000000000054043500000c7b063001980000001f0730018f001100000008001d000000a4048000390000000005640019000017fc0000613d000000000801034f0000000009040019000000008a08043c0000000009a90436000000000059004b000017f80000c13d00100bfb0020019b000000000007004b0000180a0000613d000000000161034f0000000302700210000000000605043300000000062601cf000000000626022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000161019f00000000001504350000000001340019000000000001043500000000010004140000001002000029000000040020008c000018150000c13d0000000103000031000000200030008c00000020040000390000000004034019000018460000013d0000001f0230003900000c7b0220019700000bfe0020009c00000bfe020080410000006002200210000000110300002900000bb90030009c00000bb9030080410000004003300210000000000232019f00000bb90010009c00000bb901008041000000c001100210000000000112019f00000c2e0110009a00000010020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f00000020074001900000001105700029000018350000613d000000000801034f0000001109000029000000008a08043c0000000009a90436000000000059004b000018310000c13d000000000006004b000018420000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f000300000001035500000001002001900000186a0000613d0000001f01400039000000600210018f0000001101200029000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f000000200030008c000014310000413d00000011020000290000000002020433000000000002004b0000000003000039000000010300c039000000000032004b000014310000c13d000000000002004b000018c90000c13d000000640210003900000c2d03000041000000000032043500000044021000390000000f03000029000000000032043500000024021000390000000e03000029000000000032043500000c040200004100000000002104350000000402100039000000100300002900000a7a0000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000018710000c13d000008ad0000013d00000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb901008041000000c001100210000000000121019f00000c58011001c700000011020000292ede2ed90000040f000000010220018f0003000000010355000000600110027000010bb90010019d00000bb903100197000000000003004b0000189e0000c13d00000060010000390000000001010433000000000002004b000018d10000c13d000000000001004b000018950000c13d000000400200043d001100000002001d00000bba010000410000000000120435000000040120003900000010020000292ede22a90000040f000014f00000013d0000000b0200002900000bb90020009c00000bb902008041000000400220021000000bb90010009c00000bb9010080410000006001100210000000000121019f00002ee00001043000000c090030009c000006000000213d0000001f0130003900000c7b011001970000003f0110003900000c7b04100197000000400100043d0000000004410019000000000014004b0000000005000039000000010500403900000c090040009c000006000000213d0000000100500190000006000000c13d000000400040043f000000000631043600000c7b043001980000001f0530018f000b00000006001d00000000034600190000000306000367000018bb0000613d000000000706034f0000000b08000029000000007907043c0000000008980436000000000038004b000018b70000c13d000000000005004b000018880000613d000000000446034f0000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f0000000000430435000018880000013d0000016402000039000000000202041a0011ffff00200194000019420000c13d00000c6c01000041000000000010043f00000c1f0100004100002ee000010430000000000001004b000004bb0000c13d00000c4001000041000000000010044300000011010000290000000400100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c41011001c700008002020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000000001004b000004bb0000c13d000000400100043d000000440210003900000c6503000041000000000032043500000024021000390000001d03000039000000000032043500000bba02000041000000000021043500000004021000390000002003000039000000000032043500000bb90010009c00000bb901008041000000400110021000000c07011001c700002ee0000104300000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000101041a000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000000201041a0000000c0020006c000020d70000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000a01100029000c00000001001d000000000101041a000000000001004b00001b6d0000c13d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c1c011001c70000800d02000039000000040300003900000c200400004100000011050000290000000d0600002900000006070000290000142e0000013d0000000002000411000c00000002001d000000fb02000039000000000202041a000000140530008c00001aa30000413d0000016404000039000000000404041a000000100440027000000bfb044001970000000006000411000000000046004b000000000406001900001aa40000c13d000000000351034f000000000303043b0000006004300270000000000305001900001aa40000013d000000100220027000000bfb022001970000000003000411000000000023004b0000194d0000c13d0000000002000031000000140220008c0000194d0000413d0000000202200367000000000202043b000d0060002002780000002002100039000000600300003900000000003204350000000a0300002900000000030304330000000504300210000000000541001900000080041000390000000000340435000000a008500039000000000003004b000019730000c13d000000200d00008a000000000328004900000040041000390000000000340435000000800300043d00000000043804360000000006d3016f0000001f0530018f000000a10040008c000019c00000413d000000000006004b0000196e0000613d000000000854001900000080075001bf000000200880008a0000000009680019000000000a670019000000000a0a04330000000000a90435000000200660008c000019680000c13d000000000005004b000019d60000613d000000a0060000390000000007040019000019cc0000013d00000000050000190000000a06000029000000200d00008a0000198a0000013d0000000009b90019000000030aa00210000000000b0c0433000000000bab01cf000000000bab022f0000000009090433000001000aa000890000000009a9022f0000000009a901cf0000000009b9019f00000000009c0435000000000987001900000000000904350000001f077000390000000007d7016f00000000088700190000000105500039000000000035004b0000195a0000813d0000000007180049000000a00770008a000000200440003900000000007404350000002006600039000000000706043300000000a907043400000bfb099001970000000009980436000000000a0a04330000000000a90435000000400770003900000000070704330000004009800039000000600a0000390000000000a90435000000600a800039000000009707043400000000007a0435000000000bd7016f0000001f0a70018f0000008008800039000000000089004b000019b30000813d00000000000b004b000019ae0000613d000000000da90019000000000ca80019000000200cc0008a000000200dd0008a000000000ebc0019000000000fbd0019000000000f0f04330000000000fe0435000000200bb0008c000019a80000c13d00000000000a004b000000200d00008a000019820000613d000000000c080019000019780000013d000000000cb8001900000000000b004b000019bc0000613d000000000d090019000000000e08001900000000df0d0434000000000efe04360000000000ce004b000019b80000c13d00000000000a004b000000200d00008a000019770000c13d000019820000013d0000000007640019000000000006004b000019c90000613d000000a0080000390000000009040019000000008a0804340000000009a90436000000000079004b000019c50000c13d000000000005004b000019d60000613d000000a0066000390000000305500210000000000807043300000000085801cf000000000858022f00000000060604330000010005500089000000000656022f00000000055601cf000000000585019f00000000005704350000000005430019000000000005043500000000041400490000001f0330003900000c7b0330019700000000034300190000000d0400002900000bfb064001970000006004100039000400000006001d0000000000640435000000200430008a00000000004104350000001f0330003900000c7b043001970000000003140019000000000043004b0000000004000039000000010400403900000c090030009c000006000000213d0000000100400190000006000000c13d000000400030043f00000bb90020009c00000bb9020080410000004002200210000000000101043300000bb90010009c00000bb9010080410000006001100210000000000121019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c1c011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000f00000001001d000000400100043d001000000001001d00000c2f010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d00000010020000290000002002200039000000000101043b000e00000002001d000000000012043500000c30010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000100400002900000080024000390000000f030000290000000000320435000000600240003900000000030004100000000000320435000000400240003900000000001204350000008001000039000000000014043500000c310040009c000006000000213d0000001002000029000000a001200039000000400010043f0000000e0100002900000bb90010009c00000bb9010080410000004001100210000000000202043300000bb90020009c00000bb9020080410000006002200210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c1c011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000500000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000300000001001d000000000101041a00000c320010019800001f0b0000c13d000000090200002900020c3f0020019b00000c340110019700000002011001af0000000302000029000000000012041b000000400200043d00000c130020009c000006000000213d0000004003200039000000400030043f000000200320003900000000000304350000000000020435000000400300043d00000c130030009c000006000000213d0000004002300039000000400020043f0000012d02000039000000000502041a00000bfb025001970000000004230436000000a003500270000000ff0330018f000000020030008c0000048b0000813d0000000000340435000000000002004b00001a7f0000c13d000000400300043d00000c130030009c000006000000213d000000fb02000039000000000202041a0000004004300039000000400040043f00000bfb0220019700000000032304360000000000030435000000000300001900000003060000290000000304600039000000000504041a00000c3505500197000000000252019f000000a003300210000000000232019f000000000024041b0000000102600039000000000302041a00000c360330019700000004033001af000000000032041b0000001102000029000000d00220021000000c6901100197000000000121019f000000000016041b00000c0d010000410000000000100443000000080100002900110c090010019c00001f150000c13d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00110c090010019b000800110000002d00001f240000013d0000000004000411000000400800043d000000640580003900000080060000390000000000650435000000440580003900000c2d06000041000000000065043500000bfc0500004100000000005804350000008405800039000000000035043500000bfb054001970000002404800039000f00000005001d0000000000540435000000000400041000000bfb054001970000000404800039000d00000005001d000000000054043500000c7b063001980000001f0730018f001100000008001d000000a404800039000000000564001900001ac40000613d000000000801034f0000000009040019000000008a08043c0000000009a90436000000000059004b00001ac00000c13d00100bfb0020019b000000000007004b00001ad20000613d000000000161034f0000000302700210000000000605043300000000062601cf000000000626022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000161019f00000000001504350000000001340019000000000001043500000000010004140000001002000029000000040020008c00001add0000c13d0000000103000031000000200030008c0000002004000039000000000403401900001b0e0000013d0000001f0230003900000c7b0220019700000bfe0020009c00000bfe020080410000006002200210000000110300002900000bb90030009c00000bb9030080410000004003300210000000000232019f00000bb90010009c00000bb901008041000000c001100210000000000112019f00000c2e0110009a00000010020000292ede2ed40000040f000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f0000002007400190000000110570002900001afd0000613d000000000801034f0000001109000029000000008a08043c0000000009a90436000000000059004b00001af90000c13d000000000006004b00001b0a0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f0003000000010355000000010020019000001b2d0000613d0000001f01400039000000600210018f0000001101200029000000000021004b0000000002000039000000010200403900000c090010009c000006000000213d0000000100200190000006000000c13d000000400010043f000000200030008c000014310000413d00000011020000290000000002020433000000000002004b0000000003000039000000010300c039000000000032004b000014310000c13d000000000002004b00001b390000c13d000000640210003900000c2d03000041000000000032043500000044021000390000000f03000029000000000032043500000024021000390000000d03000029000018640000013d0000001f0530018f00000c0006300198000000400200043d0000000004620019000008ad0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00001b340000c13d000008ad0000013d0000016402000039000000000202041a0011ffff00200194000018cd0000613d000000100220027000000bfb022001970000000003000411000000000023004b00001b480000c13d0000000002000031000000140220008c00001b480000413d0000000202200367000000000202043b000c0060002002780000002002100039000000600300003900000000003204350000000e0300002900000000030304330000000504300210000000000541001900000080041000390000000000340435000000a008500039000000000003004b00001de10000c13d000000000328004900000040041000390000000000340435000000800300043d000000000438043600000c7b063001970000001f0530018f000000a10040008c00001e2b0000413d000000000006004b00001b680000613d000000000854001900000080075001bf000000200880008a0000000009680019000000000a670019000000000a0a04330000000000a90435000000200660008c00001b620000c13d000000000005004b00001e410000613d000000a006000039000000000704001900001e370000013d000000000100041000070bfb0010019b0000000c01000029000100010010003d001000000000001d00001b9e0000013d0000000304400210000000000506043300000000054501cf000000000545022f0000000f0800002900000000080804330000010004400089000000000848022f00000000044801cf000000000454019f00000000004604350000001f0420003900000c7b0440019700000000023200190000000000020435000000400240003900000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb9010080410000004001100210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000121019f00000c1c011001c70000800d02000039000000040300003900000c1d0400004100000011050000290000000d060000292ede2ecf0000040f0000000100200190000014310000613d0000001002000029001000010020003d0000000c01000029000000000101041a000000100010006b000019230000813d0000000c01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000001001100029000a00000001001d000000000101041a000f00000001001d00000c120010019800001b980000c13d000000400200043d00000c130020009c000006000000213d0000004001200039000000400010043f00000001010000390000000003120436000000400400043d00000c140040009c000006000000213d0000006001400039000000400010043f0000004001400039000000600500003900000000005104350000002001400039000000000001043500000000000404350000000000430435000000400400043d000000200140003900000c1505000041000000000051043500000044014000390000000d0500002900000000005104350000002401400039000000110500002900000000005104350000000f01000029000000b001100270000000ff0110018f000000020010008c0000048b0000213d000000640540003900000000001504350000000f0100002900000c16001001980000000001000039000000010100c039000000840540003900000000001504350000008401000039000000000014043500000c170040009c000006000000213d000000c005400039000000400050043f00000c140050009c000006000000213d0000012001400039000000400010043f0000000701000029000000000015043500000100014000390000000000410435000000e00140003900000000000104350000000001020433000000000001004b000020d70000613d00000000005304350000000001000414000200000001001d000000400900043d00000060019000390000000d030000290000000000310435000000400190003900000011030000290000000000310435000000600100003900000000081904360000000701000029000000000018043500000c180090009c000006000000213d0000008001900039000900000001001d000000400010043f0000000101000029000000000101041a000000800110027000000c09011001970000000501100029000400000001001d00000c090010009c000006fd0000213d0000000e010000290000000001010433000000100010006c00001c130000a13d000000100100002900000005011002100000000b0110002900000000010104330000000903000029000900000001001d00001c1b0000013d000000090100002900000c190010009c000006000000213d000000a001900039000000400010043f00000009010000290000000000010435000000400300043d000000200430003900000c1a01000041000300000004001d00000000001404350000002404300039000000a001000039000800000004001d00000000001404350000000009090433000000c401300039000000000091043500000c7b0c9001970000001f0b90018f000000e40a3000390000000000a8004b00001c3b0000813d00000000000c004b00001c370000613d0000000001b800190000000004ba0019000000200440008a000000200710008a0000000001c400190000000006c7001900000000060604330000000000610435000000200cc0008c00001c310000c13d00000000000b004b00001c510000613d00000000040a001900001c470000013d0000000004ca001900000000000c004b00001c440000613d000000000108001900000000070a001900000000160104340000000007670436000000000047004b00001c400000c13d00000000000b004b00001c510000613d0000000008c800190000000301b00210000000000604043300000000061601cf000000000616022f00000000070804330000010001100089000000000717022f00000000011701cf000000000161019f00000000001404350000000001a9001900000000000104350000001f0190003900000c7b011001970000000008a10019000000080180006a000000440430003900000000001404350000000009020433000000000098043500000005019002100000000001180019000000200d100039000000000009004b00001caa0000613d000000000a000019000000000b08001900001c750000013d0000000301f0021000000000040d043300000000041401cf000000000414022f00000000050e04330000010001100089000000000515022f00000000011501cf000000000141019f00000000001d043500000000016c001900000000000104350000001f01c0003900000c7b01100197000000000d610019000000010aa0003900000000009a004b00001caa0000813d00000000018d0049000000200110008a000000200bb0003900000000001b043500000020022000390000000001020433000000006401043400000bfb0440019700000000044d043600000000060604330000000000640435000000400110003900000000010104330000004004d00039000000600500003900000000005404350000006004d0003900000000ec0104340000000000c4043500000c7b04c001970000001f0fc0018f0000008006d0003900000000006e004b00001c9d0000813d000000000004004b00001c990000613d0000000001fe00190000000007f60019000000200d70008a000000200110008a00000000074d0019000000000541001900000000050504330000000000570435000000200440008c00001c930000c13d00000000000f004b00001c6d0000613d000000000d06001900001c630000013d000000000d460019000000000004004b00001ca60000613d00000000010e00190000000007060019000000001501043400000000075704360000000000d7004b00001ca20000c13d00000000000f004b00001c6d0000613d000000000e4e001900001c630000013d0000000801d0006a000000a4023000390000000000120435000000040100002900000c0901100197000000840230003900000000001204350000006401300039000000050200002900000000002104350000000901000029000000006201043400000000052d043600000c7b042001970000001f0720018f000000000056004b00001ccb0000813d000000000004004b00001cc70000613d00000000017600190000000008750019000000200880008a000000200110008a0000000009480019000000000a410019000000000a0a04330000000000a90435000000200440008c00001cc10000c13d000000000007004b00001ce10000613d000000000805001900001cd70000013d0000000008450019000000000004004b00001cd40000613d00000000010600190000000009050019000000001a0104340000000009a90436000000000089004b00001cd00000c13d000000000007004b00001ce10000613d00000000064600190000000301700210000000000408043300000000041401cf000000000414022f00000000060604330000010001100089000000000616022f00000000011601cf000000000141019f00000000001804350000000001520019000000000001043500000000013500490000001f0220003900000c7b022001970000000001120019000000200210008a00000000002304350000001f0110003900000c7b011001970000000004310019000000000014004b0000000001000039000000010100403900000c090040009c000006000000213d0000000100100190000006000000c13d0000000f0100002900000bfb02100197000000400040043f00000000030304330000000001000414000000040020008c00001cfd0000c13d0000000101000031000000010200003900001d0f0000013d000000030400002900000bb90040009c00000bb904008041000000400440021000000bb90030009c00000bb9030080410000006003300210000000000343019f00000bb90010009c00000bb901008041000000c001100210000000000113019f2ede2ecf0000040f000000010220018f0003000000010355000000600110027000010bb90010019d00000bb901100197000000000001004b000f00800000003d000900600000003d00001d3e0000613d00000c090010009c000006000000213d0000001f0310003900000c7b033001970000003f0330003900000c7b03300197000000400400043d0000000003340019000900000004001d000000000043004b0000000004000039000000010400403900000c090030009c000006000000213d0000000100400190000006000000c13d000000400030043f0000000903000029000000000513043600000c7b04100198000f00000005001d0000000003450019000000030500036700001d310000613d000000000605034f0000000f07000029000000006806043c0000000007870436000000000037004b00001d2d0000c13d0000001f0110019000001d3e0000613d000000000445034f0000000301100210000000000503043300000000051501cf000000000515022f000000000404043b0000010001100089000000000414022f00000000011401cf000000000151019f00000000001304350000000001000414000000000002004b00001d860000613d00000009010000290000000001010433000000200010008c00001d8a0000c13d0000000f010000290000000001010433000f00000001001d0000001101000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000d02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000a02000029000000000202041a00000bfb02200197000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000f03000029000000000031041b0000000a01000029000000000201041a000000400100043d000000000031043500000bb90010009c00000bb9010080410000004001100210000000000300041400000bb90030009c00000bb903008041000000c003300210000000000113019f00000c10011001c700000bfb072001970000800d02000039000000040300003900000c1b0400004100001b930000013d00000002020000290000000602200270000000000021004b00001f110000413d0000001101000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000d02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000a02000029000000000202041a00000bfb02200197000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000000010200008a000000000021041b0000000a01000029000000000301041a000000400100043d0000002002000039000000000421043600000009020000290000000002020433000000000024043500000bfb0730019700000c7b052001970000001f0420018f00000040031000390000000f0030006b00001dd40000813d000000000005004b00001dd00000613d0000000f084000290000000006430019000000200660008a000000200880008a0000000009560019000000000a580019000000000a0a04330000000000a90435000000200550008c00001dca0000c13d000000000004004b00001b7e0000613d000000000603001900001b730000013d0000000006530019000000000005004b00001ddd0000613d0000000f080000290000000009030019000000008a0804340000000009a90436000000000069004b00001dd90000c13d000000000004004b00001b7e0000613d000f000f0050002d00001b730000013d00000000050000190000000e0600002900001df70000013d0000000009b90019000000030aa00210000000000b0c0433000000000bab01cf000000000bab022f0000000009090433000001000aa000890000000009a9022f0000000009a901cf0000000009b9019f00000000009c0435000000000987001900000000000904350000001f0770003900000c7b0770019700000000088700190000000105500039000000000035004b00001b540000813d0000000007180049000000a00770008a000000200440003900000000007404350000002006600039000000000706043300000000a907043400000bfb099001970000000009980436000000000a0a04330000000000a90435000000400770003900000000070704330000004009800039000000600a0000390000000000a90435000000600a800039000000009707043400000000007a043500000c7b0b7001970000001f0a70018f0000008008800039000000000089004b00001e1f0000813d00000000000b004b00001e1b0000613d000000000da90019000000000ca80019000000200cc0008a000000200dd0008a000000000ebc0019000000000fbd0019000000000f0f04330000000000fe0435000000200bb0008c00001e150000c13d00000000000a004b00001def0000613d000000000c08001900001de50000013d000000000cb8001900000000000b004b00001e280000613d000000000d090019000000000e08001900000000df0d0434000000000efe04360000000000ce004b00001e240000c13d00000000000a004b00001de40000c13d00001def0000013d0000000007640019000000000006004b00001e340000613d000000a0080000390000000009040019000000008a0804340000000009a90436000000000079004b00001e300000c13d000000000005004b00001e410000613d000000a0066000390000000305500210000000000807043300000000085801cf000000000858022f00000000060604330000010005500089000000000656022f00000000055601cf000000000585019f00000000005704350000000005430019000000000005043500000000041400490000001f0330003900000c7b0330019700000000034300190000000c0400002900000bfb064001970000006004100039000400000006001d0000000000640435000000200430008a00000000004104350000001f0330003900000c7b043001970000000003140019000000000043004b0000000004000039000000010400403900000c090030009c000006000000213d0000000100400190000006000000c13d000000400030043f00000bb90020009c00000bb9020080410000004002200210000000000101043300000bb90010009c00000bb9010080410000006001100210000000000121019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c1c011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000f00000001001d000000400100043d001000000001001d00000c2f010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d00000010020000290000002002200039000000000101043b000d00000002001d000000000012043500000c30010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b000000100400002900000080024000390000000f030000290000000000320435000000600240003900000000030004100000000000320435000000400240003900000000001204350000008001000039000000000014043500000c310040009c000006000000213d0000001002000029000000a001200039000000400010043f0000000d0100002900000bb90010009c00000bb9010080410000004001100210000000000202043300000bb90020009c00000bb9020080410000006002200210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c1c011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000500000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000300000001001d000000000101041a00000c320010019800001f0b0000c13d00000c34021001970000000303000029000000000023041b000000400200043d00000c130020009c000006000000213d0000004003200039000000400030043f000000200320003900000000000304350000000000020435000000400300043d00000c130030009c000006000000213d0000004002300039000000400020043f0000012d02000039000000000502041a00000bfb025001970000000004230436000000a003500270000000ff0330018f000000010030008c0000048b0000213d0000000000340435000000000002004b00001ee70000c13d000000400300043d00000c130030009c000006000000213d000000fb02000039000000000202041a0000004004300039000000400040043f00000bfb0220019700000000032304360000000000030435000000000300001900000003060000290000000304600039000000000504041a00000c3505500197000000000252019f000000a003300210000000000232019f000000000024041b0000000102600039000000000302041a00000c360330019700000004033001af000000000032041b0000001102000029000000d00220021000000c3701100197000000000121019f000000000016041b00000c0d010000410000000000100443000000080100002900110c090010019c00001ffa0000c13d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00110c090010019b000800110000002d000020070000013d00000c3301000041000000000010043f0000000501000029000000040010043f00000c030100004100002ee00001043000000c1e01000041000000000010043f00000c1f0100004100002ee000010430000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00000c0901100197000000110010006b00001f240000813d00000c3801000041000002100000013d0000000801000029000000800110021000000c32011001970000000303000029000000000203041a00000c0f02200197000000000112019f000000000013041b000000070100002900000000010104330000ffff0010008c00001f340000a13d00000c6a01000041000000000010043f00000c1f0100004100002ee000010430000000020010008c00001ff10000413d000b00010000003d00001f3c0000013d0000000b02000029000b00010020003d0000000b0010006b000020dd0000813d0000000b0200002900000005022002100000000602200029000900000002001d00000000020204330000000003020433000000000003004b00001f380000613d0000000b010000290008ffff00100193000f00000000001d0000000f010000290000000501100210000000000112001900000020011000390000000001010433001100000001001d0000000501000029000000000010043f0000016101000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000802000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000f02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000e00000001001d00000011010000290000000021010434000c00000002001d001000000001001d00000c090010009c000006000000213d0000000e01000029000000000101041a000000010010019000000001021002700000007f0220618f000d00000002001d0000001f0020008c00000000020000390000000102002039000000000121013f00000001001001900000032b0000c13d0000000d01000029000000200010008c00001fa70000413d0000000e01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d00000010030000290000001f023000390000000502200270000000200030008c0000000002004019000000000301043b0000000d010000290000001f01100039000000050110027000000000011300190000000002230019000000000012004b00001fa70000813d000000000002041b0000000102200039000000000012004b00001fa30000413d0000001001000029000000200010008c00001fc60000413d0000000e01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000200200008a0000001002200180000000000101043b00001fd40000613d000000010320008a000000050330027000000000033100190000000104300039000000200300003900000011053000290000000005050433000000000051041b00000020033000390000000101100039000000000041004b00001fbe0000c13d00001fd50000013d000000100000006b00001fd20000613d0000001003000029000000030130021000000c7e0110027f00000c7e011001670000000c020000290000000002020433000000000112016f0000000102300210000000000121019f00001fe30000013d000000000100001900001fe30000013d0000002003000039000000100020006c00001fe00000813d00000010020000290000000302200210000000f80220018f00000c7e0220027f00000c7e0220016700000011033000290000000003030433000000000223016f000000000021041b0000001001000029000000010110021000000001011001bf0000000e02000029000000000012041b000000070100002900000000010104330000000b0010006c000020d70000a13d0000000f04000029000f00010040003d0000000902000029000000000202043300000000030204330000000f0030006b00001f470000413d00001f380000013d000000000001004b000020e10000c13d000000400300043d00000c190030009c000006000000213d0000002001300039000000400010043f0000000000030435000020e30000013d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f00000001002001900000201a0000613d000000000101043b00000c0901100197000000110010006b00001f220000413d0000000801000029000000800110021000000c32011001970000000303000029000000000203041a00000c0f02200197000000000112019f000000000013041b000000070100002900000000010104330000ffff0010008c00001f300000213d000000010010008c00000000020000390000000102002039000000020010008c0000219a0000413d000a00010000003d000020200000013d000000000001042f0000000a02000029000a00010020003d0000000a0010006b0000000102000039000021a30000813d0000000100200190000020d70000613d0000000a0200002900000005022002100000000602200029000900000002001d00000000020204330000000003020433000000000003004b0000201b0000613d0000000a010000290008ffff00100193000f00000000001d0000000f010000290000000501100210000000000112001900000020011000390000000001010433001100000001001d0000000501000029000000000010043f0000016101000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000802000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b0000000f02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000000101043b000d00000001001d00000011010000290000000021010434000b00000002001d001000000001001d00000c090010009c000006000000213d0000000d01000029000000000101041a000000010010019000000001021002700000007f0220618f000c00000002001d0000001f0020008c00000000020000390000000102002039000000000121013f00000001001001900000032b0000c13d0000000c01000029000000200010008c0000208d0000413d0000000d01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d00000010030000290000001f023000390000000502200270000000200030008c0000000002004019000000000301043b0000000c010000290000001f01100039000000050110027000000000011300190000000002230019000000000012004b0000208d0000813d000000000002041b0000000102200039000000000012004b000020890000413d0000001001000029000000200010008c000020ac0000413d0000000d01000029000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000014310000613d000000200200008a0000001002200180000000000101043b000020b80000613d000000010320008a000000050330027000000000033100190000000104300039000000200300003900000011053000290000000005050433000000000051041b00000020033000390000000101100039000000000041004b000020a40000c13d000020b90000013d000000100000006b000020c80000613d0000001003000029000000030130021000000c7e0110027f00000c7e011001670000000b020000290000000002020433000000000112016f0000000102300210000000000121019f000020c90000013d0000002003000039000000100020006c000020c40000813d00000010020000290000000302200210000000f80220018f00000c7e0220027f00000c7e0220016700000011033000290000000003030433000000000223016f000000000021041b0000001001000029000000010110021000000001011001bf000020c90000013d00000000010000190000000d02000029000000000012041b000000070100002900000000010104330000000a0010006c000020d70000a13d0000000f04000029000f00010040003d0000000902000029000000000202043300000000030204330000000f0030006b0000202d0000413d0000201b0000013d00000c6b01000041000000000010043f0000003201000039000000040010043f00000c030100004100002ee0000104300000000301000029000000000101041a000000800110027000110c090010019b00000006010000290000000003010433000000050100002900000011020000292ede27400000040f0000000301000029000000000201041a000000400100043d0000004003100039000000a0070000390000000000730435000000800220027000000c090220019700000000022104360000000000020435000000a003100039000000800200043d000000000023043500000c7b052001970000001f0420018f000000c003100039000000a10030008c000021080000413d000000000005004b000021030000613d000000000743001900000080064001bf000000200770008a0000000008570019000000000956001900000000090904330000000000980435000000200550008c000020fd0000c13d000000000004004b0000211d0000613d000000a0050000390000000006030019000021130000013d0000000006530019000000000005004b000021100000613d000000000803001900000000790704340000000008980436000000000068004b0000210c0000c13d000000000004004b0000211d0000613d000000a0055000390000000304400210000000000706043300000000074701cf000000000747022f00000000050504330000010004400089000000000545022f00000000044501cf000000000474019f0000000000460435000000000432001900000000000404350000001f0220003900000c7b0220019700000000023200190000000003120049000000600410003900000000003404350000000a0300002900000000030304330000000000320435000000050430021000000000044200190000002007400039000000000003004b0000214e0000c13d000000800210003900000002030000290000000000320435000000000217004900000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb9010080410000004001100210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000121019f00000c1c011001c70000800d02000039000000030300003900000c3904000041000000050500002900000004060000292ede2ecf0000040f0000000100200190000014310000613d000000400100043d0000000502000029000000000021043500000bb90010009c00000bb901008041000000400110021000000c21011001c700002edf0001042e00000000040000190000000005020019000021630000013d0000000309900210000000000a0b0433000000000a9a01cf000000000a9a022f00000000080804330000010009900089000000000898022f00000000089801cf0000000008a8019f00000000008b0435000000000876001900000000000804350000001f0660003900000c7b0660019700000000077600190000000104400039000000000034004b0000212d0000813d0000000006270049000000200660008a000000200550003900000000006504350000000a060000290000002006600039000a00000006001d0000000006060433000000009806043400000bfb088001970000000008870436000000000909043300000000009804350000004006600039000000000606043300000040087000390000006009000039000000000098043500000060097000390000000086060434000000000069043500000c7b0a6001970000001f0960018f0000008007700039000000000078004b0000218d0000813d00000000000a004b000021890000613d000000000c980019000000000b970019000000200bb0008a000000200cc0008a000000000dab0019000000000eac0019000000000e0e04330000000000ed0435000000200aa0008c000021830000c13d000000000009004b0000215b0000613d000000000b070019000021510000013d000000000ba7001900000000000a004b000021960000613d000000000c080019000000000d07001900000000ce0c0434000000000ded04360000000000bd004b000021920000c13d000000000009004b0000215b0000613d0000000008a80019000021510000013d000000000001004b000021a70000c13d000000400300043d00000c190030009c000006000000213d0000002001300039000000400010043f0000000000030435000021a90000013d0000000301000029000000000101041a000000800110027000110c090010019b00000006010000290000000003010433000000050100002900000011020000292ede27400000040f0000000301000029000000000201041a000000400100043d0000004003100039000000a0070000390000000000730435000000800220027000000c090220019700000000022104360000000000020435000000a003100039000000800200043d000000000023043500000c7b052001970000001f0420018f000000c003100039000000a10030008c000021ce0000413d000000000005004b000021c90000613d000000000743001900000080064001bf000000200770008a0000000008570019000000000956001900000000090904330000000000980435000000200550008c000021c30000c13d000000000004004b000021e30000613d000000a0050000390000000006030019000021d90000013d0000000006530019000000000005004b000021d60000613d000000000803001900000000790704340000000008980436000000000068004b000021d20000c13d000000000004004b000021e30000613d000000a0055000390000000304400210000000000706043300000000074701cf000000000747022f00000000050504330000010004400089000000000545022f00000000044501cf000000000474019f0000000000460435000000000432001900000000000404350000001f0220003900000c7b0220019700000000023200190000000003120049000000600410003900000000003404350000000e0300002900000000030304330000000000320435000000050430021000000000044200190000002007400039000000000003004b000021ff0000c13d00000080021000390000000000020435000000000217004900000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb9010080410000004001100210000000000112019f0000000002000414000021390000013d00000000040000190000000005020019000022140000013d0000000309900210000000000a0b0433000000000a9a01cf000000000a9a022f00000000080804330000010009900089000000000898022f00000000089801cf0000000008a8019f00000000008b0435000000000876001900000000000804350000001f0660003900000c7b0660019700000000077600190000000104400039000000000034004b000021f30000813d0000000006270049000000200660008a000000200550003900000000006504350000000e060000290000002006600039000e00000006001d0000000006060433000000009806043400000bfb088001970000000008870436000000000909043300000000009804350000004006600039000000000606043300000040087000390000006009000039000000000098043500000060097000390000000086060434000000000069043500000c7b0a6001970000001f0960018f0000008007700039000000000078004b0000223e0000813d00000000000a004b0000223a0000613d000000000c980019000000000b970019000000200bb0008a000000200cc0008a000000000dab0019000000000eac0019000000000e0e04330000000000ed0435000000200aa0008c000022340000c13d000000000009004b0000220c0000613d000000000b070019000022020000013d000000000ba7001900000000000a004b000022470000613d000000000c080019000000000d07001900000000ce0c0434000000000ded04360000000000bd004b000022430000c13d000000000009004b0000220c0000613d0000000008a80019000022020000013d0000001f03100039000000000023004b000000000400001900000c2b0400404100000c2b0520019700000c2b03300197000000000653013f000000000053004b000000000300001900000c2b0300204100000c2b0060009c000000000304c019000000000003004b000022630000613d0000000203100367000000000303043b00000c090030009c000022630000213d000000050330021000000000013100190000002001100039000000000021004b000022630000213d000000000001042d000000000100001900002ee00001043000000c2c0010009c000022750000213d000000630010008c000022750000a13d00000002010003670000002402100370000000000202043b0000ffff0020008c000022750000213d0000004403100370000000000303043b00000bfb0030009c000022750000213d0000000401100370000000000101043b000000000001042d000000000100001900002ee0000104300000000043010434000000000132043600000c7b063001970000001f0530018f000000000014004b0000228d0000813d000000000006004b000022890000613d00000000085400190000000007510019000000200770008a000000200880008a0000000009670019000000000a680019000000000a0a04330000000000a90435000000200660008c000022830000c13d000000000005004b000022a30000613d0000000007010019000022990000013d0000000007610019000000000006004b000022960000613d00000000080400190000000009010019000000008a0804340000000009a90436000000000079004b000022920000c13d000000000005004b000022a30000613d00000000046400190000000305500210000000000607043300000000065601cf000000000656022f00000000040404330000010005500089000000000454022f00000000045401cf000000000464019f0000000000470435000000000431001900000000000404350000001f0330003900000c7b023001970000000001210019000000000001042d000000200300003900000000033104360000000042020434000000000023043500000c7b062001970000001f0520018f0000004001100039000000000014004b000022c20000813d000000000006004b000022be0000613d00000000085400190000000007510019000000200770008a000000200880008a0000000009670019000000000a680019000000000a0a04330000000000a90435000000200660008c000022b80000c13d000000000005004b000022d80000613d0000000007010019000022ce0000013d0000000007610019000000000006004b000022cb0000613d00000000080400190000000009010019000000008a0804340000000009a90436000000000079004b000022c70000c13d000000000005004b000022d80000613d00000000046400190000000305500210000000000607043300000000065601cf000000000656022f00000000040404330000010005500089000000000454022f00000000045401cf000000000464019f0000000000470435000000000412001900000000000404350000001f0220003900000c7b022001970000000001120019000000000001042d0000001f0220003900000c7b022001970000000001120019000000000021004b0000000002000039000000010200403900000c090010009c000022ea0000213d0000000100200190000022ea0000c13d000000400010043f000000000001042d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000000003101043400000bfb0110019700000000011204360000000002030433000000020020008c000022f80000813d0000000000210435000000000001042d00000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee000010430000000003202043400000bfb0220019700000000022104360000000003030433000000020030008c000023070000813d00000000003204350000004001100039000000000001042d00000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee0000104300000ffff0220018f000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f00000001002001900000231b0000613d000000000101043b000000000001042d000000000100001900002ee00001043000000bfb02200197000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f00000001002001900000232b0000613d000000000101043b000000000001042d000000000100001900002ee0000104300003000000000002000000000201041a000000010320019000000001062002700000007f0660618f0000001f0060008c00000000040000390000000104002039000000000043004b0000236c0000c13d000000400500043d0000000004650436000000000003004b000023570000613d000100000004001d000300000006001d000200000005001d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000023780000613d0000000306000029000000000006004b0000235d0000613d000000000201043b0000000001000019000000020500002900000001070000290000000003170019000000000402041a000000000043043500000001022000390000002001100039000000000061004b0000234f0000413d0000235f0000013d00000c7d012001970000000000140435000000000006004b000000200100003900000000010060390000235f0000013d000000000100001900000002050000290000003f0110003900000c7b021001970000000001520019000000000021004b0000000002000039000000010200403900000c090010009c000023720000213d0000000100200190000023720000c13d000000400010043f0000000001050019000000000001042d00000c6b01000041000000000010043f0000002201000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000000000100001900002ee000010430000c000000000002000c00000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000025260000613d000000000101043b000000000101041a00000c24001001980000238e0000613d0000000201000039000000000001042d00000c2300100198000023920000613d0000000101000039000000000001042d00000c3200100198000025400000613d000b00000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000025260000613d0000000b02000029000000c0022002700009ffff00200193000000000101043b000000000201041a000000090020006c000025280000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f00000001002001900000000b03000029000025260000613d00000009020000290008000100200218000000000101043b00000008011000290000000101100039000000000201041a000000800130027000000c0903100197000200000002001d00000c0901200197000a00000003001d0000000001310019000b00000001001d00000c7f0010009c0000252e0000813d00000c0d010000410000000000100443000000000100041400000bb90010009c00000bb901008041000000c00110021000000c0e011001c70000800b020000392ede2ed40000040f0000000100200190000025460000613d000000000201043b0000000b0020006b000023d40000813d0000000401000039000000000001042d0000000201000029000000400110027000000c09011001970000000a0110002900000c090010009c0000252e0000213d000000000021004b00000000010000190000238d0000213d0000000201000029000000d0011002700001ffff00100194000023ea0000613d0000000201000029000000800110027000000c09011001970000000a0110002900000c090010009c0000252e0000213d000000000021004b00000000010000190000238d0000213d0000000c01000029000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000025260000613d000000000101043b000000000101041a000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000025260000613d000000000101043b000000000201041a000000090020006c000025280000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000025260000613d000000000101043b000000080b10002900000000010b041a000500000001001d000000000001004b000025150000613d000080100c000039000000000d000019000400000000001d000300000000001d00060000000b001d000024270000013d0000000301000029000300010010003e0000252e0000613d000000010dd000390000000500d0006c000025170000813d00000000010b041a000b0000000d001d0000000000d1004b000025280000a13d0000000000b0043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700000000020c00192ede2ed40000040f00008010030000390000000100200190000025260000613d000000000101043b0000000b01100029000000000101041a000800000001001d0000000c01000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f00008010030000390000000100200190000025260000613d000000000101043b0000000902000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f00008010030000390000000100200190000025260000613d000000080200002900000bfb02200197000000000101043b000a00000002001d000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f00008010030000390000000100200190000025260000613d000000000101043b000000000101041a000700000001001d0000000c01000029000000000010043f0000016001000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f00008010030000390000000100200190000025260000613d000000000101043b0000000902000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f00008010030000390000000100200190000025260000613d000000000101043b0000000a02000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f000080100c0000390000000100200190000025260000613d000000000101043b000000000101041a000000ff0110018f000000030010008c000000060b0000290000000b0d000029000025340000813d000000000001004b0000000a02000029000024a30000613d000000010010008c000024210000613d0000000401000029000400010010003e000024240000c13d0000252e0000013d000000010100008a000000070010006b000024240000613d000000080100002900000c1200100198000024240000c13d000000400400043d000000200140003900000c800300004100000000003104350000002403400039000000070500002900000000005304350000002403000039000000000034043500000c810040009c0000253a0000813d0000006003400039000000400030043f00000000030404330000000004000414000000040020008c000024bd0000c13d00000001030000310000000102000039000024d10000013d00000bb90010009c00000bb901008041000000400110021000000bb90030009c00000bb9030080410000006003300210000000000113019f00000bb90040009c00000bb904008041000000c003400210000000000131019f2ede2ed40000040f0000000b0d000029000080100c000039000000060b000029000000010220018f0003000000010355000000600110027000010bb90010019d00000bb903100197000000000003004b00000080040000390000006001000039000024fd0000613d00000c090030009c0000253a0000213d0000001f0130003900000c7b011001970000003f0110003900000c7b04100197000000400100043d0000000004410019000000000014004b0000000005000039000000010500403900000c090040009c0000253a0000213d00000001005001900000253a0000c13d000000400040043f000000000431043600000c7b0630019800000000056400190000000307000367000024f00000613d000000000807034f0000000009040019000000008a08043c0000000009a90436000000000059004b000024ec0000c13d0000001f03300190000024fd0000613d000000000667034f0000000303300210000000000705043300000000073701cf000000000737022f000000000606043b0000010003300089000000000636022f00000000033601cf000000000373019f0000000000350435000000000002004b000024240000613d0000000001010433000000200010008c000024240000c13d0000000001040433000000000001004b0000000002000039000000010200c039000000000021004b000025260000c13d000000000001004b000025120000613d0000000801000029000000b001100270000000ff0110018f000000020010008c000000060b0000290000000b0d0000290000249d0000a13d000025340000013d000000060b0000290000000b0d000029000024240000013d000300000000001d000400000000001d0000000201000029000000c0011002700000ffff0110018f000000030010006b000000000100003900000001010040390000000102000029000000010220008a000000040020006c0000000002000039000000010200403900000000001201a00000000301000039000000000100c039000000000001042d000000000100001900002ee00001043000000c6b01000041000000000010043f0000003201000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000001101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee00001043000000c5901000041000000000010043f0000000c01000029000000040010043f00000c030100004100002ee000010430000000000001042f00010000000000020000016402000039000000000202041a000000100220027000000bfb022001970000000003000411000000000023004b000000000200003900000001020060390000000004000031000000140340008c0000000005000039000000010500803900000000005201700000000003046019000000fb02000039000000000202041a000000400c00043d0000006404c00039000000800500003900000000005404350000004404c0003900000c0805000041000000000054043500000bfb011001970000002404c00039000000000014043500000bfc0100004100000000001c04350000000401c00039000000000400041000000000004104350000008401c00039000000000031043500000c7b063001980000001f0730018f000000a404c0003900000000056400190000000208000367000025750000613d000000000908034f000000000a040019000000009b09043c000000000aba043600000000005a004b000025710000c13d00000bfb02200197000000000007004b000025830000613d000000000668034f0000000307700210000000000805043300000000087801cf000000000878022f000000000606043b0000010007700089000000000676022f00000000067601cf000000000686019f0000000000650435000000000443001900000000000404350000000004000414000000040020008c0000258d0000c13d0000000103000031000000200030008c00000020040000390000000004034019000025bf0000013d0000001f0330003900000c7b01300197000000a40110003900000bb90010009c00000bb901008041000000600110021000000bb900c0009c00000bb90300004100000000030c40190000004003300210000000000131019f00000bb90040009c00000bb904008041000000c003400210000000000113019f00010000000c001d2ede2ed40000040f000000010c000029000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000000057c0019000025ae0000613d000000000801034f00000000090c0019000000008a08043c0000000009a90436000000000059004b000025aa0000c13d000000000006004b000025bb0000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000100200190000025db0000613d0000001f01400039000000600210018f0000000001c20019000000000021004b0000000002000039000000010200403900000c090010009c000025d50000213d0000000100200190000025d50000c13d000000400010043f0000001f0030008c000025d30000a13d00000000010c0433000000000001004b0000000002000039000000010200c039000000000021004b000025d30000c13d000000000001042d000000000100001900002ee00001043000000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee0000104300000001f0530018f00000c0006300198000000400200043d0000000004620019000025e60000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000025e20000c13d000000000005004b000025f30000613d000000000161034f0000000305500210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000600130021000000bb90020009c00000bb9020080410000004002200210000000000112019f00002ee000010430000000400100043d00000c820010009c000026020000813d0000004002100039000000400020043f000000200210003900000000000204350000000000010435000000000001042d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000000400100043d00000c820010009c000026170000813d0000004002100039000000400020043f0000012d02000039000000000302041a00000bfb023001970000000002210436000000a003300270000000ff0330018f000000020030008c0000261d0000813d0000000000320435000000000001042d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee0000104300002000000000002000200000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000026560000613d000000000101043b000100000001001d00000002010000292ede237a0000040f000000030010008c0000000001000019000026540000c13d0000000101000029000000000101041a000200000001001d000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000026560000613d000000000101043b000000000101041a000000000001004b000026580000613d000000010110008a0000000202000029000000c0022002700000ffff0220018f000000000012004b00000000010000390000000101006039000000010110018f000000000001042d000000000100001900002ee00001043000000c6b01000041000000000010043f0000001101000039000000040010043f00000c030100004100002ee000010430000000400100043d00000c820010009c000026820000813d0000004002100039000000400020043f000000200210003900000000000204350000000000010435000000400100043d00000c130010009c000026820000213d0000004002100039000000400020043f0000012d02000039000000000402041a00000bfb024001970000000003210436000000a004400270000000ff0440018f000000020040008c000026880000813d0000000000430435000000000002004b000026770000613d000000000001042d000000400100043d00000c130010009c000026820000213d000000fb02000039000000000202041a0000004003100039000000400030043f00000bfb0220019700000000022104360000000000020435000000000001042d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee00001043000010000000000020000016402000039000000000202041a000000100220027000000bfb022001970000000003000411000000000023004b000000000200003900000001020060390000000004000031000000140340008c0000000005000039000000010500803900000000005201700000000003046019000000fb02000039000000000202041a000000400c00043d0000006404c00039000000800500003900000000005404350000004404c0003900000bfd05000041000000000054043500000bfb011001970000002404c00039000000000014043500000bfc0100004100000000001c04350000000401c00039000000000400041000000000004104350000008401c00039000000000031043500000c7b063001980000001f0730018f000000a404c0003900000000056400190000000208000367000026bc0000613d000000000908034f000000000a040019000000009b09043c000000000aba043600000000005a004b000026b80000c13d00000bfb02200197000000000007004b000026ca0000613d000000000668034f0000000307700210000000000805043300000000087801cf000000000878022f000000000606043b0000010007700089000000000676022f00000000067601cf000000000686019f0000000000650435000000000443001900000000000404350000000004000414000000040020008c000026d40000c13d0000000103000031000000200030008c00000020040000390000000004034019000027060000013d0000001f0330003900000c7b01300197000000a40110003900000bb90010009c00000bb901008041000000600110021000000bb900c0009c00000bb90300004100000000030c40190000004003300210000000000131019f00000bb90040009c00000bb904008041000000c003400210000000000113019f00010000000c001d2ede2ed40000040f000000010c000029000000600310027000000bb903300197000000200030008c000000200400003900000000040340190000001f0640018f000000200740019000000000057c0019000026f50000613d000000000801034f00000000090c0019000000008a08043c0000000009a90436000000000059004b000026f10000c13d000000000006004b000027020000613d000000000771034f0000000306600210000000000805043300000000086801cf000000000868022f000000000707043b0000010006600089000000000767022f00000000066701cf000000000686019f0000000000650435000100000003001f00030000000103550000000100200190000027220000613d0000001f01400039000000600210018f0000000001c20019000000000021004b0000000002000039000000010200403900000c090010009c0000271c0000213d00000001002001900000271c0000c13d000000400010043f0000001f0030008c0000271a0000a13d00000000010c0433000000000001004b0000000002000039000000010200c039000000000021004b0000271a0000c13d000000000001042d000000000100001900002ee00001043000000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee0000104300000001f0530018f00000c0006300198000000400200043d00000000046200190000272d0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b000027290000c13d000000000005004b0000273a0000613d000000000161034f0000000305500210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000600130021000000bb90020009c00000bb9020080410000004002200210000000000112019f00002ee000010430000f000000000002000400000003001d000f00000002001d000d00000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b000000000101041a000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b000000000201041a000000000002004b000029eb0000613d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000201043b000000000102041a000000000001004b000029e20000613d0000000401000029000100200010003d0000000f01000029000b0c090010019b000200010020003d000000000100041000030bfb0010019b0000000003000019000c00000002001d000027a60000013d0000000304400210000000000506043300000000054501cf000000000545022f00000000080c04330000010004400089000000000848022f00000000044801cf000000000454019f00000000004604350000001f0420003900000c7b0440019700000000023200190000000000020435000000400240003900000bb90020009c00000bb902008041000000600220021000000bb90010009c00000bb9010080410000004001100210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000121019f00000c1c011001c70000800d02000039000000040300003900000c1d040000410000000d0500002900000000060000192ede2ecf0000040f0000000100200190000029e90000613d0000000f0300002900000001033000390000000c02000029000000000102041a000000000013004b000029e20000813d000f00000003001d000000000020043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b0000000f01100029000e00000001001d000000000701041a00000c1200700198000027a00000c13d000000400200043d00000c820020009c0000000306000029000000200f00008a000029e30000813d0000004001200039000000400010043f00000001010000390000000003120436000000400400043d00000c140040009c000029e30000213d0000006001400039000000400010043f0000004001400039000000600500003900000000005104350000002001400039000000000001043500000000000404350000000000430435000000400400043d000000200140003900000c1505000041000000000051043500000024014000390000000d05000029000000000051043500000044014000390000000000010435000000b001700270000000ff0110018f000000030010008c000029f10000813d0000006405400039000000000015043500000c16007001980000000001000039000000010100c039000000840540003900000000001504350000008401000039000000000014043500000c170040009c000029e30000213d000000c005400039000000400050043f00000c140050009c000029e30000213d0000012001400039000000400010043f000000000065043500000100014000390000000000410435000000e00140003900000000000104350000000001020433000000000001004b000029eb0000613d00000000005304350000000001000414000500000001001d000000400900043d00000040019000390000000d0300002900000000003104350000006001000039000000000819043600000000006804350000006001900039000000000001043500000c180090009c000029e30000213d0000008004900039000000400040043f0000000201000029000000000101041a000000800110027000000c09011001970000000b0510002900000c7f0050009c000029f70000813d000000040100002900000000010104330000000f03000029000000000031004b000a00000007001d000900000005001d000028160000a13d0000000501300210000000010110002900000000010104330000000003040019000700000001001d0000281d0000013d00000c190040009c000029e30000213d000000a001900039000000400010043f000700000004001d0000000000040435000000400300043d000000200430003900000c1a01000041000600000004001d00000000001404350000002405300039000000a00100003900000000001504350000000009090433000000c4013000390000000000910435000000000cf9016f0000001f0b90018f000000e40a3000390000000000a8004b0000283c0000813d00000000000c004b000028380000613d0000000001b800190000000004ba0019000000200440008a000000200710008a0000000001c400190000000006c7001900000000060604330000000000610435000000200cc0008c000028320000c13d00000000000b004b000028520000613d00000000040a0019000028480000013d0000000004ca001900000000000c004b000028450000613d000000000108001900000000070a001900000000160104340000000007670436000000000047004b000028410000c13d00000000000b004b000028520000613d0000000008c800190000000301b00210000000000604043300000000061601cf000000000616022f00000000070804330000010001100089000000000717022f00000000011701cf000000000161019f00000000001404350000000001a9001900000000000104350000001f019000390000000001f1016f0000000008a10019000800000005001d0000000001580049000000440430003900000000001404350000000009020433000000000098043500000005019002100000000001180019000000200d100039000000000009004b000028ad0000613d000000000a000019000000000b080019000028780000013d0000000301f0021000000000040d043300000000041401cf000000000414022f00000000050e04330000010001100089000000000515022f00000000011501cf000000000141019f00000000001d043500000000016c001900000000000104350000001f01c00039000000200f00008a0000000001f1016f000000000d610019000000010aa0003900000000009a004b000028ad0000813d00000000018d0049000000200110008a000000200bb0003900000000001b043500000020022000390000000001020433000000006401043400000bfb0440019700000000044d043600000000060604330000000000640435000000400110003900000000010104330000004004d00039000000600500003900000000005404350000006004d0003900000000ec0104340000000000c404350000000004fc016f0000001f0fc0018f0000008006d0003900000000006e004b000028a00000813d000000000004004b0000289c0000613d0000000001fe00190000000007f60019000000200d70008a000000200110008a00000000074d0019000000000541001900000000050504330000000000570435000000200440008c000028960000c13d00000000000f004b0000286f0000613d000000000d060019000028650000013d000000000d460019000000000004004b000028a90000613d00000000010e00190000000007060019000000001501043400000000075704360000000000d7004b000028a50000c13d00000000000f004b0000286f0000613d000000000e4e0019000028650000013d0000000801d0006a000000a4023000390000000000120435000000090100002900000c09011001970000008402300039000000000012043500000064013000390000000b0200002900000000002104350000000701000029000000006201043400000000052d04360000000004f2016f0000001f0720018f000000000056004b000028cf0000813d000000000004004b000028ca0000613d00000000017600190000000008750019000000200880008a000000200110008a0000000009480019000000000a410019000000000a0a04330000000000a90435000000200440008c000028c40000c13d000000000007004b0000000a09000029000028e60000613d0000000008050019000028dc0000013d0000000008450019000000000004004b000028d80000613d00000000010600190000000009050019000000001a0104340000000009a90436000000000089004b000028d40000c13d000000000007004b0000000a09000029000028e60000613d00000000064600190000000301700210000000000408043300000000041401cf000000000414022f00000000060604330000010001100089000000000616022f00000000011601cf000000000141019f00000000001804350000000001520019000000000001043500000000013500490000001f022000390000000002f2016f0000000001210019000000200210008a00000000002304350000001f011000390000000001f1016f0000000004310019000000000014004b0000000001000039000000010100403900000c090040009c000029e30000213d0000000100100190000029e30000c13d00000bfb02900197000000400040043f00000000030304330000000001000414000000040020008c000029010000c13d00000001010000310000000102000039000029140000013d000000060400002900000bb90040009c00000bb904008041000000400440021000000bb90030009c00000bb9030080410000006003300210000000000343019f00000bb90010009c00000bb901008041000000c001100210000000000113019f2ede2ecf0000040f000000200f00008a000000010220018f0003000000010355000000600110027000010bb90010019d00000bb901100197000000000001004b0000008009000039000000600a000039000029400000613d00000c090010009c000029e30000213d0000001f031000390000000003f3016f0000003f033000390000000003f3016f000000400a00043d00000000033a00190000000000a3004b0000000004000039000000010400403900000c090030009c000029e30000213d0000000100400190000029e30000c13d000000400030043f00000000091a04360000000004f1017000000000034900190000000305000367000029330000613d000000000605034f0000000007090019000000006806043c0000000007870436000000000037004b0000292f0000c13d0000001f01100190000029400000613d000000000445034f0000000301100210000000000503043300000000051501cf000000000515022f000000000404043b0000010001100089000000000414022f00000000011401cf000000000151019f00000000001304350000000001000414000000000002004b000029850000613d00000000010a0433000000200010008c000029890000c13d0000000001090433000a00000001001d0000000d01000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b000000000000043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b0000000e02000029000000000202041a00000bfb02200197000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b0000000a03000029000000000031041b0000000e01000029000000000201041a000000400100043d000000000031043500000bb90010009c00000bb9010080410000004001100210000000000300041400000bb90030009c00000bb903008041000000c003300210000000000113019f00000c10011001c700000bfb072001970000800d02000039000000040300003900000c1b040000410000279b0000013d00000005020000290000000602200270000000000021004b000029fd0000413d00090000000a001d000a00000009001d0000000d01000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b000000000000043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b0000000e02000029000000000202041a00000bfb02200197000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f0000000100200190000029e90000613d000000000101043b000000010200008a000000000021041b0000000e01000029000000000301041a000000400100043d0000002002000039000000000421043600000009020000290000000002020433000000000024043500000bfb0730019700000c7b052001970000001f0420018f00000040031000390000000a0c00002900000000003c004b000029d50000813d000000000005004b000029d10000613d00000000084c00190000000006430019000000200660008a000000200880008a0000000009560019000000000a580019000000000a0a04330000000000a90435000000200550008c000029cb0000c13d000000000004004b000027860000613d00000000060300190000277c0000013d0000000006530019000000000005004b000029de0000613d00000000080c00190000000009030019000000008a0804340000000009a90436000000000069004b000029da0000c13d000000000004004b000027860000613d000000000c5c00190000277c0000013d000000000001042d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000000000100001900002ee00001043000000c6b01000041000000000010043f0000003201000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000001101000039000000040010043f00000c030100004100002ee00001043000000c1e01000041000000000010043f00000c1f0100004100002ee000010430000000600210003900000c83030000410000000000320435000000400210003900000c8403000041000000000032043500000020021000390000002e030000390000000000320435000000200200003900000000002104350000008001100039000000000001042d000a000000000002000a00000002001d000700000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f000000010020019000002b4c0000613d000000000101043b000000000101041a000000d0011002700000ffff0110018f000000000010043f0000016301000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f000000010020019000002b4c0000613d000000000101043b000000000201041a0000000a0020006c00002b4e0000a13d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f000000010020019000002b4c0000613d0000000a030000290000000102300210000000000101043b000000000b21001900000000010b041a000100000001001d000000000001004b00002b470000613d0006ffff00300193000080100c000039000000000d000019000300000000001d000200000000001d00040000000b001d00002a4f0000013d000000040b0000290000000a0d000029000000010dd000390000000100d0006c00002b490000813d00000000010b041a000a0000000d001d0000000000d1004b00002b4e0000a13d0000000000b0043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700000000020c00192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000000101043b0000000a01100029000000000101041a000800000001001d0000000701000029000000000010043f0000015f01000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000000101043b0000000602000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000080200002900000bfb02200197000000000101043b000900000002001d000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000000101043b000000000101041a000500000001001d0000000701000029000000000010043f0000016001000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000000101043b0000000602000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f0000801003000039000000010020019000002b4c0000613d000000000101043b0000000902000029000000000020043f000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700000000020300192ede2ed40000040f000080100c000039000000010020019000002b4c0000613d000000000101043b000000000101041a000000ff0110018f000000030010008c000000040b0000290000000a0d00002900002b410000813d000000000001004b000000090200002900002ad30000613d000000010010008c00002acd0000c13d000000010100008a000000020010006b00002b540000613d0000000201000029000200010010003d00002a4c0000013d000000010100008a000000030010006b00002b540000613d0000000301000029000300010010003d00002a4c0000013d000000010100008a000000050010006b00002a4c0000613d000000080100002900000c120010019800002a4c0000c13d000000400400043d000000200140003900000c800300004100000000003104350000002403400039000000050500002900000000005304350000002403000039000000000034043500000c810040009c00002b5a0000813d0000006003400039000000400030043f00000000030404330000000004000414000000040020008c00002aed0000c13d0000000103000031000000010200003900002b010000013d00000bb90010009c00000bb901008041000000400110021000000bb90030009c00000bb9030080410000006003300210000000000113019f00000bb90040009c00000bb904008041000000c003400210000000000131019f2ede2ed40000040f0000000a0d000029000080100c000039000000040b000029000000010220018f0003000000010355000000600110027000010bb90010019d00000bb903100197000000000003004b0000008004000039000000600100003900002b2d0000613d00000c090030009c00002b5a0000213d0000001f0130003900000c7b011001970000003f0110003900000c7b04100197000000400100043d0000000004410019000000000014004b0000000005000039000000010500403900000c090040009c00002b5a0000213d000000010050019000002b5a0000c13d000000400040043f000000000431043600000c7b063001980000000005640019000000030700036700002b200000613d000000000807034f0000000009040019000000008a08043c0000000009a90436000000000059004b00002b1c0000c13d0000001f0330019000002b2d0000613d000000000667034f0000000303300210000000000705043300000000073701cf000000000737022f000000000606043b0000010003300089000000000636022f00000000033601cf000000000373019f0000000000350435000000000002004b00002a4c0000613d0000000001010433000000200010008c00002a4c0000c13d0000000001040433000000000001004b0000000002000039000000010200c039000000000021004b00002b4c0000c13d000000000001004b00002a4a0000613d0000000801000029000000b001100270000000ff0110018f000000020010008c000000040b0000290000000a0d00002900002ac50000a13d00000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee000010430000200000000001d000300000000001d00000002010000290000000302000029000000000001042d000000000100001900002ee00001043000000c6b01000041000000000010043f0000003201000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000001101000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000c000000000002000300000001001d000000000010043f0000016201000039000000200010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c01011001c700008010020000392ede2ed40000040f000000010020019000002e7f0000613d000000000101043b000000000201041a000200000002001d00000c850220019700000c86022001c7000000000021041b0000000202100039000000000502041a00000c7f0050009c00002e790000813d00000005035002100000003f0330003900000c1103300197000000400400043d0000000003340019000c00000004001d000000000043004b0000000004000039000000010400403900000c090030009c00002e790000213d000000010040019000002e790000c13d0000000301100039000000000101041a000100000001001d000000400030043f0000000c01000029000400000005001d0000000000510435000000000020043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f000000010020019000002e7f0000613d0000000405000029000000000005004b000000200c00008a00002bf90000613d000000000601043b00000000070000190000000c08000029000000400900043d00000c140090009c00002e790000213d0000006001900039000000400010043f000000000106041a00000bfb0110019700000000011904360000000102600039000000000202041a00000000002104350000000201600039000000000201041a0000000103200190000000010b2002700000007f0bb0618f0000001f00b0008c00000000040000390000000104002039000000000043004b00002e810000c13d000000400a00043d0000000004ba0436000000000003004b00002bdc0000613d000500000004001d00060000000b001d00070000000a001d000800000009001d000900000008001d000a00000007001d000b00000006001d000000000010043f000000000100041400000bb90010009c00000bb901008041000000c00110021000000c10011001c700008010020000392ede2ed40000040f000000200c00008a000000010020019000002e7f0000613d000000060b00002900000000000b004b00000004050000290000000a07000029000000090800002900002be20000613d000000000201043b00000000010000190000000b060000290000000809000029000000070a000029000000050d00002900000000031d0019000000000402041a0000000000430435000000010220003900000020011000390000000000b1004b00002bd40000413d00002be60000013d00000c7d01200197000000000014043500000000000b004b0000002001000039000000000100603900002be60000013d00000000010000190000000b060000290000000809000029000000070a0000290000003f011000390000000002c1016f0000000001a20019000000000021004b0000000002000039000000010200403900000c090010009c00002e790000213d000000010020019000002e790000c13d0000002008800039000000400010043f00000040019000390000000000a10435000000000098043500000003066000390000000107700039000000000057004b00002b9d0000413d0000000102000029000000a001200270000000ff0310018f000000020030008c00002e870000813d000000020100002900000c3f0110019700000bfb02200197000000400d00043d0000008404d000390000002405d00039000000010030008c000b0000000d001d00002c660000c13d0000002003d0003900000c87060000410000000000630435000000030600002900000000006504350000004405d000390000006006000039000a00000006001d00000000006504350000000c0500002900000000050504330000000000540435000000050650021000000000066d0019000000a408600039000000000005004b00002cc20000613d000000000600001900002c2d0000013d000000030aa00210000000000b0c0433000000000bab01cf000000000bab022f0000000009090433000001000aa000890000000009a9022f0000000009a901cf0000000009b9019f00000000009c0435000000000987001900000000000904350000001f07700039000000200c00008a0000000007c7016f00000000088700190000000106600039000000000056004b00002cc20000813d0000000007d80049000000a40770008a000000200440003900000000007404350000000c070000290000002007700039000c00000007001d000000000707043300000000a907043400000bfb099001970000000009980436000000000a0a04330000000000a90435000000400770003900000000070704330000004009800039000000600a0000390000000000a90435000000600a800039000000009707043400000000007a0435000000000bc7016f0000001f0a70018f0000008008800039000000000089004b00002c580000813d00000000000b004b00002c530000613d000000000da90019000000000ca80019000000200cc0008a000000200dd0008a000000000ebc0019000000000fbd0019000000000f0f04330000000000fe0435000000200bb0008c00002c4d0000c13d00000000000a004b0000000b0d00002900002c240000613d000000000c08001900002c1a0000013d000000000cb8001900000000000b004b00002c610000613d000000000d090019000000000e08001900000000df0d0434000000000efe04360000000000ce004b00002c5d0000c13d00000000000a004b0000000b0d00002900002c240000613d0000000009b9001900002c1a0000013d00000c870300004100000000003d04350000000403d0003900000003060000290000000000630435000000600300003900000000003504350000000c050000290000000005050433000000050650021000000000086400190000006404d000390000000000540435000000000005004b00002d060000613d000000000600001900002c8a0000013d000000030aa00210000000000b0c0433000000000bab01cf000000000bab022f0000000009090433000001000aa000890000000009a9022f0000000009a901cf0000000009b9019f00000000009c0435000000000987001900000000000904350000001f07700039000000200c00008a0000000007c7016f00000000088700190000000106600039000000000056004b00002d060000813d0000000007d80049000000840770008a000000200440003900000000007404350000000c070000290000002007700039000c00000007001d000000000707043300000000a907043400000bfb099001970000000009980436000000000a0a04330000000000a904350000004007700039000000000707043300000040098000390000000000390435000000600a800039000000009707043400000000007a0435000000000bc7016f0000001f0a70018f0000008008800039000000000089004b00002cb40000813d00000000000b004b00002caf0000613d000000000da90019000000000ca80019000000200cc0008a000000200dd0008a000000000ebc0019000000000fbd0019000000000f0f04330000000000fe0435000000200bb0008c00002ca90000c13d00000000000a004b0000000b0d00002900002c810000613d000000000c08001900002c770000013d000000000cb8001900000000000b004b00002cbd0000613d000000000d090019000000000e08001900000000df0d0434000000000efe04360000000000ce004b00002cb90000c13d00000000000a004b0000000b0d00002900002c810000613d0000000009b9001900002c770000013d0000006404d0003900000000001404350000000001d80049000000200410008a00000000004d04350000001f011000390000000004c1016f0000000001d40019000000000041004b0000000004000039000000010400403900000c090010009c00002e790000213d000000010040019000002e790000c13d000000400010043f00000000040d04330000000001000414000000040020008c00002dca0000c13d00000001010000310000000002000019000000000001004b00002dde0000613d00000c090010009c00002e790000213d0000001f031000390000000003c3016f0000003f033000390000000003c3016f000000400400043d0000000003340019000a00000004001d000000000043004b0000000004000039000000010400403900000c090030009c00002e790000213d000000010040019000002e790000c13d000000400030043f0000000a0300002900000000031304360000000004c101700000001f0510018f0000000001430019000000030600036700002cf80000613d000000000706034f0000000008030019000000007907043c0000000008980436000000000018004b00002cf40000c13d000000000005004b00002ddf0000613d000000000446034f0000000305500210000000000601043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000041043500002ddf0000013d0000004403d0003900000000001304350000000001000414000000040020008c00002d0e0000c13d0000000301000367000000010300003100002d240000013d0000000003d8004900000bb90030009c00000bb903008041000000600330021000000bb900d0009c00000bb90400004100000000040d40190000004004400210000000000343019f00000bb90010009c00000bb901008041000000c001100210000000000113019f2ede2ecf0000040f000000600310027000010bb90030019d00000bb9033001970003000000010355000000010020019000002e930000613d000000200c00008a0000000b0d0000290000000004c301700000001f0530018f00000000024d001900002d2e0000613d000000000601034f00000000070d0019000000006806043c0000000007870436000000000027004b00002d2a0000c13d000000000005004b00002d3b0000613d000000000141034f0000000304500210000000000502043300000000054501cf000000000545022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f00000000001204350000001f013000390000000002c1016f0000000001d20019000000000021004b0000000002000039000000010200403900000c090010009c00002e790000213d000000010020019000002e790000c13d000000400010043f00000c2c0030009c00002e7f0000213d000000400030008c00002e7f0000413d00000000040d043300000c090040009c00002e7f0000213d0000000002d300190000000003d40019000c00000003001d0000001f04300039000000000024004b000000000500001900000c2b0500804100000c2b0640019700000c2b04200197000000000746013f000000000046004b000000000600001900000c2b0600404100000c2b0070009c000000000605c019000000000006004b00002e7f0000c13d0000000c03000029000000005603043400000c090060009c00002e790000213d00000005076002100000003f0870003900000c1108800197000000000818001900000c090080009c00002e790000213d000000400080043f00000000006104350000000006570019000000000026004b00002e7f0000213d000000000065004b00002d820000413d00002e120000013d000000000aca00190000000303b00210000000000b0d0433000000000b3b01cf000000000b3b022f000000000a0a04330000010003300089000000000a3a022f00000000033a01cf0000000003b3019f00000000003d04350000002001100039000000000379001900000000000304350000000000810435000000000065004b000000200c00008a00002e120000813d000000005705043400000c090070009c00002e7f0000213d0000000c0a7000290000003f07a00039000000000027004b000000000800001900000c2b0800804100000c2b07700197000000000947013f000000000047004b000000000700001900000c2b0700404100000c2b0090009c000000000708c019000000000007004b00002e7f0000c13d0000002007a00039000000000707043300000c090070009c00002e790000213d0000001f087000390000000008c8016f0000003f088000390000000009c8016f000000400800043d0000000009980019000000000089004b000000000b000039000000010b00403900000c090090009c00002e790000213d0000000100b0019000002e790000c13d000000400090043f0000000009780436000000400aa00039000000000ba7001900000000002b004b00002e7f0000213d000000000cc7016f0000001f0b70018f00000000009a004b00002dbe0000813d00000000000c004b00002dba0000613d000000000eba0019000000000db90019000000200dd0008a000000200ee0008a000000000fcd00190000000003ce0019000000000303043300000000003f0435000000200cc0008c00002db40000c13d00000000000b004b00002d7b0000613d000000000d09001900002d710000013d000000000dc9001900000000000c004b00002dc70000613d000000000e0a0019000000000f09001900000000e30e0434000000000f3f04360000000000df004b00002dc30000c13d00000000000b004b00002d700000c13d00002d7b0000013d00000bb90030009c00000bb903008041000000400330021000000bb90040009c00000bb9040080410000006004400210000000000334019f00000bb90010009c00000bb901008041000000c001100210000000000113019f2ede2ed90000040f000000200c00008a000000010220015f0003000000010355000000600110027000010bb90010019d00000bb901100197000000000001004b00002cda0000c13d00000080030000390000000a010000290000000001010433000000010020019000002e8d0000c13d00000c2c0010009c00002e7f0000213d000000400010008c00002e7f0000413d000000000203043300000c090020009c00002e7f0000213d00000000011300190000000002320019000c00000002001d0000001f03200039000000000013004b000000000400001900000c2b0400804100000c2b0530019700000c2b03100197000000000635013f000000000035004b000000000500001900000c2b0500404100000c2b0060009c000000000504c019000000000005004b00002e7f0000c13d0000000c02000029000000004602043400000c090060009c00002e790000213d00000005076002100000003f0570003900000c1108500197000000400500043d0000000008850019000000000058004b0000000009000039000000010900403900000c090080009c00002e790000213d000000010090019000002e790000c13d000000400080043f00000000006504350000000006470019000000000016004b00002e7f0000213d000000000064004b00002e310000413d000000000100041400000bb90010009c00000bb901008041000000c00110021000000c1c011001c70000800d02000039000000020300003900000c880400004100000003050000292ede2ecf0000040f000000010020019000002e7f0000613d000000000001042d000000000aca00190000000302b00210000000000b0d0433000000000b2b01cf000000000b2b022f000000000a0a04330000010002200089000000000a2a022f00000000022a01cf0000000002b2019f00000000002d04350000002005500039000000000279001900000000000204350000000000850435000000000064004b000000200c00008a00002e120000813d000000004704043400000c090070009c00002e7f0000213d0000000c0a7000290000003f07a00039000000000017004b000000000800001900000c2b0800804100000c2b07700197000000000937013f000000000037004b000000000700001900000c2b0700404100000c2b0090009c000000000708c019000000000007004b00002e7f0000c13d0000002007a00039000000000707043300000c090070009c00002e790000213d0000001f087000390000000008c8016f0000003f088000390000000009c8016f000000400800043d0000000009980019000000000089004b000000000b000039000000010b00403900000c090090009c00002e790000213d0000000100b0019000002e790000c13d000000400090043f0000000009780436000000400aa00039000000000ba7001900000000001b004b00002e7f0000213d000000000cc7016f0000001f0b70018f00000000009a004b00002e6d0000813d00000000000c004b00002e690000613d000000000eba0019000000000db90019000000200dd0008a000000200ee0008a000000000fcd00190000000002ce0019000000000202043300000000002f0435000000200cc0008c00002e630000c13d00000000000b004b00002e2a0000613d000000000d09001900002e200000013d000000000dc9001900000000000c004b00002e760000613d000000000e0a0019000000000f09001900000000e20e0434000000000f2f04360000000000df004b00002e720000c13d00000000000b004b00002e1f0000c13d00002e2a0000013d00000c6b01000041000000000010043f0000004101000039000000040010043f00000c030100004100002ee000010430000000000100001900002ee00001043000000c6b01000041000000000010043f0000002201000039000000040010043f00000c030100004100002ee00001043000000c6b01000041000000000010043f0000002101000039000000040010043f00000c030100004100002ee000010430000000000001004b00002eb10000c13d00000c8901000041000000000010043f00000c1f0100004100002ee0000104300000001f0530018f00000c0006300198000000400200043d000000000462001900002e9e0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000048004b00002e9a0000c13d000000000005004b00002eab0000613d000000000161034f0000000305500210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000600130021000000bb90020009c00000bb9020080410000004002200210000000000112019f00002ee00001043000000bb90030009c00000bb903008041000000400230021000000bb90010009c00000bb9010080410000006001100210000000000121019f00002ee000010430000000000001042f00000bb90010009c00000bb901008041000000400110021000000bb90020009c00000bb9020080410000006002200210000000000112019f000000000200041400000bb90020009c00000bb902008041000000c002200210000000000112019f00000c1c011001c700008010020000392ede2ed40000040f000000010020019000002ecd0000613d000000000101043b000000000001042d000000000100001900002ee00001043000002ed2002104210000000102000039000000000001042d0000000002000019000000000001042d00002ed7002104230000000102000039000000000001042d0000000002000019000000000001042d00002edc002104250000000102000039000000000001042d0000000002000019000000000001042d00002ede0000043200002edf0001042e00002ee00001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff08c379a000000000000000000000000000000000000000000000000000000000496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000000a000000000000000000200000000000000000000000000000000000020000000a000000000000000007f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498000000020000000000000000000000000000008000000100000000000000000000000000000000000000000000000000000000000000000000000000761f8aca00000000000000000000000000000000000000000000000000000000ce1b815e00000000000000000000000000000000000000000000000000000000ea65ab8100000000000000000000000000000000000000000000000000000000fd8d2d3500000000000000000000000000000000000000000000000000000000fd8d2d3600000000000000000000000000000000000000000000000000000000fdbd7eb300000000000000000000000000000000000000000000000000000000fe0d94c100000000000000000000000000000000000000000000000000000000ea65ab8200000000000000000000000000000000000000000000000000000000ee57e36f00000000000000000000000000000000000000000000000000000000ef8cccb000000000000000000000000000000000000000000000000000000000da74222700000000000000000000000000000000000000000000000000000000da74222800000000000000000000000000000000000000000000000000000000dd63c06f00000000000000000000000000000000000000000000000000000000e306bee700000000000000000000000000000000000000000000000000000000ce1b815f00000000000000000000000000000000000000000000000000000000da35c66400000000000000000000000000000000000000000000000000000000bfde57c200000000000000000000000000000000000000000000000000000000c98425ed00000000000000000000000000000000000000000000000000000000c98425ee00000000000000000000000000000000000000000000000000000000c9c4bfca00000000000000000000000000000000000000000000000000000000cc63604a00000000000000000000000000000000000000000000000000000000bfde57c300000000000000000000000000000000000000000000000000000000c218c13200000000000000000000000000000000000000000000000000000000c7f758a8000000000000000000000000000000000000000000000000000000007e3f1352000000000000000000000000000000000000000000000000000000007e3f1353000000000000000000000000000000000000000000000000000000008cb7505900000000000000000000000000000000000000000000000000000000bb225da200000000000000000000000000000000000000000000000000000000761f8acb000000000000000000000000000000000000000000000000000000007a5b4f59000000000000000000000000000000000000000000000000000000003e4f49e5000000000000000000000000000000000000000000000000000000004f1ef28500000000000000000000000000000000000000000000000000000000572b6c0400000000000000000000000000000000000000000000000000000000572b6c05000000000000000000000000000000000000000000000000000000005c23bfb7000000000000000000000000000000000000000000000000000000005c60da1b000000000000000000000000000000000000000000000000000000004f1ef28600000000000000000000000000000000000000000000000000000000523039620000000000000000000000000000000000000000000000000000000052d1902d000000000000000000000000000000000000000000000000000000004162169e000000000000000000000000000000000000000000000000000000004162169f0000000000000000000000000000000000000000000000000000000041de6830000000000000000000000000000000000000000000000000000000004e3ed5e9000000000000000000000000000000000000000000000000000000003e4f49e60000000000000000000000000000000000000000000000000000000040e58ee5000000000000000000000000000000000000000000000000000000002ae9c5ff0000000000000000000000000000000000000000000000000000000035ade0480000000000000000000000000000000000000000000000000000000035ade049000000000000000000000000000000000000000000000000000000003659cfe6000000000000000000000000000000000000000000000000000000003d3f4b1b000000000000000000000000000000000000000000000000000000002ae9c6000000000000000000000000000000000000000000000000000000000030196ab9000000000000000000000000000000000000000000000000000000001abf3f10000000000000000000000000000000000000000000000000000000001abf3f11000000000000000000000000000000000000000000000000000000001c622dea000000000000000000000000000000000000000000000000000000001f3cb5b40000000000000000000000000000000000000000000000000000000001ffc9a7000000000000000000000000000000000000000000000000000000000b47808d000000000000000000000000fffffffffffffffffffffffffffffffffffffffffdef910600000000000000000000000000000000000000000000000000000000f281525e53675515a6ba7cc7bea8a81e649b3608423ee2d73be1752cea88788900000000000000000000000000000000000000000000000000000000ffffff5bffffffffffffffffffffffffffffffffffffff5bffffff80000000000000000000000000000000000000000000000000000000000000000000000000ffffffe002000000000000000000000000000000000000400000000000000000000000009fefd0f100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000032dbe3b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000000000000000000000000585ddcca000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000b014ce248804cab6a144581acce1eeb70ce5d54f08433b989d73bb0ccee3d3f9000000000000000000000000000000000000000000000000ffffffffffffffffe2e2527200000000000000000000000000000000000000000000000000000000ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffff000000000000000000000000000000000000000000000000796b89b91644bc98cd93958e4c9038275d622183e25ac5af08cc6b5d955391320200000200000000000000000000000000000004000000000000000000000000ffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff02000000000000000000000000000000000000200000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00000000000000000000000ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffbf000000000000000000000000000000000000000000000000ffffffffffffff9f523039620000000000000000000000000000000000000000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff3f000000000000000000000000000000000000000000000000ffffffffffffff7f000000000000000000000000000000000000000000000000ffffffffffffffdfea65ab8200000000000000000000000000000000000000000000000000000000dc04d6b37a483003e6bdc5660d9d9bb22854fffba622b62f658a398efc88ca440200000000000000000000000000000000000000000000000000000000000000e03b818c74400ef42fafb3f6cfa61d8a38950d4f403eee88ec39bc0cafe54d241c26714c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000a21690322ce39bce6ee8416aefbe1e66cf767ff37e9db8f708a3c6cbbf17db9b0000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffeff0000ff0000000000000000000000000000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000004707e94b25cfce1a7c363508fbb838c35864388ad77284b248282b9746982b9b47ff9796f72d439c6e5c30a24b9fad985a00c85a9f2258074c400a94f8746b00dfedf2d9c8652ca4f3971a75df0edae0db530c511782c57278a63b798e37353220120d26379ad35b0c68e58a20f1251f24acf3aee87d3a8d8759c48671c8cacedfedf2d9c8652ca4f3971a75df0edae0db530c511782c57278a63b798e373531bb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8c433a4cd6b51969eca37f974940894297b9fcf4b282a213fea5cd8f85289c90ffffffffffffffffffffffffffffffffffffff5c0000000000000000000000009a8a0592ac89c5ad3bc6df8224c17b485976f597df104ee20d0df415241f670b42cbb15ccdc3cad6266b0e7a08c0454b23bf29dc2df74b6f3c209e9336465bd1000000000000000000000000000000000000000000000000ffffffffffffff5f0000000000000000ffffffffffffffff0000000000000000000000000000000012dba68f00000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff00000000000000000000000000000000ffffffffffffffffffffff000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000ffffffff0000ffffffffffffffffffff00000000000000000000000000000000ded416ca00000000000000000000000000000000000000000000000000000000a6c1f8f4276dc3f243459e13b557c84e8f4e90b2e09070bad5f6909cee687c92000000000000000000000000000000000000002000000080000000000000000000000000000000000000000000000000000000400000000000000000000000001bebc11500000000000000000000000000000000000000000000000000000000821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f5000000000000000000000000000000000000000000000000fffffffffffffedf00000000000000000000000000000000ffffffffffffffffffffffffffffffff1806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000647920696e697469616c697a6564000000000000000000000000000000000000496e697469616c697a61626c653a20636f6e747261637420697320616c726561568cc693d84eb1901f8bcecba154cbdef23ca3cf67efc0a0b698528a06c660f701ffc9a7000000000000000000000000000000000000000000000000000000000000000000007530000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000549ea75a00000000000000000000000000000000000000000000000000000000266d0fb900000000000000000000000000000000000000000000000000000000ffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff88e879ae0d71faf3aa708f2978daccb99b95243615dc104835b8c5a21c884ae6360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc310ab089e4439a4c15d089f94afb7896ff553aecb10793d0ab882de59d99a32e02000002000000000000000000000000000000440000000000000000000000006c6564207468726f7567682064656c656761746563616c6c0000000000000000555550535570677261646561626c653a206d757374206e6f742062652063616c4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914352d1902d000000000000000000000000000000000000000000000000000000006961626c6555554944000000000000000000000000000000000000000000000045524331393637557067726164653a20756e737570706f727465642070726f78bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b206661696c656400000000000000000000000000000000000000000000000000416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c0000000000000000000000000000000000000000000000a00000000000000000853c2a3000000000000000000000000000000000000000000000000000000000bdfef02014e2b7a6c80226083f80d72d22fcf656d917f92d242c5b61e108bcd3ffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000010000000000000000000000000000000000000000000000000000000000578c7050405154b6a8167f305908011ff85e3231eff1fbce2bbe95500b92f2038b9b77af0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000440000000000000000000000002862797465735b5d5b5d20737562426f64696573437573746f6d50726f706f73616c506172616d734142492900000000000000000000000000000000000000000000000000000000000000000000000000000000000000e000000000000000006163746976652070726f7879000000000000000000000000000000000000000046756e6374696f6e206d7573742062652063616c6c6564207468726f75676820416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006f74206120636f6e747261637400000000000000000000000000000000000000455243313936373a206e657720696d706c656d656e746174696f6e206973206e64656c656761746563616c6c0000000000000000000000000000000000000000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffff8d48ed33000000000000000000000000000000000000000000000000000000004e487b7100000000000000000000000000000000000000000000000000000000d345a56b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000001400000000000000000a73a22e0fc9b71a5463a75c9711d02d08dae26e85aa1033f4416b719a0239107c1d7dc1770290440bd536be5eca85bc1e54960c21ef0f9a838033941a7392d8d8b3233350000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff940cac35ffffffffffffffffffffffffffffffffffffffffffffffffffffffffda35c663fffffffffffffffffffffffffffffffffffffffffffffffffffffffffd19134400000000000000000000000000000000000000000000000000000000da35c66400000000000000000000000000000000000000000000000000000000940cac3600000000000000000000000000000000000000000000000000000000afc5b8230000000000000000000000000000000000000000000000000000000041de682fffffffffffffffffffffffffffffffffffffffffffffffffffffffff41de6830000000000000000000000000000000000000000000000000000000002ae9c60000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000010000000000000000c218c13200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffa0000000000000000000000000000000000000000000000000ffffffffffffffc06f6e206973206e6f74205555505300000000000000000000000000000000000045524331393637557067726164653a206e657720696d706c656d656e74617469ffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000100000000000000000000000000000000000000000000000000000000c71bf32400000000000000000000000000000000000000000000000000000000712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f18cecad50000000000000000000000000000000000000000000000000000000062e2ff03073692fe5f9a259c16ca30f8b348f311104bd302a0619d516c9347c0","linkReferences":{}}},"missingLibraries":[]}},"src/libraries/Errors.sol":{"Errors":{"abi":[{"type":"error","name":"DuplicateBodyAddress","inputs":[{"name":"stageId","type":"uint256","internalType":"uint256"},{"name":"body","type":"address","internalType":"address"}]},{"type":"error","name":"EmptyMetadata","inputs":[]},{"type":"error","name":"IncorrectActionCount","inputs":[]},{"type":"error","name":"InsufficientGas","inputs":[]},{"type":"error","name":"InterfaceNotSupported","inputs":[]},{"type":"error","name":"InvalidCustomParamsForFirstStage","inputs":[]},{"type":"error","name":"NonexistentProposal","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ProposalAdvanceForbidden","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ProposalAlreadyCancelled","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ProposalAlreadyExists","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ProposalCanNotBeCancelled","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"stageId","type":"uint16","internalType":"uint16"}]},{"type":"error","name":"ProposalCanNotBeEdited","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"stageId","type":"uint16","internalType":"uint16"}]},{"type":"error","name":"ProposalExecutionForbidden","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"StageCountZero","inputs":[]},{"type":"error","name":"StageDurationsInvalid","inputs":[]},{"type":"error","name":"StageIdInvalid","inputs":[{"name":"currentStageId","type":"uint64","internalType":"uint64"},{"name":"reportedStageId","type":"uint64","internalType":"uint64"}]},{"type":"error","name":"StageThresholdsInvalid","inputs":[]},{"type":"error","name":"StartDateInvalid","inputs":[{"name":"","type":"uint64","internalType":"uint64"}]},{"type":"error","name":"Uint16MaxSizeExceeded","inputs":[]},{"type":"error","name":"UnexpectedProposalState","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"currentState","type":"uint8","internalType":"uint8"},{"name":"allowedStates","type":"bytes32","internalType":"bytes32"}]}],"userdoc":{},"devdoc":{},"hash":"01000007e265228925f5fe03416586e63511b96bcc433d319cddef29610faa6e","factoryDependencies":{},"eravm":{"bytecode":"0x00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000d2017d6db1e7e8607c876d0796cc4cb49b584c91bf52f39fcc2898da61cd6162"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000d2017d6db1e7e8607c876d0796cc4cb49b584c91bf52f39fcc2898da61cd6162","linkReferences":{}}},"missingLibraries":[]}},"src/libraries/Permissions.sol":{"Permissions":{"abi":[],"userdoc":{},"devdoc":{},"hash":"01000007c36ba8b7c6d5773dc47ccc0a16f7ab863016b73e738881e6c494cfd4","factoryDependencies":{},"eravm":{"bytecode":"0x00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000047452e584b4b6ad12876bba128c5909253435b2bf2c4e941b2984440540d2601"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000047452e584b4b6ad12876bba128c5909253435b2bf2c4e941b2984440540d2601","linkReferences":{}}},"missingLibraries":[]}},"test/main.sol":{"PrepareInstallation_SPPSetup_UnitTest":{"abi":[{"type":"function","name":"setUp","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"test_WhenPreparingInstallation","inputs":[],"outputs":[],"stateMutability":"nonpayable"}],"userdoc":{},"devdoc":{},"hash":"01000035c2e81767ad55a811adf020419d1921e4e3efb9cedca2126dc569aba0","factoryDependencies":{"01000021a51089f67aefcd6eb12ac70ace3f0481bc592948fa70a9d99191384e":"src/Blaxblux.sol:Blaxblux"},"eravm":{"bytecode":"0x00020000000000020000006003100270000000280330019700010000003103550000008004000039000000400040043f00000001002001900000002b0000c13d000000040030008c000000380000413d000000000101043b000000e0011002700000002a0010009c000000330000613d0000002b0010009c000000380000c13d0000000001000416000000000001004b000000380000c13d0000002c01000041000000a40010043f00000000010004140000002d02000041000000800020043f000000840000043f0000006002000039000000c40020043f000000e40000043f000000280010009c0000002801008041000000c0011002100000002e011001c70000800602000039009a00950000040f00000001002001900000003a0000613d0000006004000039000000000101043b000000000001004b0000005e0000c13d000000010100036700000000020000310000003e0000013d0000000001000416000000000001004b000000380000c13d00000020010000390000010000100443000001200000044300000029010000410000009b0001042e0000000001000416000000000001004b000000380000c13d00000000010000190000009b0001042e00000000010000190000009c0001043000010000000103550000006002100270000000280020019d000000280220019700000033052001980000001f0620018f000000400300043d0000000004530019000000490000613d000000000701034f0000000008030019000000007907043c0000000008980436000000000048004b000000450000c13d000000000006004b000000560000613d000000000151034f0000000305600210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000280020009c00000028020080410000006001200210000000280030009c00000028030080410000004002300210000000000112019f0000009c00010430000000400100043d0000002f0010009c000000670000413d0000003101000041000000000010043f0000004101000039000000040010043f00000032010000410000009c0001043000000024021000390000002c0300004100000000003204350000004402100039000000000300041400000000004204350000002d0200004100000000002104350000006402100039000000000002043500000004021000390000000000020435000000280010009c00000028010080410000004001100210000000280030009c0000002803008041000000c002300210000000000121019f00000030011001c70000800602000039009a00950000040f0000000100200190000000850000613d000000000101043b000000000001004b000000360000c13d00000001010003670000000002000031000000890000013d00010000000103550000006002100270000000280020019d000000280220019700000033052001980000001f0620018f000000400300043d0000000004530019000000490000613d000000000701034f0000000008030019000000007907043c0000000008980436000000000048004b000000900000c13d000000490000013d00000098002104210000000102000039000000000001042d0000000002000019000000000001042d0000009a000004320000009b0001042e0000009c0001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000b24af8ab000000000000000000000000000000000000000000000000000000000a9254e401000021a51089f67aefcd6eb12ac70ace3f0481bc592948fa70a9d99191384e9c4d535bdea7cd8a978f128b93471df48c7dbab89d703809115bdc118c235bfd0200000000000000000000000000000000000084000000800000000000000000000000000000000000000000000000000000000000000000ffffffffffffff7c02000000000000000000000000000000000000840000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0e6924dfe12f3253a811a1db3f3e762b68fdc3029a2a746022bb5f3ff07da34f5"},"evm":{"bytecode":{"object":"00020000000000020000006003100270000000280330019700010000003103550000008004000039000000400040043f00000001002001900000002b0000c13d000000040030008c000000380000413d000000000101043b000000e0011002700000002a0010009c000000330000613d0000002b0010009c000000380000c13d0000000001000416000000000001004b000000380000c13d0000002c01000041000000a40010043f00000000010004140000002d02000041000000800020043f000000840000043f0000006002000039000000c40020043f000000e40000043f000000280010009c0000002801008041000000c0011002100000002e011001c70000800602000039009a00950000040f00000001002001900000003a0000613d0000006004000039000000000101043b000000000001004b0000005e0000c13d000000010100036700000000020000310000003e0000013d0000000001000416000000000001004b000000380000c13d00000020010000390000010000100443000001200000044300000029010000410000009b0001042e0000000001000416000000000001004b000000380000c13d00000000010000190000009b0001042e00000000010000190000009c0001043000010000000103550000006002100270000000280020019d000000280220019700000033052001980000001f0620018f000000400300043d0000000004530019000000490000613d000000000701034f0000000008030019000000007907043c0000000008980436000000000048004b000000450000c13d000000000006004b000000560000613d000000000151034f0000000305600210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f0000000000140435000000280020009c00000028020080410000006001200210000000280030009c00000028030080410000004002300210000000000112019f0000009c00010430000000400100043d0000002f0010009c000000670000413d0000003101000041000000000010043f0000004101000039000000040010043f00000032010000410000009c0001043000000024021000390000002c0300004100000000003204350000004402100039000000000300041400000000004204350000002d0200004100000000002104350000006402100039000000000002043500000004021000390000000000020435000000280010009c00000028010080410000004001100210000000280030009c0000002803008041000000c002300210000000000121019f00000030011001c70000800602000039009a00950000040f0000000100200190000000850000613d000000000101043b000000000001004b000000360000c13d00000001010003670000000002000031000000890000013d00010000000103550000006002100270000000280020019d000000280220019700000033052001980000001f0620018f000000400300043d0000000004530019000000490000613d000000000701034f0000000008030019000000007907043c0000000008980436000000000048004b000000900000c13d000000490000013d00000098002104210000000102000039000000000001042d0000000002000019000000000001042d0000009a000004320000009b0001042e0000009c0001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000b24af8ab000000000000000000000000000000000000000000000000000000000a9254e401000021a51089f67aefcd6eb12ac70ace3f0481bc592948fa70a9d99191384e9c4d535bdea7cd8a978f128b93471df48c7dbab89d703809115bdc118c235bfd0200000000000000000000000000000000000084000000800000000000000000000000000000000000000000000000000000000000000000ffffffffffffff7c02000000000000000000000000000000000000840000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0e6924dfe12f3253a811a1db3f3e762b68fdc3029a2a746022bb5f3ff07da34f5","linkReferences":{}}},"missingLibraries":[]}}},"sources":{"node_modules/@aragon/osx-commons-contracts/src/dao/IDAO.sol":{"id":0,"ast":{}},"node_modules/@aragon/osx-commons-contracts/src/executors/IExecutor.sol":{"id":1,"ast":{}},"node_modules/@aragon/osx-commons-contracts/src/permission/auth/DaoAuthorizableUpgradeable.sol":{"id":2,"ast":{}},"node_modules/@aragon/osx-commons-contracts/src/permission/auth/auth.sol":{"id":3,"ast":{}},"node_modules/@aragon/osx-commons-contracts/src/plugin/IPlugin.sol":{"id":4,"ast":{}},"node_modules/@aragon/osx-commons-contracts/src/plugin/PluginUUPSUpgradeable.sol":{"id":5,"ast":{}},"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/IProposal.sol":{"id":6,"ast":{}},"node_modules/@aragon/osx-commons-contracts/src/plugin/extensions/proposal/ProposalUpgradeable.sol":{"id":7,"ast":{}},"node_modules/@aragon/osx-commons-contracts/src/utils/metadata/MetadataExtensionUpgradeable.sol":{"id":8,"ast":{}},"node_modules/@aragon/osx-commons-contracts/src/utils/versioning/IProtocolVersion.sol":{"id":9,"ast":{}},"node_modules/@aragon/osx-commons-contracts/src/utils/versioning/ProtocolVersion.sol":{"id":10,"ast":{}},"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"id":24,"ast":{}},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":25,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"id":11,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"id":12,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"id":13,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"id":14,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"id":15,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"id":16,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"id":17,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"id":18,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"id":19,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"id":20,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol":{"id":21,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"id":22,"ast":{}},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"id":23,"ast":{}},"src/Blaxblux.sol":{"id":26,"ast":{}},"src/StagedProposalProcessor.sol":{"id":27,"ast":{}},"src/libraries/Errors.sol":{"id":28,"ast":{}},"src/libraries/Permissions.sol":{"id":29,"ast":{}},"test/main.sol":{"id":30,"ast":{}}},"metadata":{"solcLongVersion":"0.8.28+commit.acc7d8f9.Darwin.appleclang","solcVersion":"0.8.28","zksolcVersion":"1.5.7","zksyncSolcVersion":"0.8.28-1.0.1"}},"solcLongVersion":"0.8.28","solcVersion":"0.8.28"}